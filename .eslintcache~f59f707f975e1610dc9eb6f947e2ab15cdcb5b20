[{"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\index.js":"1","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\reportWebVitals.js":"2","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\index.js":"3","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\utils\\setAuthToken.js":"4","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\store\\store.js":"5","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Constants\\browserRoutes.js":"6","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\authRoutes.js":"7","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\hoc\\privateRoute.js":"8","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\reducerIndex.js":"9","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\hoc\\_Aux\\index.js":"10","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\Loader\\index.js":"11","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\index.js":"12","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\index.js":"13","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\admin.js":"14","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\auth.js":"15","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\kyc.js":"16","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\exchange.js":"17","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\ito.js":"18","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\wallet.js":"19","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\userManagement.js":"20","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\subscription.js":"21","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\pagesRoutes.js":"22","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\actions\\types.js":"23","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\index.js":"24","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\index.js":"25","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\BreadCrumb\\index.js":"26","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Footer\\index.js":"27","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\PageTitle\\index.js":"28","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\SignInForm\\index.js":"29","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\SmsVerificationForm\\index.js":"30","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\EmailVerificationForm\\index.js":"31","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\GoogleVerificationForm\\index.js":"32","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\CreateNewVote\\index.js":"33","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\index.js":"34","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVotingList\\index.js":"35","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\CommonComponents\\votingDetails.js":"36","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\index.js":"37","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AdminDetails\\index.js":"38","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Calculator\\index.js":"39","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AddNewAdmin\\index.js":"40","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\EditProfile\\index.js":"41","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\index.js":"42","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Subscription\\index.js":"43","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\UserDetails\\index.js":"44","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\ListofAllUsers\\index.js":"45","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\index.js":"46","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\index.js":"47","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\menu-items.js":"48","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\index.js":"49","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\index.js":"50","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RequestStatus\\index.js":"51","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\index.js":"52","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\BankPayment\\index.js":"53","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\index.js":"54","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\index.js":"55","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\ComletedOrders\\index.js":"56","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\index.js":"57","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\ItoDetails\\index.js":"58","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateNewIto\\index.js":"59","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateToken\\index.js":"60","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\InvestmentDetails\\index.js":"61","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\actions\\actions.js":"62","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\dummyData.js":"63","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVotingList\\pastVotingDataItem.js":"64","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\ListofAllUsers\\userDataItem.js":"65","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Constants\\config.js":"66","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\UserDetails\\userProfileInfo.js":"67","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\InvestmentDetails\\investmentDetailsItem.js":"68","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\dummyData.js":"69","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\OngoingVoting\\index.js":"70","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\SelectITO\\index.js":"71","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\UpcomingVoting\\index.js":"72","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVoting\\index.js":"73","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AllUsersData\\index.js":"74","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\NavRight\\index.js":"75","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\NavLeft\\index.js":"76","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\index.js":"77","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\shortReport.js":"78","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RequestStatus\\StatusModal.js":"79","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\BankPayment\\SubmitConfirmationModal.js":"80","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateNewIto\\CreateItoModal.js":"81","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\ComletedOrders\\CompletedOrdersItem.js":"82","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SelectITO\\index.js":"83","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RejectedRequests\\index.js":"84","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\PendingRequests\\index.js":"85","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\userChart.js":"86","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\tokenChart.js":"87","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\investmentChart.js":"88","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\exchangeChart.js":"89","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\itoSeriesChart.js":"90","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Past\\index.js":"91","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Upcoming\\index.js":"92","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\kycServices.js":"93","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\exchange.js":"94","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\itoServices.js":"95","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\authServices.js":"96","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\adminManagementServices.js":"97","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\walletService.js":"98","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\subscription.js":"99","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\userManagement.js":"100","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\UpcomingVoting\\upComingVotingItem.js":"101","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\OngoingVoting\\onGoingVotingItem.js":"102","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVoting\\pastVotingItem.js":"103","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AllUsersData\\userItem.js":"104","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SingleApprovedRequests\\index.js":"105","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\ApprovedRequests\\index.js":"106","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\TokensDetail\\index.js":"107","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\WalletCards\\index.js":"108","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AvailableTokens\\index.js":"109","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\AvailableTokens\\index.js":"110","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\BuyRequests\\index.js":"111","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\SellRequests\\index.js":"112","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Ongoing\\index.js":"113","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\OnholdTokens\\index.js":"114","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\TokensList\\index.js":"115","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\PendingRequests\\pendingRequestItem.js":"116","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RejectedRequests\\rejectedRequestItem.js":"117","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\dummyData.js":"118","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Past\\pasItem.js":"119","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Upcoming\\upComingItem.js":"120","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\serverRoutes.js":"121","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\NavGroup\\index.js":"122","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\ApprovedRequests\\approvedRequestItem.js":"123","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\dummyData.js":"124","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\TokensDetail\\TokensDetailItem.js":"125","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SingleApprovedRequests\\SingleApprovedItem.js":"126","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\dummyData.js":"127","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Ongoing\\onGoingItem.js":"128","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\BuyRequests\\BuyRequestsItem.js":"129","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AvailableTokens\\AvailableTokensItem.js":"130","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\dummyData.js":"131","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\SellRequests\\SellRequestsItem.js":"132","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\OnholdTokens\\OnholdTokensItem.js":"133","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\AvailableTokens\\AvailableTokensItem.js":"134","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\TokensList\\TokensListItem.js":"135","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\NavItem\\index.js":"136","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\votingServices.js":"137","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\voting.js":"138","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\adminRequest.js":"139","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\adminRequest.js":"140","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\index.js":"141","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\DepositeDetails\\index.js":"142","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\confirmRequesetItem.js":"143","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\calculator.js":"144","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\calculator.js":"145","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\index.js":"146","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditHome\\index.js":"147","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditAbout\\index.js":"148","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\ItoDetails\\BlockUnblockModal.js":"149","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\dashboardServices.js":"150","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\dashboard.js":"151","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\data\\index.js":"152","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\SingleApproved\\index.js":"153","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\SingleApproved\\singleApprovedItem.js":"154","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\ApprovedRequests\\index.js":"155","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\ApprovedRequests\\requestsItem.js":"156","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\GoogleAuthQRModal.js":"157","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\auditLogs.js":"158","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\contentManagement.js":"159","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\contentManagement.js":"160","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\auditLogs.js":"161","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AuditLogs\\index.js":"162","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditContact\\index.js":"163","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AuditLogs\\auditItem.js":"164"},{"size":1194,"mtime":1613480015767,"results":"165","hashOfConfig":"166"},{"size":375,"mtime":1613030464625,"results":"167","hashOfConfig":"166"},{"size":2681,"mtime":1613030464587,"results":"168","hashOfConfig":"166"},{"size":246,"mtime":1613030464625,"results":"169","hashOfConfig":"166"},{"size":768,"mtime":1613480095719,"results":"170","hashOfConfig":"166"},{"size":3103,"mtime":1615532007346,"results":"171","hashOfConfig":"166"},{"size":317,"mtime":1613030464609,"results":"172","hashOfConfig":"166"},{"size":852,"mtime":1613030464625,"results":"173","hashOfConfig":"166"},{"size":787,"mtime":1615532007348,"results":"174","hashOfConfig":"166"},{"size":61,"mtime":1613030464625,"results":"175","hashOfConfig":"166"},{"size":240,"mtime":1613030464587,"results":"176","hashOfConfig":"166"},{"size":1904,"mtime":1613030464587,"results":"177","hashOfConfig":"166"},{"size":2569,"mtime":1615198823399,"results":"178","hashOfConfig":"166"},{"size":1995,"mtime":1613889017155,"results":"179","hashOfConfig":"166"},{"size":2661,"mtime":1615532007347,"results":"180","hashOfConfig":"166"},{"size":1367,"mtime":1613030464609,"results":"181","hashOfConfig":"166"},{"size":2905,"mtime":1613030464609,"results":"182","hashOfConfig":"166"},{"size":1217,"mtime":1613991500000,"results":"183","hashOfConfig":"166"},{"size":1073,"mtime":1613030464609,"results":"184","hashOfConfig":"166"},{"size":1405,"mtime":1615187664247,"results":"185","hashOfConfig":"166"},{"size":567,"mtime":1613030464609,"results":"186","hashOfConfig":"166"},{"size":7629,"mtime":1615532007348,"results":"187","hashOfConfig":"166"},{"size":9540,"mtime":1615532007346,"results":"188","hashOfConfig":"166"},{"size":310,"mtime":1613030464587,"results":"189","hashOfConfig":"166"},{"size":557,"mtime":1613030464587,"results":"190","hashOfConfig":"166"},{"size":7618,"mtime":1614154780790,"results":"191","hashOfConfig":"166"},{"size":392,"mtime":1613030464587,"results":"192","hashOfConfig":"166"},{"size":5056,"mtime":1614155135591,"results":"193","hashOfConfig":"166"},{"size":3011,"mtime":1615189544024,"results":"194","hashOfConfig":"166"},{"size":2461,"mtime":1615188082207,"results":"195","hashOfConfig":"166"},{"size":2038,"mtime":1615199164305,"results":"196","hashOfConfig":"166"},{"size":2256,"mtime":1615198382030,"results":"197","hashOfConfig":"166"},{"size":8103,"mtime":1615187664244,"results":"198","hashOfConfig":"166"},{"size":3461,"mtime":1615187664245,"results":"199","hashOfConfig":"166"},{"size":2309,"mtime":1614060450775,"results":"200","hashOfConfig":"166"},{"size":7693,"mtime":1615187664244,"results":"201","hashOfConfig":"166"},{"size":2656,"mtime":1613890185109,"results":"202","hashOfConfig":"166"},{"size":6580,"mtime":1615187664236,"results":"203","hashOfConfig":"166"},{"size":6457,"mtime":1614148663444,"results":"204","hashOfConfig":"166"},{"size":7013,"mtime":1615187664235,"results":"205","hashOfConfig":"166"},{"size":4935,"mtime":1615187664240,"results":"206","hashOfConfig":"166"},{"size":11614,"mtime":1615188208429,"results":"207","hashOfConfig":"166"},{"size":8112,"mtime":1615187664241,"results":"208","hashOfConfig":"166"},{"size":4314,"mtime":1613901265247,"results":"209","hashOfConfig":"166"},{"size":3861,"mtime":1615187664242,"results":"210","hashOfConfig":"166"},{"size":1259,"mtime":1613030464609,"results":"211","hashOfConfig":"166"},{"size":1147,"mtime":1613030464609,"results":"212","hashOfConfig":"166"},{"size":7719,"mtime":1615532007355,"results":"213","hashOfConfig":"166"},{"size":1356,"mtime":1614749109285,"results":"214","hashOfConfig":"166"},{"size":1401,"mtime":1613030464603,"results":"215","hashOfConfig":"166"},{"size":7642,"mtime":1615187664240,"results":"216","hashOfConfig":"166"},{"size":1653,"mtime":1613030464603,"results":"217","hashOfConfig":"166"},{"size":15665,"mtime":1615187664245,"results":"218","hashOfConfig":"166"},{"size":1243,"mtime":1613030464603,"results":"219","hashOfConfig":"166"},{"size":1311,"mtime":1613030464609,"results":"220","hashOfConfig":"166"},{"size":3976,"mtime":1614684131465,"results":"221","hashOfConfig":"166"},{"size":646,"mtime":1613030464603,"results":"222","hashOfConfig":"166"},{"size":3622,"mtime":1613993193870,"results":"223","hashOfConfig":"166"},{"size":5891,"mtime":1615187664239,"results":"224","hashOfConfig":"166"},{"size":4659,"mtime":1614148663448,"results":"225","hashOfConfig":"166"},{"size":3837,"mtime":1613375545248,"results":"226","hashOfConfig":"166"},{"size":2315,"mtime":1615532007346,"results":"227","hashOfConfig":"166"},{"size":2697,"mtime":1613030464609,"results":"228","hashOfConfig":"166"},{"size":960,"mtime":1614060450775,"results":"229","hashOfConfig":"166"},{"size":1279,"mtime":1615187664242,"results":"230","hashOfConfig":"166"},{"size":92,"mtime":1613030464609,"results":"231","hashOfConfig":"166"},{"size":2654,"mtime":1614758161847,"results":"232","hashOfConfig":"166"},{"size":592,"mtime":1615187664241,"results":"233","hashOfConfig":"166"},{"size":5274,"mtime":1613030464609,"results":"234","hashOfConfig":"166"},{"size":2963,"mtime":1613820011859,"results":"235","hashOfConfig":"166"},{"size":515,"mtime":1613030464609,"results":"236","hashOfConfig":"166"},{"size":2877,"mtime":1613820011860,"results":"237","hashOfConfig":"166"},{"size":3175,"mtime":1614060450774,"results":"238","hashOfConfig":"166"},{"size":2940,"mtime":1613901361731,"results":"239","hashOfConfig":"166"},{"size":2494,"mtime":1613973193873,"results":"240","hashOfConfig":"166"},{"size":1011,"mtime":1613030464587,"results":"241","hashOfConfig":"166"},{"size":478,"mtime":1613030464587,"results":"242","hashOfConfig":"166"},{"size":2428,"mtime":1614670964309,"results":"243","hashOfConfig":"166"},{"size":2251,"mtime":1613030464609,"results":"244","hashOfConfig":"166"},{"size":1281,"mtime":1613030464609,"results":"245","hashOfConfig":"166"},{"size":994,"mtime":1613030464603,"results":"246","hashOfConfig":"166"},{"size":806,"mtime":1614684218784,"results":"247","hashOfConfig":"166"},{"size":515,"mtime":1613030464609,"results":"248","hashOfConfig":"166"},{"size":2929,"mtime":1614758161845,"results":"249","hashOfConfig":"166"},{"size":2904,"mtime":1614758161844,"results":"250","hashOfConfig":"166"},{"size":1618,"mtime":1614309297307,"results":"251","hashOfConfig":"166"},{"size":1830,"mtime":1614594391846,"results":"252","hashOfConfig":"166"},{"size":1727,"mtime":1614594590319,"results":"253","hashOfConfig":"166"},{"size":1694,"mtime":1614667661535,"results":"254","hashOfConfig":"166"},{"size":1686,"mtime":1613030464603,"results":"255","hashOfConfig":"166"},{"size":2794,"mtime":1613901168050,"results":"256","hashOfConfig":"166"},{"size":2777,"mtime":1613901181657,"results":"257","hashOfConfig":"166"},{"size":4143,"mtime":1615532007353,"results":"258","hashOfConfig":"166"},{"size":7450,"mtime":1615532007352,"results":"259","hashOfConfig":"166"},{"size":4646,"mtime":1615532007353,"results":"260","hashOfConfig":"166"},{"size":17833,"mtime":1615532007351,"results":"261","hashOfConfig":"166"},{"size":5425,"mtime":1615532007349,"results":"262","hashOfConfig":"166"},{"size":2525,"mtime":1615532007355,"results":"263","hashOfConfig":"166"},{"size":2742,"mtime":1615532007354,"results":"264","hashOfConfig":"166"},{"size":3149,"mtime":1615532007354,"results":"265","hashOfConfig":"166"},{"size":900,"mtime":1614060450776,"results":"266","hashOfConfig":"166"},{"size":910,"mtime":1614060450774,"results":"267","hashOfConfig":"166"},{"size":926,"mtime":1614060450774,"results":"268","hashOfConfig":"166"},{"size":1094,"mtime":1615187664236,"results":"269","hashOfConfig":"166"},{"size":2982,"mtime":1614758161845,"results":"270","hashOfConfig":"166"},{"size":3018,"mtime":1614758161843,"results":"271","hashOfConfig":"166"},{"size":2663,"mtime":1613900820059,"results":"272","hashOfConfig":"166"},{"size":1787,"mtime":1614148663452,"results":"273","hashOfConfig":"166"},{"size":2732,"mtime":1613030464603,"results":"274","hashOfConfig":"166"},{"size":2799,"mtime":1613030464603,"results":"275","hashOfConfig":"166"},{"size":2865,"mtime":1613840618624,"results":"276","hashOfConfig":"166"},{"size":2881,"mtime":1613840628332,"results":"277","hashOfConfig":"166"},{"size":2796,"mtime":1613993252237,"results":"278","hashOfConfig":"166"},{"size":2778,"mtime":1613030464603,"results":"279","hashOfConfig":"166"},{"size":2718,"mtime":1613030464603,"results":"280","hashOfConfig":"166"},{"size":668,"mtime":1613030464609,"results":"281","hashOfConfig":"166"},{"size":674,"mtime":1613030464609,"results":"282","hashOfConfig":"166"},{"size":999,"mtime":1613030464609,"results":"283","hashOfConfig":"166"},{"size":846,"mtime":1613030464609,"results":"284","hashOfConfig":"166"},{"size":990,"mtime":1613984663637,"results":"285","hashOfConfig":"166"},{"size":4151,"mtime":1615532053642,"results":"286","hashOfConfig":"166"},{"size":671,"mtime":1613030464587,"results":"287","hashOfConfig":"166"},{"size":676,"mtime":1613030464609,"results":"288","hashOfConfig":"166"},{"size":1412,"mtime":1613030464609,"results":"289","hashOfConfig":"166"},{"size":377,"mtime":1613030464609,"results":"290","hashOfConfig":"166"},{"size":676,"mtime":1613030464609,"results":"291","hashOfConfig":"166"},{"size":3211,"mtime":1613030464603,"results":"292","hashOfConfig":"166"},{"size":1383,"mtime":1613993280295,"results":"293","hashOfConfig":"166"},{"size":761,"mtime":1613840661360,"results":"294","hashOfConfig":"166"},{"size":411,"mtime":1613030464603,"results":"295","hashOfConfig":"166"},{"size":2451,"mtime":1613030464609,"results":"296","hashOfConfig":"166"},{"size":702,"mtime":1613840673824,"results":"297","hashOfConfig":"166"},{"size":1126,"mtime":1613030464603,"results":"298","hashOfConfig":"166"},{"size":1127,"mtime":1613030464603,"results":"299","hashOfConfig":"166"},{"size":906,"mtime":1613030464603,"results":"300","hashOfConfig":"166"},{"size":842,"mtime":1613030464587,"results":"301","hashOfConfig":"166"},{"size":5481,"mtime":1615532007355,"results":"302","hashOfConfig":"166"},{"size":1412,"mtime":1615187664248,"results":"303","hashOfConfig":"166"},{"size":3551,"mtime":1615532007350,"results":"304","hashOfConfig":"166"},{"size":1350,"mtime":1614758161850,"results":"305","hashOfConfig":"166"},{"size":4463,"mtime":1614759618886,"results":"306","hashOfConfig":"166"},{"size":5493,"mtime":1614759394689,"results":"307","hashOfConfig":"166"},{"size":725,"mtime":1613666184724,"results":"308","hashOfConfig":"166"},{"size":1138,"mtime":1615532007351,"results":"309","hashOfConfig":"166"},{"size":558,"mtime":1613723366765,"results":"310","hashOfConfig":"166"},{"size":3538,"mtime":1615532007345,"results":"311","hashOfConfig":"166"},{"size":6151,"mtime":1615532007345,"results":"312","hashOfConfig":"166"},{"size":2046,"mtime":1615532007344,"results":"313","hashOfConfig":"166"},{"size":1011,"mtime":1613990372500,"results":"314","hashOfConfig":"166"},{"size":5951,"mtime":1615532007352,"results":"315","hashOfConfig":"166"},{"size":1462,"mtime":1614670856049,"results":"316","hashOfConfig":"166"},{"size":2322,"mtime":1614309336441,"results":"317","hashOfConfig":"166"},{"size":2857,"mtime":1614758161838,"results":"318","hashOfConfig":"166"},{"size":749,"mtime":1614758161838,"results":"319","hashOfConfig":"166"},{"size":2835,"mtime":1614759582762,"results":"320","hashOfConfig":"166"},{"size":805,"mtime":1614169731207,"results":"321","hashOfConfig":"166"},{"size":1591,"mtime":1614951664781,"results":"322","hashOfConfig":"166"},{"size":560,"mtime":1615532007347,"results":"323","hashOfConfig":"166"},{"size":2886,"mtime":1615532007351,"results":"324","hashOfConfig":"166"},{"size":878,"mtime":1615532007348,"results":"325","hashOfConfig":"166"},{"size":1144,"mtime":1615532007350,"results":"326","hashOfConfig":"166"},{"size":3130,"mtime":1615532007343,"results":"327","hashOfConfig":"166"},{"size":2496,"mtime":1615532007344,"results":"328","hashOfConfig":"166"},{"size":257,"mtime":1615532007343,"results":"329","hashOfConfig":"166"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"17wu4tw",{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"332"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"332"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"332"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"332"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"332"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"332"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"332"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"332"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"332"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"332"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"332"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"332"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"332"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"332"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"332"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"332"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"332"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"332"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"332"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"332"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"332"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"332"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"332"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"332"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"332"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"332"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"332"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"332"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"332"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"332"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"332"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"332"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"332"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"332"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"332"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"332"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"531"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"332"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"332"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"332"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"332"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"332"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"556"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"332"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"332"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"332"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"332"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"332"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"332"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"332"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"332"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"332"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"332"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"332"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"332"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"332"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"332"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"332"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"332"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"332"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"332"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"332"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"332"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"332"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"332"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"332"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"332"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"332"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"332"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"332"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"332"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"332"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"332"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"332"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"332"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"332"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"332"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"332"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"332"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"332"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"332"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"332"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"332"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"332"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"332"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"741","messages":"742","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"743","messages":"744","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\index.js",[],["747","748"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\reportWebVitals.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\utils\\setAuthToken.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\store\\store.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Constants\\browserRoutes.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\authRoutes.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\hoc\\privateRoute.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\reducerIndex.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\hoc\\_Aux\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\Loader\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\index.js",["749","750","751"],"import React, { Suspense, useContext, useEffect, useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport Navigation from \"./Navigation\";\r\nimport routes from \"../../../Routes/pagesRoutes\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport browserRoutes from \"../../../Constants/browserRoutes\";\r\nimport PrivateRoute from \"../../../hoc/privateRoute\";\r\nimport Loader from \"../Loader\";\r\nimport Footer from \"./Footer\";\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport PageTitle from \"./PageTitle\";\r\nimport { SideNavToggleContext } from \"../../index\";\r\n\r\nconst AdminLayout = () => {\r\n  const [sideNavToggleValue, setSideNavToggleValue] = useState(\"\");\r\n\r\n  const sideNavToggleContext = useContext(SideNavToggleContext);\r\n  const { sideNavToggle } = sideNavToggleContext;\r\n\r\n  useEffect(() => {\r\n    if (sideNavToggle) setSideNavToggleValue(\"sb-sidenav-toggled\");\r\n    else setSideNavToggleValue(\"\");\r\n  }, [sideNavToggle]);\r\n\r\n  const menu = routes.map((route, index) => {\r\n    return route.component ? (\r\n      <PrivateRoute\r\n        key={index}\r\n        exact={route.exact} \r\n        path={route.path}\r\n        name={route.name}\r\n        component={route.component}\r\n      />\r\n    ) : null;\r\n  });\r\n\r\n  return (\r\n    <div className={`sb-nav-fixed ${sideNavToggleValue}`}>\r\n      <NavBar />\r\n      <div id=\"layoutSidenav\">\r\n        <Navigation />\r\n        <div id=\"layoutSidenav_content\">\r\n          <main>\r\n            <div className=\"container-fluid\">\r\n              <BreadCrumb />\r\n              <div className=\"row\">\r\n                <PageTitle />\r\n                <Suspense fallback={<Loader />}>\r\n                  <Switch>\r\n                    {menu}\r\n                  </Switch>\r\n                </Suspense>\r\n              </div>\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\index.js",["752"],"import React, { Fragment, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SignInForm from \"./SignInForm\";\r\nimport logo from \"../../../App/Assets/images/danisium-logo-02.png\";\r\nimport SmsVerificationForm from \"./SmsVerificationForm\";\r\nimport EmailVerificationForm from \"./EmailVerificationForm\";\r\nimport GoogleVerificationForm from \"./GoogleVerificationForm\";\r\n\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nconst SignIn = ({ history }) => {\r\n  const [verificationPage, setVerificationPage] = useState({\r\n    emailPage: false,\r\n    smsPage: false,\r\n    googlePage: false,\r\n  });\r\n  const { emailPage, smsPage, googlePage } = verificationPage;\r\n  const [requestIdSms, setRequestIdSms] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const auth = useSelector((state) => state.auth.authentication);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"login-pge row m-0\"\r\n        style={{ justifyItems: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <div className=\"col-sm-5\" style={{ backgroundColor: \"#038ff9\" }}>\r\n          <div className=\"logo\">\r\n            <img\r\n              className=\"img2\"\r\n              src={logo}\r\n              style={{ width: \"300px\", height: \"100px\" }}\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-7\">\r\n          {!emailPage && !smsPage && !googlePage && (\r\n            <SignInForm\r\n              setVerificationPage={setVerificationPage}\r\n              verificationPage={verificationPage}\r\n              setRequestIdSms={setRequestIdSms}\r\n              setUserId={setUserId}\r\n            />\r\n          )}\r\n          {emailPage && !smsPage && !googlePage && (\r\n            <EmailVerificationForm\r\n              setVerificationPage={setVerificationPage}\r\n              verificationPage={verificationPage}\r\n              userId={userId}\r\n              auth={auth}\r\n            />\r\n          )}\r\n          {!emailPage && smsPage && !googlePage && (\r\n            <SmsVerificationForm\r\n              setVerificationPage={setVerificationPage}\r\n              requestIdSms={requestIdSms}\r\n              userId={userId}\r\n              auth={auth}\r\n            />\r\n          )}\r\n          {!emailPage && !smsPage && googlePage && (\r\n            <GoogleVerificationForm\r\n              setVerificationPage={setVerificationPage}\r\n              userId={userId}\r\n              auth={auth}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\admin.js",["753","754","755"],"import {\r\n  GET_ADMIN_LIST_SUCCESS,\r\n  GET_ADMIN_LIST_ERR,\r\n  GET_ADMIN_BY_ID_ERR,\r\n  GET_ADMIN_BY_ID_SUCCESS,\r\n  GET_ADMIN_ITO_SUCCESS,\r\n  GET_ADMIN_ITO_ERR,\r\n  ADD_NEW_ADMIN_ERR,\r\n  ADD_NEW_ADMIN_SUCCESS,\r\n  DELETE_ADMIN_ERR,\r\n  DELETE_ADMIN_SUCCESS,\r\n  ADMIN_LINK_ITO_ERR,\r\n  ADMIN_LINK_ITO_SUCCESS,\r\n  ALL_ITO_SUCCESS,\r\n  ALL_ITO_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  adminList: [],\r\n  adminDetails: {},\r\n  adminITOList: [],\r\n  adminLinkITO: {},\r\n  addNewAdmin: {},\r\n  deleteAdmin: {},\r\n  allItos: [],\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ALL_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ADMIN_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminList: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ADMIN_LIST_ERR:\r\n    case GET_ADMIN_BY_ID_ERR:\r\n    case GET_ADMIN_ITO_ERR:\r\n    case ADD_NEW_ADMIN_ERR:\r\n    case DELETE_ADMIN_ERR:\r\n    case ADMIN_LINK_ITO_ERR:\r\n    case ALL_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case ADMIN_LINK_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminLinkITO: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ADMIN_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminDetails: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ADMIN_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminITOList: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_NEW_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addNewAdmin: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminList: state.adminList.filter((item) => item.id !== payload),\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\auth.js",["756"],"import {\r\n  REGISTER_MSG,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  VERIFY_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  FORGET_SUCCESS,\r\n  FORGET_FAIL,\r\n  FORGET_MSG,\r\n  RESET_SUCCESS,\r\n  RESET_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  ERR_USERS,\r\n  LOGOUT,\r\n  LOGIN_MSG,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_ERR,\r\n  IS_EMAIL_AUTH_ON_SUCCESS,\r\n  IS_EMAIL_AUTH_ON_ERR,\r\n  IS_GOOGLE_AUTH_ON_SUCCESS,\r\n  IS_GOOGLE_AUTH_ON_ERR,\r\n  IS_SMS_AUTH_ON_SUCCESS,\r\n  IS_SMS_AUTH_ON_ERR,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: localStorage.getItem(\"user\"),\r\n  loading: true,\r\n  isAuthenticated: null,\r\n  userDetails: {},\r\n  updatePassword: {},\r\n  users: [],\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_MSG:\r\n    case REGISTER_SUCCESS:\r\n    case FORGET_MSG:\r\n    case FORGET_SUCCESS:\r\n    case RESET_SUCCESS:\r\n    case LOGIN_MSG:\r\n    case UPDATE_PROFILE_SUCCESS:\r\n    case UPDATE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case IS_GOOGLE_AUTH_ON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          is_google_authentication_on: payload.status,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case IS_SMS_AUTH_ON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          is_number_verification_on: payload.status,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case IS_EMAIL_AUTH_ON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          is_email_verification_on: payload.status,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case ERR_USERS:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case VERIFY_FAIL:\r\n    case FORGET_FAIL:\r\n    case RESET_FAIL:\r\n    case IS_EMAIL_AUTH_ON_ERR:\r\n    case IS_GOOGLE_AUTH_ON_ERR:\r\n    case IS_SMS_AUTH_ON_ERR:\r\n    case UPDATE_PROFILE_ERR:\r\n    case UPDATE_PASSWORD_ERR:\r\n      return {\r\n        ...state,\r\n        errors: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(payload.userDetails));\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        users: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\kyc.js",["757"],"import {\r\n  PENDING_KYC_SUCCESS,\r\n  PENDING_KYC_ERR,\r\n  APPROVED_KYC_SUCCESS,\r\n  APPROVED_KYC_ERR,\r\n  REJECTED_KYC_SUCCESS,\r\n  REJECTED_KYC_ERR,\r\n  GET_KYC_SUCCESS,\r\n  GET_KYC_ERR,\r\n  KYC_UPDATE_SUCCESS,\r\n  KYC_UPDATE_ERR,\r\n  SINGLE_APPROVED_KYC_ERR,\r\n  SINGLE_APPROVED_KYC_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  singleApprovedData: {},\r\n  pendingData: {},\r\n  approvedData: {},\r\n  rejectedData: {},\r\n  data: {},\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SINGLE_APPROVED_KYC_SUCCESS:\r\n    case PENDING_KYC_SUCCESS:\r\n    case APPROVED_KYC_SUCCESS:\r\n    case REJECTED_KYC_SUCCESS:\r\n    case GET_KYC_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case KYC_UPDATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          kyc_status: payload,\r\n          verified_by_superadmin: true,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case SINGLE_APPROVED_KYC_ERR:\r\n    case PENDING_KYC_ERR:\r\n    case APPROVED_KYC_ERR:\r\n    case REJECTED_KYC_ERR:\r\n    case GET_KYC_ERR:\r\n    case KYC_UPDATE_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\exchange.js",["758"],"import {\r\n  GET_TOKENS_ERR,\r\n  GET_TOKENS_SUCCESS,\r\n  TOKEN_ADDED_EXCHANGE_SUCCESS,\r\n  TOKEN_ADDED_EXCHANGE_ERR,\r\n  GET_ONHOLD_TOKENS_SUCCESS,\r\n  GET_ONHOLD_TOKENS_ERR,\r\n  GET_UNHOLD_TOKENS_SUCCESS,\r\n  GET_UNHOLD_TOKENS_ERR,\r\n  TOKEN_UNBLOCKED_SUCCESS,\r\n  TOKEN_UNBLOCKED_ERR,\r\n  TOKEN_BLOCKED_SUCCESS,\r\n  TOKEN_BLOCKED_ERR,\r\n  GET_BUY_REQUEST_LIST_SUCCESS,\r\n  GET_BUY_REQUEST_LIST_ERR,\r\n  GET_SELL_REQUEST_LIST_SUCCESS,\r\n  GET_SELL_REQUEST_LIST_ERR,\r\n  GET_COMPLETED_ORDERS_SUCCESS,\r\n  GET_COMPLETED_ORDERS_ERR,\r\n  CREATE_TOKENS_SUCCESS,\r\n  CREATE_TOKENS_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  tokenData: {},\r\n  unholdData: {},\r\n  onholdData: {},\r\n  buyRequestList: [],\r\n  sellRequestList: [],\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_TOKENS_SUCCESS:\r\n    case GET_ONHOLD_TOKENS_SUCCESS:\r\n    case GET_UNHOLD_TOKENS_SUCCESS:\r\n    case GET_COMPLETED_ORDERS_SUCCESS:\r\n    case CREATE_TOKENS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case TOKEN_ADDED_EXCHANGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tokenData: {\r\n          ...state.tokenData,\r\n          data: state.tokenData.data.filter((item) => item.id !== payload),\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case TOKEN_UNBLOCKED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        onholdData: {\r\n          ...state.onholdData,\r\n          data: state.onholdData.data.filter((item) => item.id !== payload.id),\r\n        },\r\n        unholdData: {\r\n          ...state.unholdData,\r\n          data: [...state.unholdData.data, payload.data.data],\r\n        },\r\n        loading: false,\r\n      };\r\n    case TOKEN_BLOCKED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        unholdData: {\r\n          ...state.unholdData,\r\n          data: state.unholdData.data.filter((item) => item.id !== payload.id),\r\n        },\r\n        onholdData: {\r\n          ...state.onholdData,\r\n          data: [...state.onholdData.data, payload.data.data],\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case GET_BUY_REQUEST_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        buyRequestList: payload,\r\n        loading: false,\r\n      };\r\n    case GET_SELL_REQUEST_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sellRequestList: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_TOKENS_ERR:\r\n    case TOKEN_ADDED_EXCHANGE_ERR:\r\n    case GET_UNHOLD_TOKENS_ERR:\r\n    case GET_ONHOLD_TOKENS_ERR:\r\n    case TOKEN_UNBLOCKED_ERR:\r\n    case TOKEN_BLOCKED_ERR:\r\n    case GET_BUY_REQUEST_LIST_ERR:\r\n    case GET_SELL_REQUEST_LIST_ERR:\r\n    case GET_COMPLETED_ORDERS_ERR:\r\n    case CREATE_TOKENS_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\ito.js",["759"],"import {\r\n  CREATE_ITO_ERR,\r\n  CREATE_ITO_SUCCESS,\r\n  GET_ITO_ERR,\r\n  GET_ITO_SUCCESS,\r\n  ONGOING_ITO_ERR,\r\n  ONGOING_ITO_SUCCESS,\r\n  PAST_ITO_ERR,\r\n  PAST_ITO_SUCCESS,\r\n  UPCOMING_ITO_ERR,\r\n  UPCOMING_ITO_SUCCESS,\r\n  UPDATE_ITO_SUCCESS,\r\n  UPDATE_ITO_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  ongoingData: {},\r\n  upcomingData: {},\r\n  pastData: {},\r\n  data: {},\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CREATE_ITO_SUCCESS:\r\n    case ONGOING_ITO_SUCCESS:\r\n    case UPCOMING_ITO_SUCCESS:\r\n    case PAST_ITO_SUCCESS:\r\n    case GET_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_ITO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, onhold: payload.isBlocked },\r\n        loading: false,\r\n      };\r\n\r\n    case CREATE_ITO_ERR:\r\n    case ONGOING_ITO_ERR:\r\n    case UPCOMING_ITO_ERR:\r\n    case PAST_ITO_ERR:\r\n    case GET_ITO_ERR:\r\n    case UPDATE_ITO_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\wallet.js",["760"],"import {\r\n  GET_TOKEN_LIST_SUCCESS,\r\n  GET_TOKEN_LIST_ERR,\r\n  DEPOSIT_PAYMENT_ERR,\r\n  DEPOSIT_PAYMENT_SUCCESS,\r\n  GET_WALLET_DETAILS_ERR,\r\n  GET_WALLET_DETAILS_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  depositPayment: {},\r\n  tokenList: [],\r\n  walletDetails: {},\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_TOKEN_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tokenList: payload,\r\n        loading: false,\r\n      };\r\n    case GET_WALLET_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        walletDetails: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_TOKEN_LIST_ERR:\r\n    case DEPOSIT_PAYMENT_ERR:\r\n    case GET_WALLET_DETAILS_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case DEPOSIT_PAYMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        depositPayment: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\userManagement.js",["761"],"import {\r\n  GET_USERS_LIST_SUCCESS,\r\n  GET_USERS_LIST_ERR,\r\n  GET_USER_PROFILE_SUCCESS,\r\n  GET_USER_PROFILE_ERR,\r\n  GET_INVESTMENT_DETAIL_SUCCESS,\r\n  GET_INVESTMENT_DETAIL_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  usersList: [],\r\n  userProfile: {},\r\n  investmentDetail: {},\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS_LIST_SUCCESS:\r\n    case GET_USER_PROFILE_SUCCESS:\r\n    case GET_INVESTMENT_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_USERS_LIST_ERR:\r\n    case GET_USER_PROFILE_ERR:\r\n    case GET_INVESTMENT_DETAIL_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\subscription.js",["762"],"import {\r\n  CREATE_SUBSCRIPTION_SUCCESS,\r\n  CREATE_SUBSCRIPTION_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CREATE_SUBSCRIPTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case CREATE_SUBSCRIPTION_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\pagesRoutes.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\actions\\types.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\BreadCrumb\\index.js",["763"],"import React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport navigation from \"../../../../menu-items\";\r\nimport Route from \"../../../../Constants/browserRoutes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadCrumb = () => {\r\n  // const [main, setMain] = useState([]);\r\n  const [item, setItem] = useState({});\r\n  const [subItem, setSubItem] = useState({});\r\n  const [subItemChild, setSubItemChild] = useState({});\r\n\r\n  const getCollapse = useCallback((item) => {\r\n    if (item.children) {\r\n      item.children.forEach((child) => {\r\n        //currently first one is useless\r\n        if (child.type && child.type === \"collapse\") {\r\n          getCollapse(child);\r\n        } else if (child.type && child.type === \"item\") {\r\n          if (document.location.pathname === child.url) {\r\n            // setMain(item);\r\n            setItem(child);\r\n            setSubItem({});\r\n            setSubItemChild({});\r\n          } else if (child.subItems) {\r\n            child.subItems.forEach((subItem) => {\r\n              if (subItem.type && subItem.type === \"subItem\") {\r\n                let pathname = document.location.pathname;\r\n                //////////////////////////////\r\n                let pathnameLength = pathname.split(\"/\").length;\r\n                let lastPathnameIndex = pathname.split(\"/\")[pathnameLength - 1];\r\n\r\n                //check if last params index is a number (id) or not.\r\n                if (isNaN(lastPathnameIndex)) {\r\n                  pathname = document.location.pathname;\r\n                } else {\r\n                  if (subItem && subItem.url && subItem.url.split(\":\")) {\r\n                    //Geting just those URLs where params (e.g; id) exists & Pathname and URL of subItem matches without its last index (i.e; number(e.g;2) and :id respectively)\r\n                    let subItemParamName = subItem.url.split(\":\")[1];\r\n                    if (\r\n                      subItemParamName &&\r\n                      pathname\r\n                        .split(\"/\")\r\n                        .reverse()\r\n                        .slice(1)\r\n                        .reverse()\r\n                        .join(\"/\") ===\r\n                        subItem.url\r\n                          .split(\"/\")\r\n                          .reverse()\r\n                          .slice(1)\r\n                          .reverse()\r\n                          .join(\"/\")\r\n                    ) {\r\n                      setItem(child);\r\n                      setSubItem(subItem);\r\n                      setSubItemChild({});\r\n                    }\r\n                  }\r\n                }\r\n                ////////////////////\r\n                if (pathname === subItem.url) {\r\n                  // setMain(item);\r\n                  setItem(child);\r\n                  setSubItem(subItem);\r\n                  setSubItemChild({});\r\n                } else if (subItem.subItemsChildren) {\r\n                  subItem.subItemsChildren.forEach((node) => {\r\n                    if (node.type && node.type === \"subItemChild\") {\r\n                      let pathnameNode = document.location.pathname;\r\n                      ///////////////////\r\n                      let pathnameLengthNode = pathname.split(\"/\").length;\r\n                      let lastPathnameIndexNode = pathname.split(\"/\")[\r\n                        pathnameLengthNode - 1\r\n                      ];\r\n\r\n                      //check if last params index is a number (id) or not.\r\n                      if (isNaN(lastPathnameIndexNode)) {\r\n                        pathnameNode = document.location.pathname;\r\n                      } else {\r\n                        if (node && node.url && node.url.split(\":\")) {\r\n                          //Geting just those URLs where params (e.g; id) exists & Pathname and URL of subItemChild matches without its last index (i.e; number(e.g;2) and :id respectively)\r\n                          let nodeParamName = node.url.split(\":\")[1];\r\n                          if (\r\n                            nodeParamName &&\r\n                            pathnameNode\r\n                              .split(\"/\")\r\n                              .reverse()\r\n                              .slice(1)\r\n                              .reverse()\r\n                              .join(\"/\") ===\r\n                              node.url\r\n                                .split(\"/\")\r\n                                .reverse()\r\n                                .slice(1)\r\n                                .reverse()\r\n                                .join(\"/\")\r\n                          ) {\r\n                            setItem(child);\r\n                            setSubItem(subItem);\r\n                            setSubItemChild(node);\r\n                          }\r\n                        }\r\n                      }\r\n                      ///////////////////////\r\n                      if (pathnameNode === node.url) {\r\n                        setItem(child);\r\n                        setSubItem(subItem);\r\n                        setSubItemChild(node);\r\n                      }\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigation.items &&\r\n      navigation.items.forEach((item, index) => {\r\n        if (item.type && item.type === \"group\") {\r\n          getCollapse(item, index);\r\n        }\r\n        return false;\r\n      });\r\n  }, [getCollapse, window.location.pathname]);\r\n\r\n  let title =\r\n    Object.keys(subItemChild).length !== 0\r\n      ? `${subItemChild.title} | Dinisium`\r\n      : Object.keys(subItem).length !== 0\r\n      ? `${subItem.title} | Dinisium`\r\n      : Object.keys(item).length !== 0 && `${item.title} | Dinisium`;\r\n\r\n  document.title = title;\r\n\r\n  return (\r\n    <ol className=\"breadcrumb mt-4 mb-4\">\r\n      {item.breadcrumbs && (\r\n        <Fragment>\r\n          {Object.keys(subItem).length === 0 &&\r\n            Object.keys(subItemChild).length === 0 && (\r\n              <>\r\n                <li className=\"breadcrumb-item active\">\r\n                  <Link to={Route.DASHBOARD}>\r\n                    <i className=\"fas fa-home\"></i>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"breadcrumb-item active\">{item.title}</li>\r\n              </>\r\n            )}\r\n\r\n          {subItem.breadcrumbs && Object.keys(subItemChild).length === 0 && (\r\n            <>\r\n              <li className=\"breadcrumb-item active\">\r\n                <Link to={Route.DASHBOARD}>\r\n                  <i className=\"fas fa-home\"></i>\r\n                </Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">\r\n                <Link to={item.url}>{item.title}</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">{subItem.title}</li>\r\n            </>\r\n          )}\r\n          {subItem.breadcrumbs && subItemChild.breadcrumbs && (\r\n            <>\r\n              <li className=\"breadcrumb-item active\">\r\n                <Link to={Route.DASHBOARD}>\r\n                  <i className=\"fas fa-home\"></i>\r\n                </Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">\r\n                <Link to={item.url}>{item.title}</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">\r\n                <Link to={subItem.url}>{subItem.title}</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">{subItemChild.title}</li>\r\n            </>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </ol>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Footer\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\PageTitle\\index.js",["764"],"import React, { useEffect, useState } from \"react\";\r\nimport navigation from \"../../../../menu-items\";\r\n\r\nconst PageTitle = () => {\r\n  const [item, setItem] = useState({});\r\n  const [subItem, setSubItem] = useState({});\r\n  const [subItemChild, setSubItemChild] = useState({});\r\n\r\n  useEffect(() => {\r\n    navigation.items.forEach((item) => {\r\n      if (item.children) {\r\n        item.children.forEach((child) => {\r\n          if (window.location.pathname === child.url) {\r\n            setItem(child);\r\n            setSubItem({});\r\n            setSubItemChild({});\r\n          } else if (child.subItems) {\r\n            child.subItems.forEach((subItem) => {\r\n              let pathname = document.location.pathname;\r\n              //////////////////////////////\r\n              let pathnameLength = pathname.split(\"/\").length;\r\n              let lastPathnameIndex = pathname.split(\"/\")[pathnameLength - 1];\r\n\r\n              //check if last params index is a number (id) or not.\r\n              if (isNaN(lastPathnameIndex)) {\r\n                pathname = document.location.pathname;\r\n              } else {\r\n                if (subItem && subItem.url && subItem.url.split(\":\")) {\r\n                  //Geting just those URLs where params (e.g; id) exists & Pathname and URL of subItem matches without its last index (i.e; number(e.g;2) and :id respectively)\r\n                  let subItemParamName = subItem.url.split(\":\")[1];\r\n                  if (\r\n                    subItemParamName &&\r\n                    pathname\r\n                      .split(\"/\")\r\n                      .reverse()\r\n                      .slice(1)\r\n                      .reverse()\r\n                      .join(\"/\") ===\r\n                      subItem.url\r\n                        .split(\"/\")\r\n                        .reverse()\r\n                        .slice(1)\r\n                        .reverse()\r\n                        .join(\"/\")\r\n                  ) {\r\n                    setSubItem(subItem);\r\n                    setItem({});\r\n                    setSubItemChild({});\r\n                  }\r\n                }\r\n              }\r\n              ////////////////////\r\n              if (pathname === subItem.url) {\r\n                setSubItem(subItem);\r\n                setItem({});\r\n                setSubItemChild({});\r\n              } else if (subItem.subItemsChildren) {\r\n                subItem.subItemsChildren.forEach((node) => {\r\n                  let pathnameNode = document.location.pathname;\r\n                  ////////////////////////\r\n                  let pathnameLengthNode = pathname.split(\"/\").length;\r\n                  let lastPathnameIndexNode = pathname.split(\"/\")[\r\n                    pathnameLengthNode - 1\r\n                  ];\r\n\r\n                  //check if last params index is a number (id) or not.\r\n                  if (isNaN(lastPathnameIndexNode)) {\r\n                    pathnameNode = document.location.pathname;\r\n                  } else {\r\n                    if (node && node.url && node.url.split(\":\")) {\r\n                      //Geting just those URLs where params (e.g; id) exists & Pathname and URL of subItemChild matches without its last index (i.e; number(e.g;2) and :id respectively)\r\n                      let nodeParamName = node.url.split(\":\")[1];\r\n                      if (\r\n                        nodeParamName &&\r\n                        pathnameNode\r\n                          .split(\"/\")\r\n                          .reverse()\r\n                          .slice(1)\r\n                          .reverse()\r\n                          .join(\"/\") ===\r\n                          node.url\r\n                            .split(\"/\")\r\n                            .reverse()\r\n                            .slice(1)\r\n                            .reverse()\r\n                            .join(\"/\")\r\n                      ) {\r\n                        setItem({});\r\n                        setSubItem({});\r\n                        setSubItemChild(node);\r\n                      }\r\n                    }\r\n                  }\r\n                  //////////////////////\r\n                  if (pathnameNode === node.url) {\r\n                    setSubItemChild(node);\r\n                    setItem({});\r\n                    setSubItem({});\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [window.location.pathname]);\r\n  return (\r\n    <>\r\n      {(Object.keys(item).length !== 0 ||\r\n        Object.keys(subItem).length !== 0 ||\r\n        Object.keys(subItemChild).length !== 0) && (\r\n        <div className=\"col-md-12 mb-4\">\r\n          <h2 className=\"page-title-heading font-30\">\r\n            {Object.keys(item).length !== 0 && item.title && item.title}\r\n            {Object.keys(subItem).length !== 0 &&\r\n              subItem.title &&\r\n              subItem.title}\r\n            {Object.keys(subItemChild).length !== 0 &&\r\n              subItemChild.title &&\r\n              subItemChild.title}\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\SignInForm\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\SmsVerificationForm\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\EmailVerificationForm\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Authentication\\SignIn\\GoogleVerificationForm\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\CreateNewVote\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\index.js",["765"],"import React from \"react\";\r\nimport OngoingVoting from \"./OngoingVoting/index\";\r\nimport SelectITO from \"./SelectITO/index\";\r\nimport UpcomingVoting from \"./UpcomingVoting/index\";\r\nimport PastVoting from \"./PastVoting/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"../../Constants/browserRoutes\";\r\n\r\nconst Voting = () => {\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mb-2\">\r\n            <Link\r\n              className=\"exp-mr-link text-dr-green\"\r\n              to={Route.CREATE_NEW_VOTE}\r\n            >\r\n              ADD NEW VOTE\r\n              <i className=\"fa fa-plus-circle ml-1 font-24\"></i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"selct-drop d-block  \">\r\n              <h2 className=\"tbl-small-heading d-inline font-24\">Ongoing</h2>\r\n              <select className=\"custom-select d-inline mb-2 float-right w-50\">\r\n                <option defaultChecked>Select ITO</option>\r\n                <option value=\"1\">One</option>\r\n                <option value=\"2\">Two</option>\r\n                <option value=\"3\">Three</option>\r\n              </select>\r\n              {/* <SelectITO/> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            {/* OngoingVoting compo */}\r\n            <OngoingVoting />\r\n          </div>\r\n\r\n          <div className=\"col-md-12 mb-2\">\r\n            <h2 className=\"page-title-heading font-24\">Upcoming</h2>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            {/* UpcomingVoting compo */}\r\n            <UpcomingVoting />\r\n          </div>\r\n\r\n          <div className=\"col-md-12 mb-2\">\r\n            <h2 className=\"page-title-heading font-24\">Past</h2>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            {/* PastVoting compo */}\r\n            <PastVoting />\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Voting;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVotingList\\index.js",["766"],"import React, {  useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getOnlyClosedVoting } from \"../../../Redux/actions/actions\";\r\nimport PastVotingDataItem from './pastVotingDataItem'\r\nconst PastVotingList = ({ getOnlyClosedVoting, voting: { closedVoting } }) => {\r\n  useEffect(() => {\r\n    getOnlyClosedVoting();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card mb-4\">\r\n              <div className=\"card-body p-0\">\r\n                <div className=\"table-responsive\">\r\n                  <table\r\n                    className=\"table hover dils-table fn-500\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      cellspacing: \"0\",\r\n                      marginTop: \"0\",\r\n                    }}\r\n                    // width=\"100%\"\r\n                    // cellspacing=\"0\"\r\n                    // style=\"margin-top:0;\"\r\n                  >\r\n                    <thead className=\"bg-cr-1 text-white\">\r\n                      <tr>\r\n                        <th>Election Name</th>\r\n                        <th>Start Date</th>\r\n                        <th>End Date</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {closedVoting &&\r\n                        closedVoting.map((item, index) => (\r\n                          <tr key={index}>\r\n                            <PastVotingDataItem item={item} />\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  </table>\r\n                  {(!closedVoting || closedVoting.length === 0) && (\r\n                    <h4 className=\"text-center\">No Record Found ...</h4>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    voting: state.voting,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getOnlyClosedVoting,\r\n})(PastVotingList);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\CommonComponents\\votingDetails.js",["767","768"],"import React, { useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport Countdown from \"react-countdown\";\r\nimport { connect } from \"react-redux\";\r\nimport { getVoteDetailById } from \"../../../Redux/actions/actions\";\r\n\r\nconst CompletionList = () => <span>Ended</span>;\r\n\r\nconst CompletionListUpcoming = () => <span>Started</span>;\r\n\r\nconst VotingDetails = ({\r\n  match,\r\n  getVoteDetailById,\r\n  voting: { votingDetail },\r\n  location,\r\n}) => {\r\n  const [ongoingShowTime, setOngoingShowTime] = useState(false);\r\n  const [upcomingShowTime, setUpcomingShowTime] = useState(false);\r\n  const [showSupply, setShowSupply] = useState(false);\r\n  const [startTime, setStartTime] = useState(undefined);\r\n  const [endTime, setEndTime] = useState(undefined);\r\n\r\n  let CurrentTime = new Date().getTime();\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id;\r\n    getVoteDetailById(id, setStartTime, setEndTime);\r\n\r\n    if (location && location.state && location.state.status === \"ongoing\") {\r\n      setOngoingShowTime(true);\r\n      setShowSupply(false);\r\n    } else if (\r\n      location &&\r\n      location.state &&\r\n      location.state.status === \"upcoming\"\r\n    ) {\r\n      setOngoingShowTime(false);\r\n      setUpcomingShowTime(true);\r\n      setShowSupply(false);\r\n    } else {\r\n      setOngoingShowTime(false);\r\n      setUpcomingShowTime(false);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ width: \"-webkit-fill-available\" }}>\r\n        <div className=\"col-12 col-md-8 offset-md-2\">\r\n          {/* <!-- inner row --> */}\r\n          <div className=\"row\" style={{ width: \"-webkit-fill-available\" }}>\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card p-5\">\r\n                <div>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span className=\"pro-heading-b\">\r\n                      {(votingDetail && votingDetail.name) || \" \"}\r\n                    </span>\r\n                    <div className=\"col-md-6 mb-2\">\r\n                      {showSupply && (\r\n                        <div className=\"row\">\r\n                          <div className=\"col-sm-6\">\r\n                            <div className=\"card bg-cr-1 text-white \">\r\n                              <div className=\"d-inline-block m-3\">\r\n                                <span className=\"dashboard-cd-blc\">\r\n                                  Price :\r\n                                </span>\r\n                                <p className=\"dashboard-cd-amot\">435345</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-sm-6\">\r\n                            <div className=\"card bg-cr-1 text-white \">\r\n                              <div className=\"d-inline-block m-3\">\r\n                                <span className=\"dashboard-cd-blc\">\r\n                                  Supply :\r\n                                </span>\r\n                                <p className=\"dashboard-cd-amot\">435345</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {ongoingShowTime &&\r\n                    endTime !== undefined &&\r\n                    CurrentTime !== undefined && (\r\n                      <div>\r\n                        <div className=\"countdown-style mb-2\">\r\n                          <Countdown\r\n                            date={Date.now() + (endTime - CurrentTime)}\r\n                          >\r\n                            <CompletionList />\r\n                          </Countdown>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                  {upcomingShowTime &&\r\n                    startTime !== undefined &&\r\n                    CurrentTime !== undefined && (\r\n                      <div>\r\n                        <div className=\"countdown-style mb-2\">\r\n                          <Countdown\r\n                            date={Date.now() + (startTime - CurrentTime)}\r\n                          >\r\n                            <CompletionListUpcoming />\r\n                          </Countdown>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                  <p>\r\n                    <span className=\"pro-date mb-0\">\r\n                      <i className=\"far fa-calendar\"></i>{\" \"}\r\n                      <Moment format=\"D MMM YYYY\" withTitle>\r\n                        {(votingDetail && votingDetail.start_date) || \" \"}\r\n                      </Moment>{\" \"}\r\n                      -{\" \"}\r\n                      <Moment format=\"D MMM YYYY\" withTitle>\r\n                        {(votingDetail && votingDetail.end_date) || \" \"}\r\n                      </Moment>\r\n                    </span>\r\n                  </p>\r\n                  <div className=\"card mb-4\">\r\n                    <div className=\"card-body bg-lit-gr\">\r\n                      <h4 className=\"font-18\">Description</h4>\r\n                      <p className=\"font-14 text-justify\">\r\n                        {(votingDetail && votingDetail.description) || \"\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- end inner row --> */}\r\n        </div>\r\n      </div>\r\n      {/* <!-- Modal --> */}\r\n      <div\r\n        className=\"modal fade bd-example-modal-sm\"\r\n        id=\"exampleModalCentered\"\r\n        // tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenteredLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div\r\n          className=\"modal-dialog modal-sm modal-sm-cu modal-dialog-centered\"\r\n          role=\"document\"\r\n        >\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header border-0\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span className=\"font-18\" aria-hidden=\"true\">\r\n                  &times;\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body text-center \">\r\n              <p>\r\n                You Agree with this <b>Voting</b>\r\n              </p>\r\n              <button type=\"button\" className=\"btn btn-primary w-25 btn-md\">\r\n                Ok\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-footer border-0\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!--end Modal --> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    voting: state.voting,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getVoteDetailById,\r\n})(VotingDetails);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\index.js",["769"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport AllUsersData from \"./AllUsersData/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Route from \"../../Constants/browserRoutes\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getAvailableITO, getAllItos } from \"../../Redux/actions/actions\";\r\n\r\nconst AdminManagement = ({\r\n  getAvailableITO,\r\n  getAllItos,\r\n  adminITOList,\r\n  allItos,\r\n}) => {\r\n  const [selectedItoId, setSelectedItoId] = useState(\"\");\r\n  const handleSelectITO = (e) => {\r\n    setSelectedItoId(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getAvailableITO();\r\n    getAllItos();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mb-2\">\r\n            <Link\r\n              className=\"exp-mr-link text-dr-green\"\r\n              to={Route.ADD_NEW_ADMIN}\r\n            >\r\n              ADD NEW ADMIN\r\n              <i className=\"fa fa-plus-circle ml-1 font-24\"></i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"selct-drop d-block  \">\r\n              <h2 className=\"tbl-small-heading d-inline font-24\">\r\n                List of all Admins\r\n              </h2>\r\n              {/* <select className=\"custom-select d-inline mb-2 float-right w-50\">\r\n                <option defaultChecked>Select ITO</option>\r\n                <option value=\"1\">One</option>\r\n                <option value=\"2\">Two</option>\r\n                <option value=\"3\">Three</option>\r\n              </select> */}\r\n              <select\r\n                className=\"custom-select d-inline mb-2 float-right w-50\"\r\n                onChange={handleSelectITO}\r\n              >\r\n                <option defaultChecked value=\"\">\r\n                  Select ITO to Filter\r\n                </option>\r\n                {allItos &&\r\n                  allItos.length > 0 &&\r\n                  allItos.map((ito, index) => (\r\n                    <option value={ito.id} key={ito.id}>\r\n                      {ito.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <AllUsersData selectedItoId={selectedItoId} />\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  adminITOList: state.admin.adminITOList,\r\n  allItos: state.admin.allItos,\r\n});\r\n\r\nexport default connect(mpaStateToProps, { getAvailableITO, getAllItos })(\r\n  AdminManagement\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AdminDetails\\index.js",["770","771"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAdminsById,\r\n  adminLinkITO,\r\n  getAvailableITO,\r\n} from \"../../../Redux/actions/actions\";\r\n\r\nconst AdminDetails = ({\r\n  adminDetails,\r\n  getAdminsById,\r\n  adminLinkITO,\r\n  getAvailableITO,\r\n  ...otherProps\r\n}) => {\r\n  const [selectITO, setSeletITO] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [selectedName, setSelectedName] = useState(\"\");\r\n\r\n  const handleSelectITO = (e) => {\r\n    const { value } = e.target;\r\n    setSeletITO(value);\r\n\r\n    const index = otherProps.adminITO.findIndex(\r\n      (item) => item.id === parseInt(value)\r\n    );\r\n\r\n    setSelectedName(otherProps.adminITO[index].name);\r\n  };\r\n\r\n  const handleUpdateITO = () => {\r\n    let obj = {\r\n      ito_id: selectITO,\r\n    };\r\n\r\n    adminLinkITO({ id, obj, setSuccess });\r\n  };\r\n\r\n  // if (success) {\r\n  //   let id = otherProps.match.params.id;\r\n  //   getAdminsById(id);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    let id = otherProps.match.params.id;\r\n    getAdminsById(id);\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    let id = otherProps.match.params.id;\r\n    getAvailableITO(id);\r\n  }, []);\r\n\r\n  const {\r\n    fname,\r\n    lname,\r\n    email,\r\n    contact_no,\r\n    role,\r\n    ito_id,\r\n    ito_name,\r\n    id,\r\n    country,\r\n  } = adminDetails;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-8 offset-md-2\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card pu-rel text-dark p-5 mb-3\">\r\n              <h2 className=\"page-title-heading mb-4 font-30 text-center\">\r\n                Details\r\n              </h2>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-12\">\r\n                  <ul className=\"row profile-detail\">\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Name:</span>\r\n                      <span>{`${fname || \"\"} ${lname || \"\"}`}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Email:</span>\r\n                      <span>{email || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Contact:</span>\r\n                      <span>{contact_no || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Role:</span>\r\n                      <span>{role || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Country:</span>\r\n                      <span>{country || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Linked to:</span>\r\n                      <span>{ito_name || \"\"}</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {!ito_id && (\r\n            <div className=\"col-sm-12 my-4\">\r\n              <div className=\"selct-drop form-inline\">\r\n                <label className=\"mr-3 font-weight-bold text-dark font-16\">\r\n                  LINK TO\r\n                </label>\r\n                <select\r\n                  className=\"custom-select w-50\"\r\n                  onChange={handleSelectITO}\r\n                >\r\n                  <option defaultChecked>Select ITO</option>\r\n                  {otherProps.adminITO.map((ito, index) => (\r\n                    <option value={ito.id}>{ito.name}</option>\r\n                  ))}\r\n                </select>\r\n                <button\r\n                  type=\"button\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModalCentered\"\r\n                  className=\"btn btn-dark ml-3 btn-lg\"\r\n                >\r\n                  LINK\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* <!-- Modal --> */}\r\n          <div\r\n            className=\"modal fade bd-example-modal-sm\"\r\n            id=\"exampleModalCentered\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"exampleModalCenteredLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div\r\n              className=\"modal-dialog modal-sm modal-sm-cu modal-dialog-centered\"\r\n              role=\"document\"\r\n            >\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header border-0\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span className=\"font-18\" aria-hidden=\"true\">\r\n                      &times;\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body text-center \">\r\n                  <p>\r\n                    You are linking <strong>{selectedName}</strong> to Section\r\n                    Name\r\n                  </p>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleUpdateITO}\r\n                    className=\"btn btn-primary w-25 btn-md\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    OK\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-dark w-25 btn-md ml-3\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-footer border-0\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!--end Modal --> */}\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  adminDetails: state.admin.adminDetails,\r\n  adminITO: state.admin.adminITOList,\r\n});\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getAdminsById,\r\n  adminLinkITO,\r\n  getAvailableITO,\r\n})(AdminDetails);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Calculator\\index.js",["772"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAllTokensList } from \"../../Redux/actions/actions\";\r\n\r\nconst Calculator = ({ calculator: { tokensdata }, getAllTokensList }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [countTokens, setCountTokens] = useState(\"\");\r\n  const [tokens, setTokens] = useState(\"\");\r\n  const [countAmount, setCountAmount] = useState(\"\");\r\n  const [price, setPrice] = useState(undefined);\r\n\r\n  const onSelectToken = (e) => {\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    if (price === undefined) {\r\n      toast.info(\"Please select a token first\");\r\n    } else {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n  const onChangeTokens = (e) => {\r\n    if (price === undefined) {\r\n      toast.info(\"Please select a token first\");\r\n    } else {\r\n      setTokens(e.target.value);\r\n    }\r\n  };\r\n\r\n  const countTokensBtn = (e) => {\r\n    e.preventDefault();\r\n    if (price === undefined) {\r\n      toast.info(\"Please Select a token first\");\r\n    } else {\r\n      setCountTokens(amount / price);\r\n    }\r\n  };\r\n\r\n  const countAmountBtn = (e) => {\r\n    e.preventDefault();\r\n    if (price === undefined) {\r\n      toast.info(\"Please Select a token first\");\r\n    } else {\r\n      setCountAmount(tokens * price);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTokensList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-8 offset-md-2\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"selct-drop d-block  \">\r\n              <select\r\n                className=\"custom-select font-weight-bold d-inline mb-3 w-50\"\r\n                onChange={onSelectToken}\r\n              >\r\n                <option defaultChecked value={undefined}>\r\n                  Select Token\r\n                </option>\r\n                {tokensdata &&\r\n                  tokensdata.length > 0 &&\r\n                  tokensdata.map((token) => (\r\n                    <option value={token.price} key={token.id}>\r\n                      {token.token_name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card mb-4\">\r\n              <div className=\"card-body p-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <h4 className=\"tbl-small-heading font-18\">\r\n                      Convert your Token / Amount\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"text-secondary font-weight-bold mb-4\">\r\n                      <div className=\" py-2 px-2\">\r\n                        <div className=\"d-inline-block\">\r\n                          <p className=\"mb-0\">\r\n                            Token Name:{\" \"}\r\n                            <span className=\"text-primary\">\r\n                              Token Name(TCN)\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <h4 className=\"font-18\">Calculator</h4>\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"number\"\r\n                        style={{ height: \"38px\", width: \"100%\" }}\r\n                        placeholder=\"Enter Amount in Dollars\"\r\n                        name=\"amount\"\r\n                        value={amount}\r\n                        onChange={onChangeAmount}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-3\">\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body bg-lit-gr py-2 px-3\">\r\n                        <p className=\"font-14 mb-0 text-justify\">\r\n                          {countTokens ? countTokens.toFixed(2) : 0}{\" \"}\r\n                          <span className=\"float-right\">Token</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-3\">\r\n                    <button\r\n                      className=\"bg-semi-black text-white py-2 px-4 rounded\"\r\n                      onClick={countTokensBtn}\r\n                    >\r\n                      Convert\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"col-12 col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"number\"\r\n                        style={{ height: \"38px\", width: \"100%\" }}\r\n                        placeholder=\"Enter Tokens\"\r\n                        name=\"tokens\"\r\n                        value={tokens}\r\n                        onChange={onChangeTokens}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-3\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body bg-lit-gr py-2 px-3\">\r\n                        <p className=\"font-14 mb-0 text-justify\">\r\n                          {countAmount ? countAmount : 0}{\" \"}\r\n                          <span className=\"float-right\">$</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-3\">\r\n                    <button\r\n                      className=\"bg-semi-black text-white py-2 px-4 rounded\"\r\n                      onClick={countAmountBtn}\r\n                    >\r\n                      Convert\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  calculator: state.calculator,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllTokensList })(Calculator);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AddNewAdmin\\index.js",["773"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewAdmin } from \"../../../Redux/actions/actions\";\r\n\r\nconst AddNewAdmin = ({ addNewAdmin, ...otherProps }) => {\r\n  const [formData, setFormData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    contact_no: \"\",\r\n    country: \"\",\r\n    address: \"\",\r\n    role: \"admin\",\r\n  });\r\n\r\n  // const { fname, lname, email, contact_no, country, address } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addNewAdmin({ formData, setFormData });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-8 offset-md-2\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card mb-4\">\r\n              <div className=\"card-body p-5\">\r\n                <form className=\"form\" onSubmit={onSubmit}>\r\n                  <div className=\"form-group row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"First Name*\"\r\n                          className=\"form-control\"\r\n                          name=\"fname\"\r\n                          value={formData.fname}\r\n                          onChange={onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Last Name*\"\r\n                          className=\"form-control\"\r\n                          name=\"lname\"\r\n                          value={formData.lname}\r\n                          onChange={onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Contact*\"\r\n                        className=\"form-control\"\r\n                        name=\"contact_no\"\r\n                        value={formData.contact_no}\r\n                        onChange={onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"email\"\r\n                          placeholder=\"Email*\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={formData.email}\r\n                          onChange={onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Country*\"\r\n                          className=\"form-control\"\r\n                          name=\"country\"\r\n                          value={formData.country}\r\n                          onChange={onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Address*\"\r\n                          className=\"form-control\"\r\n                          name=\"address\"\r\n                          value={formData.address}\r\n                          onChange={onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-lg \">\r\n                    ADD ADMIN\r\n                  </button>\r\n                </form>\r\n\r\n                {/* <!-- Modal --> */}\r\n                <div\r\n                  className=\"modal fade bd-example-modal-sm\"\r\n                  id=\"exampleModalCentered\"\r\n                  tabIndex=\"-1\"\r\n                  role=\"dialog\"\r\n                  aria-labelledby=\"exampleModalCenteredLabel\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <div\r\n                    className=\"modal-dialog modal-sm modal-sm-cu modal-dialog-centered\"\r\n                    role=\"document\"\r\n                  >\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header border-0\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"close\"\r\n                          data-dismiss=\"modal\"\r\n                          aria-label=\"Close\"\r\n                        >\r\n                          <span className=\"font-18\" aria-hidden=\"true\">\r\n                            &times;\r\n                          </span>\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"modal-body text-center \">\r\n                        <p>\r\n                          Vote create <strong>successfully</strong>\r\n                        </p>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-25 btn-md\"\r\n                        >\r\n                          Ok\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"modal-footer border-0\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* <!--end Modal --> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({});\r\n\r\nexport default connect(mpaStateToProps, { addNewAdmin })(AddNewAdmin);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\EditProfile\\index.js",["774","775"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditProfile = () => {\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" action=\"\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email*\"\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <label>Contact No</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Contact No\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Country</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Country\"\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <label>Address</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Address\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                  SUBMIT\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\index.js",["776","777","778","779"],"import React, { useState, useEffect } from \"react\";\r\nimport Route from \"../../Constants/browserRoutes\";\r\nimport image from \"../../App/Assets/images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  emailAuthentiactionOn,\r\n  smsAuthentiactionOn,\r\n  googleAuthentiactionOn,\r\n  updatePassword,\r\n} from \"../../Redux/actions/actions\";\r\nimport GoogleAuthQRModal from \"./GoogleAuthQRModal\";\r\n\r\nconst Profile = ({\r\n  profileData,\r\n  emailAuthentiactionOn,\r\n  smsAuthentiactionOn,\r\n  googleAuthentiactionOn,\r\n  updatePassword,\r\n}) => {\r\n  const [verifyType, SetVerifyType] = useState(\"\");\r\n  const [showGoogleAuthQRcode, setShowGoogleAuthQRcode] = useState(false); // It shows QRcode modal\r\n  const [googleQRcodeUrl, setGoogleQRcodeUrl] = useState(\"\"); // Its QRcode Image URL\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [verifySMS, SetVerifySMS] = useState(false);\r\n  const [verifyGoogle, SetVerifyGoogle] = useState(false);\r\n  const [verifyEmail, SetVerifyEmail] = useState(false);\r\n\r\n  const { userDetails } = profileData;\r\n\r\n  // update password\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [error, setError] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n  });\r\n  const { currentPassword, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentPassword === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n      setLoading(true);\r\n      updatePassword({ formData, setFormData, setLoading, setShow });\r\n    }\r\n  };\r\n\r\n  // update password\r\n\r\n  useEffect(() => {\r\n    if (userDetails.is_email_verification_on) {\r\n      SetVerifyEmail(true);\r\n    } else if (userDetails.is_google_authentication_on) {\r\n      SetVerifyGoogle(true);\r\n    } else if (userDetails.is_number_verification_on) {\r\n      SetVerifySMS(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    var onObj = {\r\n      status: true,\r\n    };\r\n    var offObj = {\r\n      status: false,\r\n    };\r\n    if (e.target.name === \"SMS\") {\r\n      SetVerifyType(e.target.name);\r\n      if (verifySMS) {\r\n        smsAuthentiactionOn(offObj, {\r\n          SetVerifySMS,\r\n          SetVerifyGoogle,\r\n          SetVerifyEmail,\r\n          verifySMS,\r\n        });\r\n      } else {\r\n        smsAuthentiactionOn(onObj, {\r\n          SetVerifySMS,\r\n          SetVerifyGoogle,\r\n          SetVerifyEmail,\r\n          verifySMS,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"Email\") {\r\n      SetVerifyType(e.target.name);\r\n      if (verifyEmail) {\r\n        emailAuthentiactionOn(offObj, {\r\n          SetVerifySMS,\r\n          SetVerifyGoogle,\r\n          SetVerifyEmail,\r\n          verifyEmail,\r\n        });\r\n      } else {\r\n        emailAuthentiactionOn(onObj, {\r\n          SetVerifySMS,\r\n          SetVerifyGoogle,\r\n          SetVerifyEmail,\r\n          verifyEmail,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"Google\") {\r\n      SetVerifyType(e.target.name);\r\n      if (verifyGoogle) {\r\n        googleAuthentiactionOn(\r\n          offObj,\r\n          {\r\n            SetVerifySMS,\r\n            SetVerifyGoogle,\r\n            SetVerifyEmail,\r\n            verifyGoogle,\r\n          },\r\n          setShowGoogleAuthQRcode,\r\n          setGoogleQRcodeUrl\r\n        );\r\n      } else {\r\n        googleAuthentiactionOn(\r\n          onObj,\r\n          {\r\n            SetVerifySMS,\r\n            SetVerifyGoogle,\r\n            SetVerifyEmail,\r\n            verifyGoogle,\r\n          },\r\n          setShowGoogleAuthQRcode,\r\n          setGoogleQRcodeUrl\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <div className=\"card pu-rel p-5 mb-3\">\r\n            <img\r\n              className=\"profile-img\"\r\n              src={\r\n                userDetails && userDetails.image\r\n                  ? `${Route.HOST}/${userDetails.image}`\r\n                  : image\r\n              }\r\n              alt=\"User Image\"\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-12\">\r\n                <ul className=\"row profile-detail\">\r\n                  <li className=\"col-12 col-md-6\">\r\n                    <span>Name</span>\r\n                    <span>\r\n                      {(userDetails &&\r\n                        userDetails.fname &&\r\n                        userDetails.fname + \" \" + userDetails.lname) ||\r\n                        \"\"}\r\n                    </span>\r\n                  </li>\r\n\r\n                  <li className=\"col-12 col-md-6\">\r\n                    <span>Email</span>\r\n                    <span>{userDetails.email || \"\"}</span>\r\n                  </li>\r\n                  <li className=\"col-12 col-md-6\">\r\n                    <span>Contact No</span>\r\n                    <span>{userDetails.contact_no || \"\"}</span>\r\n                  </li>\r\n                  <li className=\"col-12 col-md-6\">\r\n                    <span>Country</span>\r\n                    <span>{userDetails.country || \"\"}</span>\r\n                  </li>\r\n                  <li className=\"col-12 col-md-6\">\r\n                    <span>Role</span>\r\n                    <span>{userDetails.role}</span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div className=\"row\" onChange={handleChange}>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"custom-control custom-switch custom-sw-nu\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input\"\r\n                        id=\"customSwitch1\"\r\n                        checked={verifyGoogle}\r\n                        name=\"Google\"\r\n                        required\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"customSwitch1\"\r\n                      >\r\n                        Google Authentication\r\n                      </label>\r\n                    </div>\r\n                    <GoogleAuthQRModal\r\n                      showGoogleAuthQRcode={showGoogleAuthQRcode}\r\n                      setShowGoogleAuthQRcode={setShowGoogleAuthQRcode}\r\n                      googleQRcodeUrl={googleQRcodeUrl}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"custom-control custom-switch custom-sw-nu\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input \"\r\n                        id=\"customSwitch2\"\r\n                        checked={verifyEmail}\r\n                        name=\"Email\"\r\n                        required\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"customSwitch2\"\r\n                      >\r\n                        Email Authentication\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"custom-control custom-switch custom-sw-nu\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input \"\r\n                        id=\"customSwitch3\"\r\n                        checked={verifySMS}\r\n                        name=\"SMS\"\r\n                        required\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"customSwitch3\"\r\n                      >\r\n                        SMS Authentication\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-start\">\r\n                  <Link\r\n                    className=\"btn btn-secondary btn-sm mt-5\"\r\n                    to={Route.EDIT_PROFILE}\r\n                  >\r\n                    Update Profile\r\n                  </Link>{\" \"}\r\n                  <Link\r\n                    className=\"btn btn-primary btn-sm mt-5 ml-3\"\r\n                    to=\"#\"\r\n                    onClick={handleShow}\r\n                  >\r\n                    Update Password\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n      <Modal\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={show}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Password</Modal.Title>\r\n        </Modal.Header>\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          <Modal.Body>\r\n            {\" \"}\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"form-group\">\r\n                  <label>Current Password</label>\r\n\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Current Password\"\r\n                    className=\"form-control\"\r\n                    name=\"currentPassword\"\r\n                    value={currentPassword}\r\n                    onChange={(e) => onChange(e)}\r\n                    required\r\n                  />\r\n                  {/* {error && currentPassword === \"\" ? (\r\n                    <div className=\"error-msg\">\r\n                      {\" \"}\r\n                      Current Password is required{\" \"}\r\n                    </div>\r\n                  ) : null} */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"form-group\">\r\n                  <label>New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Current Password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => onChange(e)}\r\n                    required\r\n                  />\r\n                  {/* {error && password === \"\" ? (\r\n                    <div className=\"error-msg\"> New Password is required </div>\r\n                  ) : null} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}{\" \"}\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    profileData: state.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  emailAuthentiactionOn,\r\n  smsAuthentiactionOn,\r\n  googleAuthentiactionOn,\r\n  updatePassword,\r\n})(Profile);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Subscription\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\UserDetails\\index.js",["780"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\nimport InvestmentDetailsItem from \"../InvestmentDetails/investmentDetailsItem\";\r\n// import { data } from \"../dummyData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"./../../../Constants/browserRoutes\";\r\nimport UserProfileInfo from \"./userProfileInfo\";\r\n\r\nimport { getInvestmentDetailByUserId } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UserDetails = ({\r\n  match,\r\n  userManagement: {\r\n    investmentDetail: { data },\r\n  },\r\n  getInvestmentDetailByUserId,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.userPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.userPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.userPerScreen) + 1);\r\n    }\r\n  }, [countData]);\r\n\r\n  useEffect(() => {\r\n    getInvestmentDetailByUserId(match.params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <UserProfileInfo id={match.params.id} />\r\n          </div>\r\n\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"sec-heading py-3\">\r\n              <h4 className=\"tbl-small-heading mb-0\">\r\n                Investment Details\r\n                <Link\r\n                  className=\"view-mor-gr-link float-right\"\r\n                  //   href=\"InvesmentDetails.html\"\r\n                  to={Route.INVESTMENT_DETAIL_BTN + `${match.params.id}`}\r\n                >\r\n                  <span>Explore more</span>\r\n                </Link>\r\n              </h4>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div className=\"table-responsive\">\r\n                <table\r\n                  className=\"table hover dils-table fn-500\"\r\n                  style={{\r\n                    marginTop: \"rig0ht\",\r\n                    width: \"100%\",\r\n                    cellspacing: \"0\",\r\n                  }}\r\n                >\r\n                  <thead className=\"bg-cr-1 text-white\">\r\n                    <tr>\r\n                      <th>Token Name</th>\r\n                      <th>Token Symbol</th>\r\n                      <th>Order Type</th>\r\n                      <th>Status</th>\r\n                      <th>amount</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {data &&\r\n                      data.length > 0 &&\r\n                      data\r\n                        .slice(\r\n                          screen * config.userPerScreen - config.userPerScreen,\r\n                          config.userPerScreen * screen\r\n                        )\r\n                        .map((item, index) => (\r\n                          <tr key={index}>\r\n                            <InvestmentDetailsItem\r\n                              investmentDetailsData={item}\r\n                            />\r\n                          </tr>\r\n                        ))}\r\n                  </tbody>\r\n                </table>\r\n                {(!data || (data && data.length === 0)) && (\r\n                  <h4 className=\"text-center\">No Record Found</h4>\r\n                )}\r\n              </div>\r\n              <div style={{ marginBottom: \"5px\" }}>\r\n                <Pagination\r\n                  count={count}\r\n                  shape=\"rounded\"\r\n                  screen={screen}\r\n                  onChange={handleChange}\r\n                  showFirstButton\r\n                  showLastButton\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userManagement: state.userManagement,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvestmentDetailByUserId })(\r\n  UserDetails\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\ListofAllUsers\\index.js",["781","782"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\n// import { data } from \"../dummyData\";\r\nimport UserDataItem from \"./userDataItem\";\r\nimport { getUsersList } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UserManagement = ({ userManagement: { usersList }, getUsersList }) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = usersList && usersList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.userPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.userPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.userPerScreen) + 1);\r\n    }\r\n  }, [countData, config.userPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getUsersList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-8 offset-md-2\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div>\r\n              <h4 className=\"tbl-small-heading\">LIST OF ALL USERS</h4>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div className=\"table-responsive\">\r\n                <table\r\n                  className=\"table hover dils-table fn-500\"\r\n                  // width=\"100%\"\r\n                  // cellspacing=\"0\"\r\n                  //   style=\"margin-top:0;\"\r\n                  style={{\r\n                    marginTop: \"0\",\r\n                    width: \"100%\",\r\n                    cellspacing: \"0\",\r\n                  }}\r\n                >\r\n                  <thead className=\"bg-cr-1 text-white\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Email</th>\r\n                      <th>Country</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {usersList &&\r\n                      usersList.length > 0 &&\r\n                      usersList\r\n                        .slice(\r\n                          screen * config.userPerScreen - config.userPerScreen,\r\n                          config.userPerScreen * screen\r\n                        )\r\n                        .map((item, index) => (\r\n                          <tr key={index}>\r\n                            <UserDataItem userData={item} />\r\n                          </tr>\r\n                        ))}\r\n                  </tbody>\r\n                </table>\r\n                {(!usersList || usersList.length === 0) && (\r\n                  <h4 className=\"text-center\">No Record Found</h4>\r\n                )}\r\n              </div>\r\n              <div style={{ marginBottom: \"5px\" }}>\r\n                <Pagination\r\n                  count={count}\r\n                  shape=\"rounded\"\r\n                  screen={screen}\r\n                  onChange={handleChange}\r\n                  showFirstButton\r\n                  showLastButton\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userManagement: state.userManagement,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsersList })(UserManagement);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\index.js",["783"],"import React from \"react\";\r\nimport ApprovedRequest from \"./ApprovedRequests\";\r\nimport PendigRequest from \"./PendingRequests/index\";\r\nimport RejectedRequest from \"./RejectedRequests/index\";\r\nimport SelectITO from \"./SelectITO/index\";\r\nimport SingleApprovedRequests from \"./SingleApprovedRequests\";\r\n\r\nconst KycManagement = () => {\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n\r\n      <div className=\"row\">\r\n        {/* SelectITO compo */}\r\n        {/* <SelectITO /> */}\r\n\r\n        <div className=\"col-md-12\">\r\n          {/* PendigRequests compo */}\r\n          <PendigRequest />\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          {/* SingleApprovedRequests compo */}\r\n          <SingleApprovedRequests />\r\n        </div>\r\n\r\n        <div className=\"col-md-12\">\r\n          {/* ApprovedRequest compo */}\r\n          <ApprovedRequest />\r\n        </div>\r\n\r\n        <div className=\"col-md-12\">\r\n          {/* RejectedRequest compo */}\r\n          <RejectedRequest />\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KycManagement;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\menu-items.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RequestStatus\\index.js",["784"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getKycById, updateKycStatus } from \"../../../Redux/actions/actions\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\nimport StatusModal from \"./StatusModal\";\r\n\r\nconst RequestStatus = ({\r\n  match,\r\n  kyc: { data },\r\n  getKycById,\r\n  updateKycStatus,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [showButtons, setShowButtons] = useState(false);\r\n\r\n  const clickApproved = (e) => {\r\n    e.preventDefault();\r\n    updateKycStatus({\r\n      userId: data.user_id,\r\n      adminId: null,\r\n      status: \"approved\",\r\n      isSuperAdmin: true,\r\n      setShow,\r\n      setStatus,\r\n    });\r\n  };\r\n  const clickRejected = (e) => {\r\n    e.preventDefault();\r\n    updateKycStatus({\r\n      userId: data.user_id,\r\n      adminId: null,\r\n      status: \"rejected\",\r\n      isSuperAdmin: true,\r\n      setShow,\r\n      setStatus,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getKycById({ kycId: match.params.id });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.verified_by_superadmin) {\r\n      setShowButtons(false);\r\n    } else if (\r\n      !data.verified_by_superadmin &&\r\n      data.admin_one &&\r\n      !data.admin_two\r\n    ) {\r\n      setShowButtons(true);\r\n    } else if (\r\n      !data.verified_by_superadmin &&\r\n      !data.admin_one &&\r\n      !data.admin_two\r\n    ) {\r\n      setShowButtons(true);\r\n    }\r\n  }, [data, status]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card pu-rel text-dark p-5 mb-3\">\r\n              <h2 className=\"page-title-heading mb-4 font-30 text-center\">\r\n                Details\r\n              </h2>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-12\">\r\n                  <ul className=\"row profile-detail\">\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Name</span>\r\n                      <span>{data && data.full_name}</span>\r\n                    </li>\r\n\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Nationality</span>\r\n                      <span>{data && data.nationality}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Date Of Birth</span>\r\n                      <span>{data && data.dob}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Address</span>\r\n                      <span>{data && data.permanent_address}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>City</span>\r\n                      <span>{data && data.city}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>State or Province</span>\r\n                      <span>{data && data.state_or_province}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Country</span>\r\n                      <span>{data && data.country}</span>\r\n                    </li>\r\n\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Status</span>\r\n                      <span>{data && data.kyc_status}</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row mt-4\">\r\n                    <div className=\"col-sm-4\" style={{ textAlign: \"center\" }}>\r\n                      {data && (\r\n                        <img\r\n                          width=\"100px\"\r\n                          height=\"100px\"\r\n                          src={`${Route.HOST}/${data.personal_photo}`}\r\n                          alt=\"...\"\r\n                        />\r\n                      )}\r\n                      {/* <div className=\"form-group upload-input-sty\">\r\n                        <p className=\"upload-icon text-center\">\r\n                          <i className=\"far fa-image\"></i>\r\n                        </p>\r\n                      </div> */}\r\n                      <p className=\"text-center\">Personal Photo</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4\" style={{ textAlign: \"center\" }}>\r\n                      {data && (\r\n                        <img\r\n                          width=\"200px\"\r\n                          height=\"100px\"\r\n                          src={`${Route.HOST}/${data.license_photo}`}\r\n                          alt=\"...\"\r\n                        />\r\n                      )}\r\n                      {/* <div className=\"form-group upload-input-sty\">\r\n                        <p className=\"upload-icon text-center\">\r\n                          <i className=\"far fa-image\"></i>\r\n                        </p>\r\n                      </div> */}\r\n                      <p className=\"text-center\">License Photo</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4\" style={{ textAlign: \"center\" }}>\r\n                      {data && (\r\n                        <img\r\n                          width=\"200px\"\r\n                          height=\"100px\"\r\n                          src={`${Route.HOST}/${data.other_document}`}\r\n                          alt=\"...\"\r\n                        />\r\n                      )}\r\n                      {/* <div className=\"form-group upload-input-sty\">\r\n                        <p className=\"upload-icon text-center\">\r\n                          <i className=\"far fa-image\"></i>\r\n                        </p>\r\n                      </div> */}\r\n                      <p className=\"text-center\">Other Document</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {data.verified_by_superadmin !== undefined && showButtons && (\r\n                  <div className=\"col-md-12 my-5 \">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success btn-green w-25 btn-lg\"\r\n                      onClick={clickApproved}\r\n                    >\r\n                      Approved\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark w-25 btn-lg ml-3\"\r\n                      onClick={clickRejected}\r\n                    >\r\n                      Rejected\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {/* <!-- Modal -->*/}\r\n                <StatusModal show={show} setShow={setShow} status={status} />\r\n                {/* <!--end Modal --> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  kyc: state.kyc,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getKycById, updateKycStatus })(\r\n  RequestStatus\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\BankPayment\\index.js",["785","786"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport SubmitConfirmationModal from \"./SubmitConfirmationModal\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { depositPayment } from \"../../../Redux/actions/actions\";\r\n\r\nconst BankPayment = ({ depositPayment }) => {\r\n  const [error, setError] = useState(false);\r\n  const [bank_draft, setBank_draft] = useState(\"\");\r\n  const [depositForm, setDepositForm] = useState({\r\n    country: \"\",\r\n    swift: \"\",\r\n    bank_name: \"\",\r\n    account_no: \"\",\r\n    account_name: \"\",\r\n    from_account: \"\",\r\n    currency: \"\",\r\n    transfer_amount: \"\",\r\n    transfer_fee: \"\",\r\n    total_amount: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setDepositForm({ ...depositForm, [e.target.name]: e.target.value });\r\n  };\r\n  const onFileChange = (event) => {\r\n    setBank_draft(event.target.files[0]);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      bank_draft === \"\" ||\r\n      depositForm.total_amount === \"\" ||\r\n      depositForm.transfer_fee === \"\" ||\r\n      depositForm.transfer_amount === \"\" ||\r\n      depositForm.currency === \"\" ||\r\n      depositForm.from_account === \"\" ||\r\n      depositForm.account_name === \"\" ||\r\n      depositForm.bank_name === \"\" ||\r\n      depositForm.swift === \"\" ||\r\n      depositForm.country === \"\"\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n      // console.log(\"onSubmit--->>\", depositForm);\r\n\r\n      const formData = new FormData();\r\n\r\n      // Update the formData object\r\n      formData.append(\"bank_draft\", bank_draft, bank_draft.name);\r\n      formData.append(\"country\", depositForm.country);\r\n      formData.append(\"swift\", depositForm.swift);\r\n      formData.append(\"bank_name\", depositForm.bank_name);\r\n      formData.append(\"account_no\", depositForm.account_no);\r\n      formData.append(\"account_name\", depositForm.account_name);\r\n      formData.append(\"from_account\", depositForm.from_account);\r\n      formData.append(\"currency\", depositForm.currency);\r\n      formData.append(\"transfer_amount\", depositForm.transfer_amount);\r\n      formData.append(\"transfer_fee\", depositForm.transfer_fee);\r\n      formData.append(\"total_amount\", depositForm.total_amount);\r\n\r\n      // Details of the uploaded file\r\n      // console.log(\"---->>\", formData.get(\"bank_draft\")); // reference by form input's `name` tag\r\n\r\n      depositPayment({ formData, setDepositForm, setBank_draft });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4 mt-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">Country</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Country\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"country\"\r\n                        value={depositForm.country}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.country === \"\" ? (\r\n                        <div className=\"error-msg\"> Country is required </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">SWIFT</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"SWIFT\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"swift\"\r\n                        value={depositForm.swift}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.swift === \"\" ? (\r\n                        <div className=\"error-msg\"> SWIFT is required </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">\r\n                        Bank/Branch Name\r\n                      </label>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Bank/Branch Name\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"bank_name\"\r\n                        value={depositForm.bank_name}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.bank_name === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Bank/Branch Name is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">Account Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Account Number\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"account_no\"\r\n                        value={depositForm.account_no}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.account_no === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Account Number is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">Account Name</label>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Account Name\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"account_name\"\r\n                        value={depositForm.account_name}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.account_name === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Account Name is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">\r\n                        From Account Number\r\n                      </label>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"From Account Number\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"from_account\"\r\n                        value={depositForm.from_account}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.from_account === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          From Account Number is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">\r\n                        Transfer Currency\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Transfer Currency\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"currency\"\r\n                        value={depositForm.currency}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.currency === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Transfer Currency is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">\r\n                        Transfer Amount\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Transfer Amount\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"transfer_amount\"\r\n                        value={depositForm.transfer_amount}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.transfer_amount === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Transfer Amount is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">Transfer Fee</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Transfer Fee\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"transfer_fee\"\r\n                        value={depositForm.transfer_fee}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.transfer_fee === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Transfer Feeis required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"font-weight-bold\">Total Amount</label>\r\n\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Total Amount\"\r\n                        className=\"form-control py-4\"\r\n                        name=\"total_amount\"\r\n                        value={depositForm.total_amount}\r\n                        onChange={onChange}\r\n                      />\r\n                      {error && depositForm.total_amount === \"\" ? (\r\n                        <div className=\"error-msg\">\r\n                          {\" \"}\r\n                          Total Amount is required{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-12\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-4\">\r\n                        <div className=\"form-group upload-input-sty\">\r\n                          {/* <p className=\"upload-icon\">\r\n                            <i className=\"far fa-image\"></i>\r\n                          </p> */}\r\n                          <label htmlFor=\"exampleFormControlFile1\">\r\n                            Personal photo\r\n                            <i className=\"fas fa-plus-circle\"></i>\r\n                          </label>\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={onFileChange}\r\n                            className=\"form-control-file\"\r\n                            id=\"exampleFormControlFile1\"\r\n                          />\r\n                        </div>\r\n                        {error && bank_draft === \"\" ? (\r\n                          <div className=\"error-msg\">\r\n                            {\" \"}\r\n                            Personal photo is required{\" \"}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-12 text-center mt-3\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      // data-toggle=\"modal\"\r\n                      // data-target=\"#exampleModalCentered\"\r\n                      className=\"btn btn-dark w-25 btn-lg\"\r\n                    >\r\n                      SUBMIT\r\n                    </button>\r\n                  </div>\r\n                  {/* <!-- Modal --> */}\r\n                  {/* <SubmitConfirmationModal /> */}\r\n\r\n                  <div\r\n                    className=\"modal fade bd-example-modal-sm\"\r\n                    id=\"exampleModalCentered\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"exampleModalCenteredLabel\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <div\r\n                      className=\"modal-dialog modal-sm modal-sm-cu modal-dialog-centered\"\r\n                      role=\"document\"\r\n                    >\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header border-0\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            <span className=\"font-18\" aria-hidden=\"true\">\r\n                              &times;\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body text-center \">\r\n                          <p>\r\n                            Payment details submitted{\" \"}\r\n                            <strong>successfully</strong>\r\n                          </p>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-25 btn-md\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            OK\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-footer border-0\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <!--end Modal --> */}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { depositPayment })(BankPayment);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\ComletedOrders\\index.js",["787"],"import React, { useState, useEffect } from \"react\";\r\n// import { data1 } from \"../dummyData\";\r\nimport CompletedOrdersItem from \"./CompletedOrdersItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\nimport { getCompletedOrdersList } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CompletedOrders = ({ exchange: { data }, getCompletedOrdersList }) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getCompletedOrdersList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h4 className=\"tbl-small-heading d-inline-block\">\r\n              COMPLETED ORDER\r\n            </h4>\r\n            {/* <div className=\"selct-drop d-inline mb-2 w-50\">\r\n              <select className=\"custom-select\">\r\n                <option defaultChecked>Select ITO</option>\r\n                <option value=\"1\">One</option>\r\n                <option value=\"2\">Two</option>\r\n                <option value=\"3\">Three</option>\r\n              </select>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body srl-bar p-0\">\r\n              <div className=\"table-responsive\">\r\n                <table\r\n                  className=\"table hover dils-table\"\r\n                  width=\"100%\"\r\n                  cellSpacing=\"0\"\r\n                >\r\n                  <thead className=\"bg-cr-1 text-white\">\r\n                    <tr>\r\n                      <th>Person Name</th>\r\n                      <th>Token Name</th>\r\n                      <th>Token Symbol</th>\r\n                      <th>Order Type</th>\r\n                      <th>Amount</th>\r\n                      <th>Date</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {data &&\r\n                      data.length > 0 &&\r\n                      data\r\n                        .slice(\r\n                          screen * itemsPerScreen - itemsPerScreen,\r\n                          itemsPerScreen * screen\r\n                        )\r\n                        .map((item) => (\r\n                          <tr key={item.id}>\r\n                            <CompletedOrdersItem item={item} />\r\n                          </tr>\r\n                        ))}\r\n                  </tbody>\r\n                </table>\r\n                {(!data || data.length === 0) && (\r\n                  <h4 className=\"text-center\">No Record Found ...</h4>\r\n                )}\r\n              </div>\r\n              <div style={{ marginBottom: \"5px\" }}>\r\n                <Pagination\r\n                  count={count}\r\n                  shape=\"rounded\"\r\n                  screen={screen}\r\n                  onChange={handleChange}\r\n                  showFirstButton\r\n                  showLastButton\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchange: state.exchange,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCompletedOrdersList })(\r\n  CompletedOrders\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\ItoDetails\\index.js",["788"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItoById } from \"../../../Redux/actions/actions\";\r\nimport Moment from \"react-moment\";\r\nimport BlockUnblockModal from \"./BlockUnblockModal\";\r\nimport { blockUnblockIto } from \"../../../Redux/actions/actions\";\r\n\r\nconst ItoDetails = ({\r\n  match,\r\n  ito: { data },\r\n  getItoById,\r\n  blockUnblockIto,\r\n  location,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const unblockIto = (e) => {\r\n    e.preventDefault();\r\n    blockUnblockIto(setShow, setStatus, \"Unblocked\", match.params.id, false);\r\n  };\r\n  const blockIto = (e) => {\r\n    e.preventDefault();\r\n    blockUnblockIto(setShow, setStatus, \"Blocked\", match.params.id, true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItoById({ itoId: match.params.id });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-8 offset-md-2\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card p-5\">\r\n              <p>\r\n                {/* <span className=\"pro-heading-b mb-2 mr-3\">\r\n                  ITO Seriess Name\r\n                </span>{\" \"} */}\r\n                <span className=\"pro-heading-b\">{data && data.name}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"pro-date mb-0\">\r\n                  <i className=\"far fa-calendar\"></i>{\" \"}\r\n                  <Moment format=\"D MMM YYYY\" withTitle>\r\n                    {data && data.start_date}\r\n                  </Moment>\r\n                  -{\" \"}\r\n                  <Moment format=\"D MMM YYYY\" withTitle>\r\n                    {data && data.end_date}\r\n                  </Moment>\r\n                </span>\r\n              </p>\r\n              <div className=\"card mb-4\">\r\n                <div className=\"card-body bg-lit-gr\">\r\n                  <h4 className=\"font-18\">Description</h4>\r\n                  <p className=\"font-14 text-justify\">\r\n                    {data && data.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {location &&\r\n                location.state &&\r\n                location.state === \"ongoing\" &&\r\n                (data && data.onhold ? (\r\n                  <div className=\"mt-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#exampleModalCentered\"\r\n                      className=\"btn btn-primary w-25 btn-lg mr-3\"\r\n                      onClick={unblockIto}\r\n                    >\r\n                      Un Hold\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"mt-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#exampleModalCentered\"\r\n                      className=\"btn btn-primary w-25 btn-lg mr-3\"\r\n                      onClick={blockIto}\r\n                    >\r\n                      On Hold\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n      {/* <!-- Modal --> */}\r\n      <BlockUnblockModal show={show} setShow={setShow} status={status} />\r\n      {/* <!--end Modal --> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ito: state.ito,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getItoById, blockUnblockIto })(\r\n  ItoDetails\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateNewIto\\index.js",["789"],"import React, { useState } from \"react\";\r\nimport CreateItoModal from \"./CreateItoModal\";\r\nimport { createIto } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CreateNewIto = ({ createIto }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    status: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: \"\",\r\n  });\r\n  const { name, status, startDate, endDate, description } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createIto({ formData, setShow, setFormData });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => onChange(e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        name=\"status\"\r\n                        className=\"form-control\"\r\n                        defaultValue={status}\r\n                        onChange={onChange}\r\n                        placeholder=\"asdsad\"\r\n                      >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"ongoing\">Ongoing</option>\r\n                        <option value=\"upcoming\">Upcoming</option>\r\n                        <option value=\"closed\">Past</option>\r\n                      </select>\r\n                    </div>\r\n                  </div> */}\r\n                  <div className=\"col-sm-6\">\r\n                    <input\r\n                      type=\"date\"\r\n                      placeholder=\"Start Date\"\r\n                      className=\"form-control\"\r\n                      name=\"startDate\"\r\n                      value={startDate}\r\n                      onChange={(e) => onChange(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"date\"\r\n                        placeholder=\"End Date\"\r\n                        className=\"form-control\"\r\n                        name=\"endDate\"\r\n                        value={endDate}\r\n                        onChange={(e) => onChange(e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-12\">\r\n                    <textarea\r\n                      placeholder=\"Description\"\r\n                      className=\"form-control\"\r\n                      name=\"description\"\r\n                      value={description}\r\n                      onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                  CREATE NEW ITO\r\n                </button>\r\n              </form>\r\n\r\n              {/* <!-- Modal --> */}\r\n              <CreateItoModal show={show} setShow={setShow} />\r\n              {/* <!--end Modal --> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createIto })(CreateNewIto);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateToken\\index.js",["790","791"],"import React, { useState } from \"react\";\r\n// import CreateItoModal from \"./CreateItoModal\";\r\nimport { createToken } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateToken = ({ match, createToken }) => {\r\n  let history = useHistory();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    tokenSymbol: \"\",\r\n    tokenDecimal: \"\",\r\n    tokenName: \"\",\r\n    supply: \"\",\r\n    itoId: \"\",\r\n    price: \"\",\r\n  });\r\n  const { tokenSymbol, tokenDecimal, tokenName, supply, price } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    formData.itoId = match.params.id;\r\n    createToken({ formData, setFormData, history });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Token Name\"\r\n                        className=\"form-control\"\r\n                        name=\"tokenName\"\r\n                        value={tokenName}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Token Symbol\"\r\n                        className=\"form-control\"\r\n                        name=\"tokenSymbol\"\r\n                        value={tokenSymbol}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Token Decimal\"\r\n                        className=\"form-control\"\r\n                        name=\"tokenDecimal\"\r\n                        value={tokenDecimal}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Supply\"\r\n                        className=\"form-control\"\r\n                        name=\"supply\"\r\n                        value={supply}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Price\"\r\n                        className=\"form-control\"\r\n                        name=\"price\"\r\n                        value={price}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                  CREATE NEW Token\r\n                </button>\r\n              </form>\r\n\r\n              {/* <!-- Modal --> */}\r\n              {/* <CreateItoModal show={show} setShow={setShow} /> */}\r\n              {/* <!--end Modal --> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createToken })(CreateToken);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\InvestmentDetails\\index.js",["792","793"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\nimport { data } from \"../dummyData\";\r\nimport InvestmentDetailsItem from \"./investmentDetailsItem\";\r\nimport { getInvestmentDetailByUserId } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InvestmentDetails = ({\r\n  match,\r\n  userManagement: {\r\n    investmentDetail: { data },\r\n  },\r\n  getInvestmentDetailByUserId,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.userPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.userPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.userPerScreen) + 1);\r\n    }\r\n  }, [countData]);\r\n\r\n  useEffect(() => {\r\n    getInvestmentDetailByUserId(match.params.id);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"sec-heading py-3\">\r\n              <h4 className=\"tbl-small-heading mb-0\">Investment Details</h4>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div className=\"table-responsive\">\r\n                <table\r\n                  className=\"table hover dils-table fn-500\"\r\n                  // width=\"100%\"\r\n                  // cellspacing=\"0\"\r\n                  // style=\"margin-top:0;\"\r\n                  style={{\r\n                    marginTop: \"0\",\r\n                    width: \"100%\",\r\n                    cellspacing: \"0\",\r\n                  }}\r\n                >\r\n                  <thead className=\"bg-cr-1 text-white\">\r\n                    <tr>\r\n                      <th>Token Name</th>\r\n                      <th>Token Symbol</th>\r\n                      <th>Order Type</th>\r\n                      <th>Status</th>\r\n                      <th>amount</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {data &&\r\n                      data.length > 0 &&\r\n                      data\r\n                        .slice(\r\n                          screen * config.userPerScreen - config.userPerScreen,\r\n                          config.userPerScreen * screen\r\n                        )\r\n                        .map((item, index) => (\r\n                          <tr key={index}>\r\n                            <InvestmentDetailsItem\r\n                              investmentDetailsData={item}\r\n                            />\r\n                          </tr>\r\n                        ))}\r\n                  </tbody>\r\n                </table>\r\n                {!data ||\r\n                  (data && data.length === 0 && (\r\n                    <h2 className=\"text-center\">No Record Found</h2>\r\n                  ))}\r\n              </div>\r\n              <div style={{ marginBottom: \"5px\" }}>\r\n                <Pagination\r\n                  count={count}\r\n                  shape=\"rounded\"\r\n                  screen={screen}\r\n                  onChange={handleChange}\r\n                  showFirstButton\r\n                  showLastButton\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userManagement: state.userManagement,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvestmentDetailByUserId })(\r\n  InvestmentDetails\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\actions\\actions.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\dummyData.js",[],["794","795"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVotingList\\pastVotingDataItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\ListofAllUsers\\userDataItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Constants\\config.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\UserDetails\\userProfileInfo.js",["796"],"import React, { useEffect } from \"react\";\r\nimport userImage from \"../../../App/Assets/images/user-img.png\";\r\nimport { getUserProfile } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport browserRoute from \"../../../Constants/browserRoutes\";\r\n\r\nconst UserProfileInfo = ({\r\n  id,\r\n  userManagement: { userProfile },\r\n  getUserProfile,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserProfile(id);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card bg-cr-1 pu-rel text-white p-5 mb-3\">\r\n      <img\r\n        src={\r\n          userProfile && userProfile.personal_photo\r\n            ? `${browserRoute.HOST}/${userProfile.personal_photo}`\r\n            : userImage\r\n        }\r\n        alt=\"User...\"\r\n        className=\"profile-img\"\r\n      />\r\n      {/* <img className=\"profile-img\" src=\"../assets/images/user-img.png\" alt=\"User...\" /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <ul className=\"row profile-detail\">\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>Full name :</span>\r\n              <span>\r\n                {userProfile && `${userProfile.fname} ${userProfile.lname}`}\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>Email : </span>\r\n              <span>{userProfile && userProfile.email}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>Contact No : </span>\r\n              <span>{userProfile && userProfile.contact_no}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span> Country :</span>\r\n              <span>{userProfile && userProfile.country}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>State :</span>\r\n              <span>{userProfile && userProfile.state_or_province}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>Address :</span>\r\n              <span>{userProfile && userProfile.permanent_address}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>KYC Name : </span>\r\n              <span>{userProfile && userProfile.full_name}</span>\r\n            </li>\r\n            <li className=\"col-12 col-md-6\">\r\n              <span>KYC Status : </span>\r\n              <span>{userProfile && userProfile.kyc_status}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userManagement: state.userManagement,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserProfile })(UserProfileInfo);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\InvestmentDetails\\investmentDetailsItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\UserManagement\\dummyData.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\OngoingVoting\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\SelectITO\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\UpcomingVoting\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVoting\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AllUsersData\\index.js",["797","798"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\nimport UserItem from \"./userItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdminsList } from \"../../../Redux/actions/actions\";\r\n\r\nconst UsersData = ({ selectedItoId, getAdminsList, data }) => {\r\n  const { adminList } = data;\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = adminList && adminList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.userPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.userPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.userPerScreen) + 1);\r\n    }\r\n  }, [countData, config.userPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getAdminsList(selectedItoId);\r\n  }, [selectedItoId]);\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n            // width=\"100%\"\r\n            // cellspacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>ITO Name</th>\r\n                <th>Contact</th>\r\n                <th>Role</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {adminList &&\r\n                adminList.length > 0 &&\r\n                adminList\r\n                  .slice(\r\n                    screen * config.userPerScreen - config.userPerScreen,\r\n                    config.userPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <UserItem UserData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!adminList || (adminList && adminList.length === 0)) && (\r\n            <h4 className=\"text-center\">No Record Found</h4>\r\n          )}\r\n        </div>{\" \"}\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    data: state.admin,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getAdminsList,\r\n})(UsersData);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\NavRight\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\NavBar\\NavLeft\\index.js",["799","800"],"import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"../../../../../Constants/browserRoutes\";\r\nimport logo from \"../../../../Assets/images/danisium-logo.png\";\r\nimport { SideNavToggleContext } from \"../../../../index\";\r\n\r\nconst NavLeft = () => {\r\n  const sideNavToggleContext = useContext(SideNavToggleContext);\r\n  const { sideNavToggle, setSideNavToggle } = sideNavToggleContext;\r\n\r\n  const onClickSideNavBtn = (e) => {\r\n    e.preventDefault();\r\n    setSideNavToggle(!sideNavToggle);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"navbar-brand\" to={Route.DASHBOARD}>\r\n        <img className=\"main-logo\" src={logo} alt=\"Logo\" />\r\n      </Link>\r\n      <button\r\n        className=\"btn btn-link btn-sm order-1 order-lg-0 text-dark\"\r\n        id=\"sidebarToggle\"\r\n        onClick={onClickSideNavBtn}\r\n      >\r\n        <i className=\"fas fa-bars\"></i>\r\n      </button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NavLeft;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\shortReport.js",["801"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  countAllElections,\r\n  countAllRegisteredUsers,\r\n  countAllExchangeOrders,\r\n  countAllTokens,\r\n} from \"../../Redux/actions/actions\";\r\n\r\nconst ShortReport = ({\r\n  dashboard: { countElections, countUsers, countOrders, countTokens },\r\n  countAllElections,\r\n  countAllRegisteredUsers,\r\n  countAllExchangeOrders,\r\n  countAllTokens,\r\n}) => {\r\n  useEffect(() => {\r\n    countAllElections();\r\n    countAllRegisteredUsers();\r\n    countAllExchangeOrders();\r\n    countAllTokens();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card bg-cr-1 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot\">{countOrders || \"0\"}</p>\r\n              <span className=\"dashboard-cd-blc\">EXCHANGE ORDERS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card bg-cr-2 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot\">{countElections || \"0\"}</p>\r\n              <span className=\"dashboard-cd-blc\">TOTAL ELECTIONS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card bg-cr-1 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot\">{countUsers || \"0\"}</p>\r\n              <span className=\"dashboard-cd-blc\">REGISTERED USERS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card bg-cr-2 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot\">{countTokens || \"0\"}</p>\r\n              <span className=\"dashboard-cd-blc\">ALL TOKENS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  countAllElections,\r\n  countAllRegisteredUsers,\r\n  countAllExchangeOrders,\r\n  countAllTokens,\r\n})(ShortReport);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RequestStatus\\StatusModal.js",["802","803"],"import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst StatusModal = ({ show, setShow, status }) => {\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"sm\"\r\n      show={show}\r\n      onHide={handleClose}\r\n      style={{ opacity: 1 }}\r\n      centered\r\n    >\r\n      <div className=\"modal-header border-0\">\r\n        <button type=\"button\" className=\"close\" onClick={handleClose}>\r\n          <span className=\"font-18\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <Modal.Body className=\"text-center\">\r\n        <p>\r\n          You have {status} <strong>data</strong> request\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary w-25 btn-md\"\r\n          onClick={handleClose}\r\n        >\r\n          Ok\r\n        </button>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"border-0\"></Modal.Footer>\r\n    </Modal>\r\n    // <div\r\n    //   className=\"modal fade bd-example-modal-sm\"\r\n    //   id=\"exampleModalCentered\"\r\n    //   tabIndex=\"-1\"\r\n    //   role=\"dialog\"\r\n    //   aria-labelledby=\"exampleModalCenteredLabel\"\r\n    //   aria-hidden=\"true\"\r\n    // >\r\n    //   <div\r\n    //     className=\"modal-dialog modal-sm modal-sm-cu modal-dialog-centered\"\r\n    //     role=\"document\"\r\n    //   >\r\n    //     <div className=\"modal-content\">\r\n    //       <div className=\"modal-header border-0\">\r\n    //         <button\r\n    //           type=\"button\"\r\n    //           className=\"close\"\r\n    //           data-dismiss=\"modal\"\r\n    //           aria-label=\"Close\"\r\n    //         >\r\n    //           <span className=\"font-18\" aria-hidden=\"true\">\r\n    //             &times;\r\n    //           </span>\r\n    //         </button>\r\n    //       </div>\r\n    //       <div className=\"modal-body text-center \">\r\n    //         <p>\r\n    //           You have approved <strong>data</strong> request\r\n    //         </p>\r\n    //         <button type=\"button\" className=\"btn btn-primary w-25 btn-md\">\r\n    //           Ok\r\n    //         </button>\r\n    //       </div>\r\n    //       <div className=\"modal-footer border-0\"></div>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default StatusModal;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\BankPayment\\SubmitConfirmationModal.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\CreateNewIto\\CreateItoModal.js",["804","805"],"import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst CreateItoModal = ({ show, setShow }) => {\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"sm\"\r\n      show={show}\r\n      onHide={handleClose}\r\n      style={{ opacity: 1 }}\r\n      centered\r\n    >\r\n      <div className=\"modal-header border-0\">\r\n        <button type=\"button\" className=\"close\" onClick={handleClose}>\r\n          <span className=\"font-18\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <Modal.Body className=\"text-center\">\r\n        <p>\r\n          ITO create <strong>successfully</strong>\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary w-25 btn-md\"\r\n          onClick={handleClose}\r\n        >\r\n          Ok\r\n        </button>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"border-0\"></Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateItoModal;\r\n",["806","807"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\ComletedOrders\\CompletedOrdersItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SelectITO\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RejectedRequests\\index.js",["808","809","810","811"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { data } from \"./../dummyData\";\r\nimport config from \"./../../../Constants/config\";\r\nimport RejectedRquestItem from \"./rejectedRequestItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getRejectedKyc } from \"../../../Redux/actions/actions\";\r\n\r\nconst RejectedRequest = ({\r\n  getRejectedKyc,\r\n  kyc: {\r\n    rejectedData: { data },\r\n  },\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, config.itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getRejectedKyc();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header text-white bg-cr-1\">\r\n        <strong> Rejected Requests</strong>\r\n      </div>\r\n      <div className=\"card-body  p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            // width=\"100%\"\r\n            // cellSpacing=\"0\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n          >\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <RejectedRquestItem rejectedRequestData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  kyc: state.kyc,\r\n});\r\n\r\nexport default connect(mpaStateToProps, { getRejectedKyc })(RejectedRequest);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\PendingRequests\\index.js",["812","813","814"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { data } from \"./../dummyData\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\nimport PendingRequestItem from \"./pendingRequestItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPendingKyc } from \"../../../Redux/actions/actions\";\r\n\r\nconst PendigRequest = ({\r\n  getPendingKyc,\r\n  kyc: {\r\n    pendingData: { data },\r\n  },\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n\r\n  const countData = data && data.length;\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, config.itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getPendingKyc();\r\n  }, []);\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header text-white bg-cr-1\">\r\n        <strong> Pending Requests</strong>\r\n      </div>\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            // width=\"100%\"\r\n            // cellSpacing=\"0\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n          >\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <PendingRequestItem pendingRequestData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  kyc: state.kyc,\r\n});\r\n\r\nexport default connect(mpaStateToProps, { getPendingKyc })(PendigRequest);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\userChart.js",["815","816"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { userData } from \"../data\";\r\nimport { countRegiteredUsersPerMonth } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UserChart = ({\r\n  dashboard: { usersGraphDetail },\r\n  countRegiteredUsersPerMonth,\r\n}) => {\r\n  useEffect(() => {\r\n    countRegiteredUsersPerMonth();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3>USERS</h3>\r\n      </div>\r\n      <div className=\"card-block\">\r\n        <ResponsiveContainer\r\n          minWidth={315}\r\n          width={\"100%\"}\r\n          minHeight={300}\r\n          height={\"100%\"}\r\n        >\r\n          <LineChart\r\n            width={500}\r\n            height={400}\r\n            data={usersGraphDetail}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"register_to_month\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend verticalAlign=\"top\" height={36} />\r\n\r\n            <Line type=\"monotone\" dataKey=\"No_Of_Users\" stroke=\"#82ca9d\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { countRegiteredUsersPerMonth })(\r\n  UserChart\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\tokenChart.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\investmentChart.js",["817"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend,\r\n} from \"recharts\";\r\n// import { investmentData } from \"../data\";\r\nimport { countInvestmentPerMonth } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst InvestmentChart = ({\r\n  dashboard: { investmentGraphDetail },\r\n  countInvestmentPerMonth,\r\n}) => {\r\n  useEffect(() => {\r\n    countInvestmentPerMonth();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3>INVESTMENT</h3>\r\n      </div>\r\n      <div className=\"card-block\">\r\n        <ResponsiveContainer\r\n          minWidth={315}\r\n          width={\"100%\"}\r\n          minHeight={300}\r\n          height={\"100%\"}\r\n        >\r\n          <AreaChart\r\n            width={500}\r\n            height={400}\r\n            data={investmentGraphDetail}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"investment_to_month\" />\r\n            <YAxis />\r\n\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"Investment\"\r\n              stroke=\"#56a9f7\"\r\n              fill=\"#56a9f7\"\r\n            />\r\n            <Legend verticalAlign=\"top\" height={36} />\r\n            <Tooltip />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { countInvestmentPerMonth })(\r\n  InvestmentChart\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\exchangeChart.js",["818"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n// import { exchangeData } from \"../data\";\r\nimport { countExchangeOrdersPerDay } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ExchangeChart = ({\r\n  dashboard: { ordersGraphDetail },\r\n  countExchangeOrdersPerDay,\r\n}) => {\r\n  useEffect(() => {\r\n    countExchangeOrdersPerDay();\r\n  }, [countExchangeOrdersPerDay]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3>EXCHANGE</h3>\r\n      </div>\r\n      <div className=\"card-block\">\r\n        <ResponsiveContainer\r\n          minWidth={315}\r\n          width={\"100%\"}\r\n          minHeight={300}\r\n          height={\"100%\"}\r\n        >\r\n          <BarChart\r\n            width={500}\r\n            height={400}\r\n            data={ordersGraphDetail}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"exchange_to_day\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend verticalAlign=\"top\" height={36} />\r\n            <Bar dataKey=\"buy_orders\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"sell_orders\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { countExchangeOrdersPerDay })(\r\n  ExchangeChart\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\Charts\\itoSeriesChart.js",["819"],"import React from 'react';\r\nimport { PieChart, Pie, Tooltip ,Cell,Legend, ResponsiveContainer } from \"recharts\";\r\n\r\n\r\n\r\nconst data02 = [\r\n  { name: \"A1\", value: 100 },\r\n  { name: \"A2\", value: 300 },\r\n  { name: \"B1\", value: 100 },\r\n  { name: \"B2\", value: 80 },\r\n  { name: \"B3\", value: 40 },\r\n  { name: \"B4\", value: 30 },\r\n  { name: \"B5\", value: 50 },\r\n  { name: \"C1\", value: 100 },\r\n  { name: \"C2\", value: 200 },\r\n  { name: \"D1\", value: 150 },\r\n  { name: \"D2\", value: 50 },\r\n];\r\n\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\n\r\nconst ITOSeriesChart = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3>ITOSERIES</h3>\r\n        </div>\r\n        <div className=\"card-block\">\r\n          <ResponsiveContainer\r\n            minWidth={400}\r\n            width={\"100%\"}\r\n            minHeight={300}\r\n            height={\"100%\"}\r\n          >\r\n            <PieChart\r\n              align=\"center\"\r\n              margin={{ top: 50, right: 0, bottom: 0, left: 160 }}\r\n              data={data02}\r\n            >\r\n              <Pie\r\n                data={data02}\r\n                dataKey=\"value\"\r\n                cx={200 / 2}\r\n                cy={200 / 2}\r\n                innerRadius={70}\r\n                outerRadius={90}\r\n                fill=\"#82ca9d\"\r\n                label\r\n              >\r\n                {data02.map((entry, index) => (\r\n                  <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n\r\n              <Tooltip />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default ITOSeriesChart;",["820","821"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Past\\index.js",["822"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\n// import { data02 } from \"../dummyData\";\r\nimport PastItem from \"./pasItem\";\r\nimport { getPastIto } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Past = ({\r\n  ito: {\r\n    pastData: { data },\r\n  },\r\n  getPastIto,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData]);\r\n\r\n  useEffect(() => {\r\n    getPastIto();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table fn-500\"\r\n            // width=\"100%\"\r\n            // cellspacing=\"0\"\r\n            // style=\"margin-top:0;\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n              marginTop: \"0\",\r\n            }}\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>ITO Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <PastItem PastData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || (data && data.length === 0)) && (\r\n            <h4 className=\"text-center\">No Record Found</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ito: state.ito,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPastIto })(Past);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Upcoming\\index.js",["823"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\n\r\n// import { data } from \"../dummyData\";\r\nimport UpCommingItem from \"./upComingItem\";\r\nimport { getUpcomingIto } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Upcoming = ({\r\n  ito: {\r\n    upcomingData: { data },\r\n  },\r\n  getUpcomingIto,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData]);\r\n\r\n  useEffect(() => {\r\n    getUpcomingIto();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table fn-500\"\r\n            //   width=\"100%\"\r\n            //   cellspacing=\"0\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>ITO Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <UpCommingItem upCommingData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || (data && data.length === 0)) && (\r\n            <h4 className=\"text-center\">No Record Found</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ito: state.ito,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUpcomingIto })(Upcoming);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\kycServices.js",["824"],"import axios from \"axios\";\r\nimport {\r\n  PENDING_KYC_SUCCESS,\r\n  PENDING_KYC_ERR,\r\n  APPROVED_KYC_SUCCESS,\r\n  APPROVED_KYC_ERR,\r\n  REJECTED_KYC_SUCCESS,\r\n  REJECTED_KYC_ERR,\r\n  GET_KYC_SUCCESS,\r\n  GET_KYC_ERR,\r\n  KYC_UPDATE_SUCCESS,\r\n  KYC_UPDATE_ERR,\r\n  SINGLE_APPROVED_KYC_SUCCESS,\r\n  SINGLE_APPROVED_KYC_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport Route from \"../Constants/browserRoutes\";\r\nimport { toast } from \"react-toastify\";\r\nimport { kyc } from \"../Routes/serverRoutes\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Get KYC Single Approved Requests\r\nexport const getSingleApprovedKyc = () => (dispatch) => {\r\n  const status = \"single_approved\";\r\n  axios\r\n    .get(kyc.GET_KYC_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SINGLE_APPROVED_KYC_SUCCESS,\r\n        payload: { singleApprovedData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SINGLE_APPROVED_KYC_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get KYC Pending Requests\r\nexport const getPendingKyc = () => (dispatch) => {\r\n  const status = \"pending\";\r\n  axios\r\n    .get(kyc.GET_KYC_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PENDING_KYC_SUCCESS,\r\n        payload: { pendingData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: PENDING_KYC_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get KYC Approved Requests\r\nexport const getApprovedKyc = () => (dispatch) => {\r\n  const status = \"approved\";\r\n  axios\r\n    .get(kyc.GET_KYC_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: APPROVED_KYC_SUCCESS,\r\n        payload: { approvedData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: APPROVED_KYC_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get KYC Rejected Requests\r\nexport const getRejectedKyc = () => (dispatch) => {\r\n  const status = \"rejected\";\r\n  axios\r\n    .get(kyc.GET_KYC_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REJECTED_KYC_SUCCESS,\r\n        payload: { rejectedData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: REJECTED_KYC_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get KYC by id\r\nexport const getKycById = ({ kycId }) => (dispatch) => {\r\n  axios\r\n    .get(kyc.GET_KYC_BY_ID + `${kycId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_KYC_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_KYC_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//update status as pending or rejected\r\nexport const updateKycStatus = ({\r\n  userId,\r\n  adminId,\r\n  status,\r\n  isSuperAdmin,\r\n  setShow,\r\n  setStatus,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({\r\n    userId,\r\n    adminId,\r\n    status,\r\n    is_superadmin: isSuperAdmin,\r\n  });\r\n\r\n  axios\r\n    .put(kyc.UPDATE_KYC_STATUS, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: KYC_UPDATE_SUCCESS,\r\n        payload: status,\r\n      });\r\n      setShow(true);\r\n      setStatus(status);\r\n      alertToast(false, res.data.msg);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: KYC_UPDATE_ERR,\r\n        payload: err.response.data,\r\n      });\r\n      setShow(false);\r\n      setStatus(\"\");\r\n      alertToast(true, err.response.data.msg);\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\exchange.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\itoServices.js",["825","826"],"import axios from \"axios\";\r\nimport {\r\n  CREATE_ITO_SUCCESS,\r\n  CREATE_ITO_ERR,\r\n  ONGOING_ITO_SUCCESS,\r\n  ONGOING_ITO_ERR,\r\n  UPCOMING_ITO_SUCCESS,\r\n  UPCOMING_ITO_ERR,\r\n  PAST_ITO_SUCCESS,\r\n  PAST_ITO_ERR,\r\n  GET_ITO_SUCCESS,\r\n  GET_ITO_ERR,\r\n  UPDATE_ITO_SUCCESS,\r\n  UPDATE_ITO_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport Route from \"../Constants/browserRoutes\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ito } from \"../Routes/serverRoutes\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Create ITO success\r\nexport const createIto = ({ formData, setShow, setFormData }) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const { name, status, startDate, endDate, description } = formData;\r\n  const body = JSON.stringify({\r\n    name,\r\n    // status,\r\n    description,\r\n    start_date: startDate,\r\n    end_date: endDate,\r\n  });\r\n\r\n  axios\r\n    .post(ito.CREATE_ITO, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: CREATE_ITO_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      setShow(true);\r\n      alertToast(false, res.data.msg);\r\n      setFormData({\r\n        name: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        description: \"\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: CREATE_ITO_ERR,\r\n        payload: err.response.data,\r\n      });\r\n      setShow(false);\r\n      alertToast(true, err.response.data.msg);\r\n      setFormData({\r\n        name: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        description: \"\",\r\n      });\r\n    });\r\n};\r\n\r\n//Get Ongoing ITO\r\nexport const getOngoingIto = () => (dispatch) => {\r\n  const status = \"ongoing\";\r\n  axios\r\n    .get(ito.GET_ITO_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ONGOING_ITO_SUCCESS,\r\n        payload: { ongoingData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ONGOING_ITO_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get Upcoming ITO\r\nexport const getUpcomingIto = () => (dispatch) => {\r\n  const status = \"upcoming\";\r\n  axios\r\n    .get(ito.GET_ITO_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPCOMING_ITO_SUCCESS,\r\n        payload: { upcomingData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: UPCOMING_ITO_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get Past ITO\r\nexport const getPastIto = () => (dispatch) => {\r\n  const status = \"closed\";\r\n  axios\r\n    .get(ito.GET_ITO_BY_STATUS + `?status=${status}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PAST_ITO_SUCCESS,\r\n        payload: { pastData: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: PAST_ITO_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get Ito by id\r\nexport const getItoById = ({ itoId }) => (dispatch) => {\r\n  axios\r\n    .get(ito.GET_ITO_BY_ID + `${itoId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ITO_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_ITO_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n// block/Unblock ITO\r\nexport const blockUnblockIto = (\r\n  setShow,\r\n  setStatus,\r\n  status,\r\n  itoId,\r\n  isBlocked\r\n) => (dispatch) => {\r\n  const body = {\r\n    onhold: isBlocked,\r\n  };\r\n\r\n  axios\r\n    .put(ito.UPDATE_ITO_BY_ID + itoId, body)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: UPDATE_ITO_SUCCESS,\r\n        payload: { response: res.data, isBlocked: isBlocked },\r\n      });\r\n      setShow(true);\r\n      setStatus(status);\r\n      alertToast(false, res.data.msg);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: UPDATE_ITO_ERR,\r\n        payload: (err.response && err.response.data) || err.message,\r\n      });\r\n      setShow(false);\r\n      let errorMsg =\r\n        (err.response && err.response.data && err.response.data.msg) ||\r\n        err.message;\r\n      alertToast(true, errorMsg);\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\authServices.js",["827","828","829","830"],"import axios from \"axios\";\r\nimport {\r\n  REGISTER_MSG,\r\n  REGISTER_FAIL,\r\n  VERIFY_FAIL,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_MSG,\r\n  LOGIN_MSG_ERR,\r\n  LOGOUT,\r\n  FORGET_MSG,\r\n  FORGET_FAIL,\r\n  FORGET_SUCCESS,\r\n  RESET_SUCCESS,\r\n  RESET_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_ERR,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_ERR,\r\n  IS_EMAIL_AUTH_ON_SUCCESS,\r\n  IS_EMAIL_AUTH_ON_ERR,\r\n  IS_GOOGLE_AUTH_ON_SUCCESS,\r\n  IS_GOOGLE_AUTH_ON_ERR,\r\n  IS_SMS_AUTH_ON_SUCCESS,\r\n  IS_SMS_AUTH_ON_ERR,\r\n  SET_AUTH_VERIFICATION,\r\n} from \"../Redux/actions/types\";\r\nimport { auth } from \"../Routes/serverRoutes\";\r\nimport Route from \"../Constants/browserRoutes\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Load User\r\nexport const loadUser = () => (dispatch) => {\r\n  if (localStorage.token) setAuthToken(localStorage.token);\r\n  axios\r\n    .get(auth.LOGGEDIN_USER)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Register User\r\nexport const register = ({ formData, setOpen, history, setLoading }) => (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(formData);\r\n  axios\r\n    .post(auth.SIGNUP, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: REGISTER_MSG,\r\n        payload: res.data,\r\n      });\r\n      setOpen(true);\r\n      setLoading(false);\r\n      // dispatch(setAlert(res.data.msg, res.data.alertType));\r\n    })\r\n    .catch((err) => {\r\n      const errors =\r\n        err && err.response && err.response.data && err.response.data.errors;\r\n\r\n      // if (errors) errors.forEach((error) => toast.error(error.msg));\r\n\r\n      dispatch({\r\n        payload: errors,\r\n        type: REGISTER_FAIL,\r\n      });\r\n      // toast.error(err.response.data.msg);\r\n      setLoading(false);\r\n    });\r\n};\r\n\r\n//Verify Email of User by using Verification Token\r\nexport const verifyUser = ({\r\n  verificationToken,\r\n  email,\r\n  history,\r\n  setLoading,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ verificationToken, email });\r\n  axios\r\n    .post(auth.VERIFY_USER, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // toast.success(res.data.msg);\r\n      history.push(Route.LOGIN_USER);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      const errors =\r\n        err && err.response && err.response.data && err.response.data.errors;\r\n      const error =\r\n        err && err.response && err.response.data && err.response.data.msg;\r\n      dispatch({\r\n        payload: { errors, error },\r\n        type: VERIFY_FAIL,\r\n      });\r\n      // toast.error(err.response.data.msg);\r\n      setLoading(false);\r\n      // dispatch(setAlert(err.response.data.msg, err.response.data.alertType));\r\n    });\r\n};\r\n\r\n//Login User if there is no authentication\r\nexport const login = ({\r\n  formData,\r\n  setVerificationPage,\r\n  verificationPage,\r\n  setRequestIdSms,\r\n  history,\r\n  setLoading,\r\n  setUserId,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(formData);\r\n\r\n  axios\r\n    .post(auth.LOGIN, body, config)\r\n    .then(async (res) => {\r\n      if (\r\n        res.data &&\r\n        res.data.data &&\r\n        res.data.data.userDetails &&\r\n        res.data.data.userDetails.role !== \"super-admin\"\r\n      ) {\r\n        toast.error(\"Invalid Email Address\");\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        });\r\n        setLoading(false);\r\n      } else if (res.data && res.data.data && !res.data.data.authentication) {\r\n        await dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: res.data.data,\r\n        });\r\n        setLoading(false);\r\n\r\n        setUserId(res.data.data.id);\r\n        history.push(Route.DASHBOARD);\r\n        toast.success(\"Logged In Successfully\");\r\n        if (localStorage.token) setAuthToken(localStorage.token);\r\n      } else if (\r\n        res.data &&\r\n        res.data.data &&\r\n        res.data.data.authentication === \"email\"\r\n      ) {\r\n        await dispatch({\r\n          type: LOGIN_MSG,\r\n          payload: { authentication: res.data.data },\r\n        });\r\n        setVerificationPage({\r\n          emailPage: true,\r\n          smsPage: false,\r\n          googlePage: false,\r\n        });\r\n\r\n        setUserId(res.data.data.id);\r\n        toast.success(res.data.msg);\r\n      } else if (\r\n        res.data &&\r\n        res.data.data &&\r\n        res.data.data.authentication === \"sms\"\r\n      ) {\r\n        await dispatch({\r\n          type: LOGIN_MSG,\r\n          payload: { authentication: res.data.data },\r\n        });\r\n\r\n        if (res.data.result && res.data.result.request_id) {\r\n          setRequestIdSms(res.data.result.request_id);\r\n          setVerificationPage({\r\n            emailPage: false,\r\n            smsPage: true,\r\n            googlePage: false,\r\n          });\r\n\r\n          setUserId(res.data.data.id);\r\n          toast.success(res.data.msg);\r\n        } else {\r\n          toast.error(\"Request ID not found\");\r\n        }\r\n      } else if (\r\n        res.data &&\r\n        res.data.data &&\r\n        res.data.data.authentication === \"google\"\r\n      ) {\r\n        await dispatch({\r\n          type: LOGIN_MSG,\r\n          payload: { authentication: res.data.data },\r\n        });\r\n        setVerificationPage({\r\n          emailPage: false,\r\n          smsPage: false,\r\n          googlePage: true,\r\n        });\r\n\r\n        setUserId(res.data.data.id);\r\n        toast.success(res.data.msg);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: err && err.response && err.response.data.msg,\r\n      });\r\n      setLoading(false);\r\n\r\n      toast.error(\r\n        err && err.response && err.response.data && err.response.data.msg\r\n      );\r\n    });\r\n};\r\n\r\n//Verify Email and then login\r\nexport const verifyEmail = ({\r\n  verificationCode,\r\n  userId,\r\n  history,\r\n  setLoading,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ token: verificationCode, id: userId });\r\n\r\n  axios\r\n    .post(auth.VERIFY_EMAIL, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      setLoading(false);\r\n      history.push(Route.DASHBOARD);\r\n      toast.success(\"Logged In Successfully\");\r\n      if (localStorage.token) setAuthToken(localStorage.token);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload:\r\n          err && err.response && err.response.data && err.response.data.msg,\r\n      });\r\n      setLoading(false);\r\n\r\n      toast.error(err.response.data.msg);\r\n    });\r\n};\r\n\r\n//Verify SMS and then login\r\nexport const verifySms = ({\r\n  verificationCode,\r\n  requestIdSms,\r\n  history,\r\n  setLoading,\r\n  userId,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({\r\n    code: verificationCode,\r\n    requestId: requestIdSms,\r\n    id: userId,\r\n  });\r\n\r\n  axios\r\n    .post(auth.VERIFY_SMS, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      setLoading(false);\r\n      history.push(Route.DASHBOARD);\r\n      toast.success(\"Logged In Successfully\");\r\n      if (localStorage.token) setAuthToken(localStorage.token);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload:\r\n          err && err.response && err.response.data && err.response.data.msg,\r\n      });\r\n\r\n      toast.error(err.response.data.msg);\r\n    });\r\n};\r\n\r\n//Verify google and then login\r\nexport const verifyGoogle = ({\r\n  verificationCode,\r\n  userId,\r\n  history,\r\n  setLoading,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ token: verificationCode, id: userId });\r\n\r\n  axios\r\n    .post(auth.VERIFY_GOOGLE, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      setLoading(false);\r\n      history.push(Route.DASHBOARD);\r\n      toast.success(\"Logged In Successfully\");\r\n      if (localStorage.token) setAuthToken(localStorage.token);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload:\r\n          err && err.response && err.response.data && err.response.data.msg,\r\n      });\r\n      setLoading(false);\r\n      toast.error(err.response.data.msg);\r\n    });\r\n};\r\n//Forget Password\r\nexport const forgetPassword = ({ email, setOpen, setLoading }) => (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email });\r\n  axios\r\n    .post(auth.FORGET, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: FORGET_MSG,\r\n        payload: res.data,\r\n      });\r\n      setOpen(true);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      const errors =\r\n        err && err.response && err.response.data && err.response.data.errors;\r\n\r\n      // if (errors)\r\n      //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n\r\n      dispatch({\r\n        type: FORGET_FAIL,\r\n      });\r\n      // toast.error(err.response.data.msg);\r\n      setLoading(false);\r\n      // setAlert(\r\n      //   err.response.data.msg + \": Please try again\",\r\n      //   err.response.data.alertType\r\n      // );\r\n    });\r\n};\r\n\r\n//Verify Email of User For Forget Password by using Verification Token\r\nexport const verifyForget = ({\r\n  verificationToken,\r\n  email,\r\n  history,\r\n  setLoading,\r\n}) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ verificationToken, email });\r\n  axios\r\n    .post(auth.VERIFY_FORGET, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: FORGET_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      history.push(Route.RESET_PASSWORD + `?email=${email}`);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      const errors =\r\n        err && err.response && err.response.data && err.response.data.errors;\r\n      const error =\r\n        err && err.response && err.response.data && err.response.data.msg;\r\n      dispatch({\r\n        payload: { errors, error },\r\n        type: FORGET_FAIL,\r\n      });\r\n      // toast.error(err.response.data.msg);\r\n      setLoading(false);\r\n      // dispatch(setAlert(err.response.data.msg, err.response.data.alertType));\r\n    });\r\n};\r\n\r\n//Reset Password\r\nexport const resetPassword = ({ password, email, history, setLoading }) => (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ password, email });\r\n\r\n  axios\r\n    .post(auth.UPDATE_PASSWORD, body, config)\r\n    .then(async (res) => {\r\n      await dispatch({\r\n        type: RESET_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // toast.success(res.data.msg);\r\n      history.push(Route.LOGIN_USER);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      const errors =\r\n        err && err.response && err.response.data && err.response.data.errors;\r\n\r\n      // if (errors)\r\n      //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n\r\n      dispatch({\r\n        type: RESET_FAIL,\r\n      });\r\n      // toast.error(err.response.data.msg);\r\n      setLoading(false);\r\n      // setAlert(\r\n      //   err.response.data.msg + \": Please try again\",\r\n      //   err.response.data.alertType\r\n      // );\r\n    });\r\n};\r\n\r\n// Logout / Clear User\r\nexport const logout = (history) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n  history.push(Route.SIGNIN);\r\n  // dispatch(setAlert(\"You have successfully logged out\", \"success\"));\r\n};\r\n\r\n// update profile data\r\nexport const updateProfile = ({ formData, id, setFormData, setLoading }) => (\r\n  dispatch\r\n) => {\r\n  axios\r\n    .put(auth.UPDATE_PROFILE + `/users/${id}`, formData)\r\n    .then(async (res) => {\r\n      if (res.status === 200) {\r\n        await dispatch({\r\n          type: UPDATE_PROFILE_SUCCESS,\r\n          payload: { userDetails: res.data.data },\r\n        });\r\n        let successMessage = \"Profile update successfully\";\r\n        alertToast(false, successMessage);\r\n        setFormData({\r\n          fname: \"\",\r\n          lname: \"\",\r\n          contact_no: \"\",\r\n          country: \"\",\r\n        });\r\n        setLoading(false);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        payload: err,\r\n        type: UPDATE_PROFILE_ERR,\r\n      });\r\n      setLoading(false);\r\n    });\r\n};\r\n\r\n// IS_EMAIL_AUTH_ON User\r\nexport const emailAuthentiactionOn = (\r\n  obj,\r\n  { SetVerifySMS, SetVerifyGoogle, SetVerifyEmail, verifyEmail }\r\n) => (dispatch) => {\r\n  axios\r\n    .put(auth.IS_EMAIL_AUTH_ON, obj)\r\n    .then(async (res) => {\r\n      if (res.status === 200) {\r\n        await dispatch({\r\n          type: IS_EMAIL_AUTH_ON_SUCCESS,\r\n          payload: { status: obj.status },\r\n        });\r\n        let successMessage = (res && res.data.msg) || res.message;\r\n        alertToast(false, successMessage);\r\n\r\n        if (verifyEmail) {\r\n          SetVerifyEmail(false);\r\n          SetVerifySMS(false);\r\n          SetVerifyGoogle(false);\r\n        } else {\r\n          SetVerifyEmail(true);\r\n          SetVerifySMS(false);\r\n          SetVerifyGoogle(false);\r\n        }\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      let errorMessage = (err.response && err.response.data.msg) || err.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        payload: err,\r\n        type: IS_EMAIL_AUTH_ON_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n// IS_GOOGLE_AUTH_ON User\r\nexport const googleAuthentiactionOn = (\r\n  obj,\r\n  { SetVerifySMS, SetVerifyGoogle, SetVerifyEmail, verifyGoogle },\r\n  setShowGoogleAuthQRcode,\r\n  setGoogleQRcodeUrl\r\n) => (dispatch) => {\r\n  let DISABLE_GOOGLE_AUTH = auth.IS_GOOGLE_AUTH_ON;\r\n  let ENABLE_GOOGLE_AUTH = auth.ENABLE_GOOGLE_AUTH;\r\n  let URL = DISABLE_GOOGLE_AUTH;\r\n  let REQUEST_METHOD = \"put\";\r\n  if (obj.status) {\r\n    URL = ENABLE_GOOGLE_AUTH;\r\n    REQUEST_METHOD = \"post\";\r\n  } else {\r\n    URL = DISABLE_GOOGLE_AUTH;\r\n    REQUEST_METHOD = \"put\";\r\n  }\r\n\r\n  axios[REQUEST_METHOD](URL, obj)\r\n    .then(async (res) => {\r\n      if (res.status === 200) {\r\n        await dispatch({\r\n          type: IS_GOOGLE_AUTH_ON_SUCCESS,\r\n          payload: { status: obj.status },\r\n        });\r\n        let successMessage = (res && res.data.msg) || res.message;\r\n        alertToast(false, successMessage);\r\n\r\n        if (obj.status) {\r\n          setShowGoogleAuthQRcode(true); // Show QRcode Modal\r\n          setGoogleQRcodeUrl(res.data.dataURL); // Extract QRcode image URL\r\n        } else {\r\n          setShowGoogleAuthQRcode(false);\r\n          setGoogleQRcodeUrl(\"\");\r\n        }\r\n\r\n        if (verifyGoogle) {\r\n          SetVerifyGoogle(false);\r\n          SetVerifySMS(false);\r\n          SetVerifyEmail(false);\r\n        } else {\r\n          SetVerifyGoogle(true);\r\n          SetVerifySMS(false);\r\n          SetVerifyEmail(false);\r\n        }\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      let errorMessage = (err.response && err.response.data.msg) || err.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        payload: err,\r\n        type: IS_GOOGLE_AUTH_ON_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n// IS_SMS_AUTH_ON User\r\nexport const smsAuthentiactionOn = (\r\n  obj,\r\n  { SetVerifySMS, SetVerifyGoogle, SetVerifyEmail, verifySMS }\r\n) => (dispatch) => {\r\n  axios\r\n    .put(auth.IS_SMS_AUTH_ON, obj)\r\n    .then(async (res) => {\r\n      if (res.status === 200) {\r\n        await dispatch({\r\n          type: IS_SMS_AUTH_ON_SUCCESS,\r\n          payload: { status: obj.status },\r\n        });\r\n        let successMessage = (res && res.data.msg) || res.message;\r\n        alertToast(false, successMessage);\r\n        if (verifySMS) {\r\n          SetVerifySMS(false);\r\n          SetVerifyGoogle(false);\r\n          SetVerifyEmail(false);\r\n        } else {\r\n          SetVerifySMS(true);\r\n          SetVerifyGoogle(false);\r\n          SetVerifyEmail(false);\r\n        }\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      let errorMessage = (err.response && err.response.data.msg) || err.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        payload: err,\r\n        type: IS_SMS_AUTH_ON_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n// Update password\r\nexport const updatePassword = ({\r\n  formData,\r\n  setFormData,\r\n  setLoading,\r\n  setShow,\r\n}) => (dispatch) => {\r\n  axios\r\n    .put(auth.UPDATE_PASSWORD, formData)\r\n    .then(async (res) => {\r\n      if (res.status === 200) {\r\n        await dispatch({\r\n          type: UPDATE_PASSWORD_SUCCESS,\r\n          payload: { updatePassword: res.data.data },\r\n        });\r\n        let successMessage = (res && res.data.msg) || res.message;\r\n        alertToast(false, successMessage);\r\n        setFormData({\r\n          currentPassword: \"\",\r\n          Password: \"\",\r\n        });\r\n        setLoading(false);\r\n        setShow(false);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      let errorMessage = (err.response && err.response.data.msg) || err.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        payload: err,\r\n        type: UPDATE_PASSWORD_ERR,\r\n      });\r\n      setLoading(false);\r\n      setShow(false);\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\adminManagementServices.js",["831"],"import axios from \"axios\";\r\n\r\nimport {\r\n  GET_ADMIN_LIST_SUCCESS,\r\n  GET_ADMIN_LIST_ERR,\r\n  GET_ADMIN_BY_ID_SUCCESS,\r\n  GET_ADMIN_BY_ID_ERR,\r\n  GET_ADMIN_ITO_ERR,\r\n  GET_ADMIN_ITO_SUCCESS,\r\n  ADD_NEW_ADMIN_ERR,\r\n  ADD_NEW_ADMIN_SUCCESS,\r\n  ADMIN_LINK_ITO_SUCCESS,\r\n  ADMIN_LINK_ITO_ERR,\r\n  DELETE_ADMIN_ERR,\r\n  DELETE_ADMIN_SUCCESS,\r\n  ALL_ITO_SUCCESS,\r\n  ALL_ITO_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { admin, ito, userManagement } from \"../Routes/serverRoutes\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Get admins List\r\nexport const getAdminsList = (itoId) => (dispatch) => {\r\n  let URL = \"\";\r\n  if (itoId === \"\") {\r\n    URL = admin.GET_ADMIN_LIST;\r\n  } else {\r\n    URL = admin.GET_ADMIN_LIST + `?ito_id=${itoId}`;\r\n  }\r\n  axios\r\n    .get(URL)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ADMIN_LIST_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 400) {\r\n        dispatch({\r\n          type: GET_ADMIN_LIST_SUCCESS,\r\n          payload: error.response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_ADMIN_LIST_ERR,\r\n          payload: error.response && error.response.data,\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n//Get admin by Id\r\nexport const getAdminsById = (id) => (dispatch) => {\r\n  axios\r\n    .get(admin.GET_ADMIN_BY_ID + `/${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ADMIN_BY_ID_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ADMIN_BY_ID_ERR,\r\n        payload: error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get getAdmin ITO\r\nexport const getAvailableITO = () => (dispatch) => {\r\n  axios\r\n    .get(ito.GET_AVAILABLE_ITO)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ADMIN_ITO_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ADMIN_ITO_ERR,\r\n        payload: error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get All ITOs\r\nexport const getAllItos = () => (dispatch) => {\r\n  axios\r\n    .get(admin.GET_ALL_ITOS)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ALL_ITO_SUCCESS,\r\n        payload: { allItos: res.data.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ALL_ITO_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Add new admin\r\nexport const addNewAdmin = ({ formData, setFormData }) => (dispatch) => {\r\n  axios\r\n    .post(admin.ADD_NEW_ADMIN, formData)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_NEW_ADMIN_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      // let successMessage = (res.data && res.data.data.msg) || res.message;\r\n      alertToast(false, \"Admin Created Successfully\");\r\n      setFormData({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        contact_no: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      let errorMessage =\r\n        (error.response && error.response.data.msg) || error.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        type: ADD_NEW_ADMIN_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Add admin link ito\r\nexport const adminLinkITO = ({ id, obj, setSuccess }) => (dispatch) => {\r\n  axios\r\n    .put(admin.ADMIN_LINK_ITO + `/${id}/addITO`, obj)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADMIN_LINK_ITO_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      let successMessage = (res && res.data.msg) || res.message;\r\n      alertToast(false, successMessage);\r\n      setSuccess(true);\r\n    })\r\n    .catch((error) => {\r\n      let errorMessage =\r\n        (error.response && error.response.data.msg) || error.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        type: ADMIN_LINK_ITO_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//delete admin\r\nexport const deleteAdmin = (id) => (dispatch) => {\r\n  axios\r\n    .delete(admin.DELETE_ADMIN + `/${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DELETE_ADMIN_SUCCESS,\r\n        payload: id,\r\n      });\r\n      let successMessage = (res && res.data.msg) || res.message;\r\n      alertToast(false, successMessage);\r\n    })\r\n    .catch((error) => {\r\n      let errorMessage =\r\n        (error.response && error.response.data.msg) || error.message;\r\n      alertToast(true, errorMessage);\r\n      dispatch({\r\n        type: DELETE_ADMIN_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\walletService.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\subscription.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\userManagement.js",["832"],"import axios from \"axios\";\r\nimport {\r\n  GET_USERS_LIST_SUCCESS,\r\n  GET_USERS_LIST_ERR,\r\n  GET_USER_PROFILE_SUCCESS,\r\n  GET_USER_PROFILE_ERR,\r\n  GET_INVESTMENT_DETAIL_SUCCESS,\r\n  GET_INVESTMENT_DETAIL_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { userManagement, exchange } from \"../Routes/serverRoutes\";\r\n\r\n//alert tost\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Get All Investors List\r\nexport const getUsersList = () => (dispatch) => {\r\n  const role = \"user\";\r\n  axios\r\n    .get(userManagement.GET_ALL_USERS + `?role=${role}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_USERS_LIST_SUCCESS,\r\n        payload: { usersList: res.data.response },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_USERS_LIST_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get User Profile By Id\r\nexport const getUserProfile = (id) => (dispatch) => {\r\n  axios\r\n    .get(userManagement.GET_USER_PROFILE + `?id=${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_USER_PROFILE_SUCCESS,\r\n        payload: { userProfile: res.data.response },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_USER_PROFILE_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Get buy orders detail of a user by user_id\r\n//Get Investment Details of a user by user_id\r\nexport const getInvestmentDetailByUserId = (id) => (dispatch) => {\r\n  const orderType = \"buy_order\";\r\n  // console.log(id);\r\n  axios\r\n    .get(\r\n      exchange.GET_BUY_REQUEST_LIST + `?user_id=${id}&order_type=${orderType}`\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_INVESTMENT_DETAIL_SUCCESS,\r\n        payload: { investmentDetail: res.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_INVESTMENT_DETAIL_ERR,\r\n      });\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\UpcomingVoting\\upComingVotingItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\OngoingVoting\\onGoingVotingItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Voting\\PastVoting\\pastVotingItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminManagement\\AllUsersData\\userItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SingleApprovedRequests\\index.js",["833","834","835"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { data } from \"./../dummyData\";\r\nimport config from \"../../../Constants/config\";\r\n\r\nimport SingleApprovedItem from \"./SingleApprovedItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSingleApprovedKyc } from \"../../../Redux/actions/actions\";\r\n\r\nconst SingleApprovedRequest = ({\r\n  getSingleApprovedKyc,\r\n  kyc: {\r\n    singleApprovedData: { data },\r\n  },\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, config.itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getSingleApprovedKyc();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header text-white bg-cr-1\">\r\n        <strong>Single Approved Requests</strong>\r\n      </div>\r\n      <div className=\"card-body  p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            // width=\"100%\"\r\n            // cellSpacing=\"0\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n          >\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <SingleApprovedItem approvedRequestData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  kyc: state.kyc,\r\n});\r\n\r\nexport default connect(mpaStateToProps, { getSingleApprovedKyc })(\r\n  SingleApprovedRequest\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\ApprovedRequests\\index.js",["836","837","838"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { data } from \"./../dummyData\";\r\nimport config from \"./../../../Constants/config\";\r\n\r\nimport ApprovedRequestItem from \"./approvedRequestItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getApprovedKyc } from \"../../../Redux/actions/actions\";\r\n\r\nconst ApprovedRequest = ({\r\n  getApprovedKyc,\r\n  kyc: {\r\n    approvedData: { data },\r\n  },\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, config.itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getApprovedKyc();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header text-white bg-cr-1\">\r\n        <strong>Approved Requests</strong>\r\n      </div>\r\n      <div className=\"card-body  p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            // width=\"100%\"\r\n            // cellSpacing=\"0\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n          >\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <ApprovedRequestItem approvedRequestData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => ({\r\n  kyc: state.kyc,\r\n});\r\n\r\nexport default connect(mpaStateToProps, { getApprovedKyc })(ApprovedRequest);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\TokensDetail\\index.js",["839","840"],"import React, { useState, useEffect } from \"react\";\r\nimport TokensDetailItem from \"./TokensDetailItem\";\r\nimport { data } from \"../dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTokentList } from \"../../../Redux/actions/actions\";\r\n\r\nconst TokenDetail = ({ getTokentList, wallet }) => {\r\n  const { tokenList } = wallet;\r\n\r\n  useEffect(() => {\r\n    getTokentList();\r\n  }, []);\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"table-responsive\">\r\n        <table\r\n          className=\"table hover dils-table fn-500\"\r\n          width=\"100%\"\r\n          cellSpacing=\"0\"\r\n          style={{ marginTop: \"0\" }}\r\n        >\r\n          <thead className=\"bg-cr-1 text-white\">\r\n            <tr>\r\n              <th>Token Name</th>\r\n              <th>Price</th>\r\n              <th>Marketcap</th>\r\n              <th>Balance</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {data &&\r\n              data\r\n                .slice(\r\n                  screen * itemsPerScreen - itemsPerScreen,\r\n                  itemsPerScreen * screen\r\n                )\r\n                .map((item) => (\r\n                  <tr key={item.id}>\r\n                    <TokensDetailItem item={item} />\r\n                  </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n        {(!data || (data && data.length === 0)) && (\r\n          <h2 className=\"text-center\">No Record Found</h2>\r\n        )}\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default TokenDetail;\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    wallet: state.wallet,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getTokentList,\r\n})(TokenDetail);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\WalletCards\\index.js",["841"],"import React, { Fragment, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getWalletDetails } from \"../../../Redux/actions/actions\";\r\n\r\nconst WalletCards = ({ getWalletDetails, wallet }) => {\r\n  const { walletDetails } = wallet;\r\n\r\n  useEffect(() => {\r\n    getWalletDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card bg-cr-1 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot font-30 fn-500\">\r\n                {(walletDetails && walletDetails.fiat_balances) || \"\"}$\r\n              </p>\r\n              <span className=\"dashboard-cd-blc\">FIAT BALANCE</span>\r\n            </div>\r\n            <div className=\"dashboard-cd-icon d-inline-block float-right\">\r\n              <i className=\"far fa-chart-bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card bg-cr-2 text-white mb-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-inline-block\">\r\n              <p className=\"dashboard-cd-amot font-30 fn-500\">\r\n                {\" \"}\r\n                {(walletDetails && walletDetails.tokens) || \"\"}\r\n              </p>\r\n              <span className=\"dashboard-cd-blc\">TOKENS</span>\r\n            </div>\r\n            <div className=\"dashboard-cd-icon d-inline-block float-right\">\r\n              <i className=\"fas fa-coins\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    wallet: state.wallet,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getWalletDetails,\r\n})(WalletCards);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AvailableTokens\\index.js",["842","843"],"import React, { useState, useEffect } from \"react\";\r\nimport { data } from \"../dummyData\";\r\nimport AvailableTokensItem from \"./AvailableTokensItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\nimport { getUnholdTokensList } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AvailableTokens = ({\r\n  exchange: {\r\n    unholdData: { data },\r\n  },\r\n  getUnholdTokensList,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getUnholdTokensList();\r\n  }, []);\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Price</th>\r\n                <th>Supply</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <AvailableTokensItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchange: state.exchange,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUnholdTokensList })(\r\n  AvailableTokens\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\AvailableTokens\\index.js",["844","845"],"import React, { useState, useEffect } from \"react\";\r\nimport { data } from \"../../dummyData\";\r\nimport AvailableTokensItem from \"./AvailableTokensItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../../Constants/config\";\r\nimport { getUnholdTokensList } from \"../../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AvailableTokens = ({\r\n  exchange: {\r\n    unholdData: { data },\r\n  },\r\n  getUnholdTokensList,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getUnholdTokensList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Price</th>\r\n                <th>Supply</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <AvailableTokensItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchange: state.exchange,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUnholdTokensList })(\r\n  AvailableTokens\r\n);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\BuyRequests\\index.js",["846","847","848"],"import React, { useEffect, useState } from \"react\";\r\nimport BuyRequestsItem from \"./BuyRequestsItem\";\r\nimport { data1 } from \"../../dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../../Constants/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getBuyRequestsList } from \"./../../../../Services/exchange\";\r\n\r\nconst BuyRequests = ({ getBuyRequestsList, data }) => {\r\n  const { buyRequestList } = data;\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = buyRequestList && buyRequestList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getBuyRequestsList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Person Name</th>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Amount</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {buyRequestList &&\r\n                buyRequestList\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <BuyRequestsItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!buyRequestList || buyRequestList.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    data: state.exchange,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getBuyRequestsList,\r\n})(BuyRequests);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\SellRequests\\index.js",["849","850","851"],"import React, { useState, useEffect } from \"react\";\r\nimport { data1 } from \"../../dummyData\";\r\nimport SellRequestsItem from \"./SellRequestsItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../../Constants/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getSellRequestsList } from \"./../../../../Services/exchange\";\r\n\r\nconst SellRequests = ({ getSellRequestsList, data }) => {\r\n  const { sellRequestList } = data;\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = sellRequestList && sellRequestList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getSellRequestsList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Person Name</th>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Amount</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {sellRequestList &&\r\n                sellRequestList\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <SellRequestsItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!sellRequestList || sellRequestList.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    data: state.exchange,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getSellRequestsList,\r\n})(SellRequests);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Ongoing\\index.js",["852","853"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\n\r\nimport { data } from \"../dummyData\";\r\nimport OngoingItem from \"./onGoingItem\";\r\nimport { getOngoingIto } from \"../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Ongoing = ({\r\n  ito: {\r\n    ongoingData: { data },\r\n  },\r\n  getOngoingIto,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % config.itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / config.itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / config.itemsPerScreen) + 1);\r\n    }\r\n  }, [countData]);\r\n  useEffect(() => {\r\n    getOngoingIto();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            style={{\r\n              width: \"100%\",\r\n              cellspacing: \"0\",\r\n            }}\r\n            // width=\"100%\"\r\n            // cellspacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>ITO Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Token Created</th>\r\n                <th>ITO Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * config.itemsPerScreen - config.itemsPerScreen,\r\n                    config.itemsPerScreen * screen\r\n                  )\r\n                  .map((item, index) => (\r\n                    <tr key={index}>\r\n                      <OngoingItem OngoingData={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || (data && data.length === 0)) && (\r\n            <h4 className=\"text-center\">No Record Found</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ito: state.ito,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOngoingIto })(Ongoing);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\OnholdTokens\\index.js",["854","855"],"import React, { useState, useEffect } from \"react\";\r\nimport OnholdTokensItem from \"./OnholdTokensItem\";\r\nimport { data } from \"../../dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../../Constants/config\";\r\nimport { getOnholdTokensList } from \"../../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst OnholdTokens = ({\r\n  exchange: {\r\n    onholdData: { data },\r\n  },\r\n  getOnholdTokensList,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getOnholdTokensList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Price</th>\r\n                <th>Supply</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <OnholdTokensItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchange: state.exchange,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOnholdTokensList })(OnholdTokens);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\TokensList\\index.js",["856"],"import React, { useState, useEffect } from \"react\";\r\n// import { data } from \"../../dummyData\";\r\nimport TokensListItem from \"./TokensListItem\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../../Constants/config\";\r\nimport { getTokensList } from \"../../../../Redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TokensList = ({\r\n  exchange: {\r\n    tokenData: { data },\r\n  },\r\n  getTokensList,\r\n}) => {\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.userPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n  const countData = data && data.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  useEffect(() => {\r\n    getTokensList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"table-responsive\">\r\n          <table\r\n            className=\"table hover dils-table\"\r\n            width=\"100%\"\r\n            cellSpacing=\"0\"\r\n          >\r\n            <thead className=\"bg-cr-1 text-white\">\r\n              <tr>\r\n                <th>Token Name</th>\r\n                <th>Token Symbol</th>\r\n                <th>Price</th>\r\n                <th>Supply</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data\r\n                  .slice(\r\n                    screen * itemsPerScreen - itemsPerScreen,\r\n                    itemsPerScreen * screen\r\n                  )\r\n                  .map((item) => (\r\n                    <tr key={item.id}>\r\n                      <TokensListItem item={item} />\r\n                    </tr>\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n          {(!data || data.length === 0) && (\r\n            <h4 className=\"text-center\">No Record Found ...</h4>\r\n          )}\r\n        </div>\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchange: state.exchange,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTokensList })(TokensList);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\PendingRequests\\pendingRequestItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\RejectedRequests\\rejectedRequestItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\dummyData.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Past\\pasItem.js",["857"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst PastItem = ({ PastData }) => {\r\n  let history = useHistory();\r\n\r\n  const toItoManagementDetail = (e) => {\r\n    history.push(Route.ITO_MANAGEMENT_DETAILS_BTN + `${PastData.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <td>{PastData.name}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{PastData.start_date}</Moment>\r\n      </td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{PastData.end_date}</Moment>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          onClick={toItoManagementDetail}\r\n        >\r\n          VIEW DETAILS\r\n        </button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PastItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Upcoming\\upComingItem.js",["858","859"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst UpCommingItem = ({ upCommingData }) => {\r\n  let history = useHistory();\r\n\r\n  const toItoManagementDetail = (e) => {\r\n    history.push(Route.ITO_MANAGEMENT_DETAILS_BTN + `${upCommingData.id}`);\r\n  };\r\n\r\n  const toCreateToken = (e) => {\r\n    history.push(Route.CREATE_TOKEN_BTN + `${upCommingData.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <td>{upCommingData.name}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{upCommingData.start_date}</Moment>\r\n      </td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{upCommingData.end_date}</Moment>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          onClick={toItoManagementDetail}\r\n        >\r\n          VIEW DETAILS\r\n        </button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpCommingItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Routes\\serverRoutes.js",["860"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\NavGroup\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\ApprovedRequests\\approvedRequestItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\dummyData.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Wallet\\TokensDetail\\TokensDetailItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\KycManagement\\SingleApprovedRequests\\SingleApprovedItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\dummyData.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\Ongoing\\onGoingItem.js",["861"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst OngoingItem = ({ OngoingData }) => {\r\n  let history = useHistory();\r\n\r\n  const toItoManagementDetail = (e) => {\r\n    history.push({\r\n      pathname: Route.ITO_MANAGEMENT_DETAILS_BTN + `${OngoingData.id}`,\r\n      state: \"ongoing\",\r\n    });\r\n  };\r\n  const toCreateToken = (e) => {\r\n    history.push(Route.CREATE_TOKEN_BTN + `${OngoingData.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <td>{OngoingData.name}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{OngoingData.start_date}</Moment>\r\n      </td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{OngoingData.end_date}</Moment>\r\n      </td>\r\n      <td>{OngoingData.ito_token_id ? \"Success\" : \"Pending\"}</td>\r\n      <td>{OngoingData.onhold ? \"Blocked\" : \"Unblocked\"}</td>\r\n      <td>\r\n        <button\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          onClick={toItoManagementDetail}\r\n        >\r\n          VIEW DETAILS\r\n        </button>\r\n        <button\r\n          className=\"dls-btn bg-semi-black text-white mr-2\"\r\n          onClick={toCreateToken}\r\n          disabled={OngoingData.ito_token_id ? true : false}\r\n        >\r\n          CREATE TOKEN\r\n        </button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OngoingItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\BuyRequests\\BuyRequestsItem.js",["862"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst BuyRequestsItem = ({ item }) => {\r\n  return (\r\n    <Fragment>\r\n      <td className=\"fn-600\">{`${item.fname} ${item.lname}`}</td>\r\n      <td className=\"fn-600\">{item.token_name}</td>\r\n      <td className=\"fn-600\">{item.token_symbol}</td>\r\n      <td className=\"fn-600\">{item.amount}</td>\r\n      <td className=\"text-dr-blu\">\r\n        <span className=\"pro-date mb-0\">\r\n          <i className=\"far fa-calendar\"></i>\r\n          {\"   \"}\r\n          <Moment format=\"D MMM YYYY\" withTitle>\r\n            {item && item.created_at}\r\n          </Moment>\r\n        </span>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BuyRequestsItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AvailableTokens\\AvailableTokensItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\dummyData.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\BuySellRequests\\SellRequests\\SellRequestsItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\OnholdTokens\\OnholdTokensItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddRemoveToken\\AvailableTokens\\AvailableTokensItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Exchange\\AddTokenToExchange\\TokensList\\TokensListItem.js",["863"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addTokenToExchange } from \"../../../../Services/exchange\";\r\n\r\nconst TokensListItem = ({\r\n  item: { id, token_name, token_symbol, price, supply },\r\n  addTokenToExchange,\r\n}) => {\r\n  const onClickAddToken = (e) => {\r\n    e.preventDefault();\r\n    addTokenToExchange({ id });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <td className=\"fn-600 text-dr-blu\">{token_name}</td>\r\n      <td className=\"fn-600\">{token_symbol}</td>\r\n      <td className=\"fn-600\">{price}</td>\r\n      <td>{supply}</td>\r\n      <td>\r\n        <button\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          onClick={onClickAddToken}\r\n        >\r\n          ADD TOKEN\r\n        </button>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addTokenToExchange })(TokensListItem);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\App\\Layout\\AdminLayout\\Navigation\\NavContent\\NavItem\\index.js",["864"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavItem = ({ item }) => {\r\n  const [color, setColor] = useState(\"rgba(255, 255, 255, 0.5)\");\r\n\r\n  useEffect(() => {\r\n    let pathNameSplit = window.location.pathname.split(\"/\");\r\n    let parentPathName = `/${pathNameSplit[1]}/${pathNameSplit[2]}`;\r\n    if (parentPathName === item.url) {\r\n      setColor(\"white\");\r\n    } else {\r\n      setColor(\"rgba(255, 255, 255, 0.5)\");\r\n    }\r\n  }, [window.location.pathname, color, item.url]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"nav-link\" to={item.url} style={{ color: color }}>\r\n        <div className=\"sb-nav-link-icon\">\r\n          <i className={item.icon}></i>\r\n        </div>\r\n        {item.title}\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\votingServices.js",["865"],"import axios from \"axios\";\r\n\r\nimport {\r\n  GET_ONGOING_VOTING_SUCCESS,\r\n  GET_ONGOING_VOTING_ERR,\r\n  GET_UPCOMING_VOTING_SUCCESS,\r\n  GET_UPCOMING_VOTING_ERR,\r\n  GET_CLOSED_VOTING_SUCCESS,\r\n  GET_CLOSED_VOTING_ERR,\r\n  GET_VOTING_DETAIL_SUCCESS,\r\n  GET_VOTING_DETAIL_ERR,\r\n  CREATE_VOTE_SUCCESS,\r\n  CREATE_VOTE_ERR,\r\n  GET_ALL_ITO_SUCCESS,\r\n  GET_ALL_ITO_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { voting, ito } from \"../Routes/serverRoutes\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Get ongoing voting list\r\nexport const getOngoingVoting = ({ ito_id }) => (dispatch) => {\r\n  let Url = \"\";\r\n  if (ito_id !== \"\") {\r\n    Url = `/by_status?status=ongoing&ito_id=${ito_id}`;\r\n  } else {\r\n    Url = `/by_status?status=ongoing`;\r\n  }\r\n  axios\r\n    .get(voting.GET_VOTING + Url)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ONGOING_VOTING_SUCCESS,\r\n        payload: { onGoingVoting: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: GET_ONGOING_VOTING_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get closed voting list\r\nexport const getClosedVoting = ({ ito_id }) => (dispatch) => {\r\n  let Url = \"\";\r\n  if (ito_id !== \"\") {\r\n    Url = `/by_status?status=closed&ito_id=${ito_id}`;\r\n  } else {\r\n    Url = `/by_status?status=closed`;\r\n  }\r\n\r\n  axios\r\n    .get(voting.GET_VOTING + Url)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_CLOSED_VOTING_SUCCESS,\r\n        payload: { closedVoting: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_CLOSED_VOTING_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get closed voting list\r\nexport const getOnlyClosedVoting = () => (dispatch) => {\r\n  let Url = \"/by_status?status=closed\";\r\n  axios\r\n    .get(voting.GET_VOTING + Url)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_CLOSED_VOTING_SUCCESS,\r\n        payload: { closedVoting: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_CLOSED_VOTING_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get upcoming voting list\r\nexport const getUpcomingVoting = ({ ito_id }) => (dispatch) => {\r\n  let Url = \"\";\r\n  if (ito_id !== \"\") {\r\n    Url = `/by_status?status=upcoming&ito_id=${ito_id}`;\r\n  } else {\r\n    Url = `/by_status?status=upcoming`;\r\n  }\r\n\r\n  axios\r\n    .get(voting.GET_VOTING + Url)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_UPCOMING_VOTING_SUCCESS,\r\n        payload: { upComingVoting: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_UPCOMING_VOTING_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get getAdmin ITO\r\nexport const getAllITO = () => (dispatch) => {\r\n  axios\r\n    .get(voting.GET_ALL_ITO)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ALL_ITO_SUCCESS,\r\n        payload: { itoList: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ALL_ITO_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n//Get vote detail by id\r\nexport const getVoteDetailById = (id, setStartTime, setEndTime) => (\r\n  dispatch\r\n) => {\r\n  axios\r\n    .get(voting.GET_VOTING + `/${id}`)\r\n    .then((res) => {\r\n      setStartTime(new Date(res.data.data.start_date).getTime());\r\n      setEndTime(new Date(res.data.data.end_date).getTime());\r\n      dispatch({\r\n        type: GET_VOTING_DETAIL_SUCCESS,\r\n        payload: { votingDetail: res.data.data },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_VOTING_DETAIL_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n// creat vote\r\nexport const creatVote = ({ formData, setFormData }) => (dispatch) => {\r\n  axios\r\n    .post(voting.GET_VOTING, formData)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CREATE_VOTE_SUCCESS,\r\n        payload: { createVote: res.data.data },\r\n      });\r\n      let successMessage = \"Vote Created successfully\";\r\n      alertToast(false, successMessage);\r\n      setFormData({\r\n        name: \"\",\r\n        start_date: \"\",\r\n        end_date: \"\",\r\n        description: \"\",\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: CREATE_VOTE_ERR,\r\n        payload: error && error.response && error.response.data,\r\n      });\r\n      let errorMessage =\r\n        (error.response && error.response.data.msg) || error.message;\r\n      alertToast(true, errorMessage);\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\voting.js",["866"],"import {\r\n  GET_ONGOING_VOTING_SUCCESS,\r\n  GET_ONGOING_VOTING_ERR,\r\n  GET_UPCOMING_VOTING_SUCCESS,\r\n  GET_UPCOMING_VOTING_ERR,\r\n  GET_CLOSED_VOTING_SUCCESS,\r\n  GET_CLOSED_VOTING_ERR,\r\n  GET_VOTING_DETAIL_SUCCESS,\r\n  GET_VOTING_DETAIL_ERR,\r\n  CREATE_VOTE_SUCCESS,\r\n  CREATE_VOTE_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  onGoingVoting: [],\r\n  upComingVoting: [],\r\n  closedVoting: [],\r\n  votingDetail: {},\r\n  createVote: {},\r\n  loading: true,\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_ONGOING_VOTING_SUCCESS:\r\n    case GET_UPCOMING_VOTING_SUCCESS:\r\n    case GET_CLOSED_VOTING_SUCCESS:\r\n    case GET_VOTING_DETAIL_SUCCESS:\r\n    case CREATE_VOTE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ONGOING_VOTING_ERR:\r\n    case GET_UPCOMING_VOTING_ERR:\r\n    case GET_CLOSED_VOTING_ERR:\r\n    case GET_VOTING_DETAIL_ERR:\r\n    case CREATE_VOTE_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\adminRequest.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\adminRequest.js",["867"],"import {\r\n  GET_DEPOSITES_LIST_SUCCESS,\r\n  GET_DEPOSITES_LIST_ERR,\r\n  CONFIRM_DEPOSITE_SUCCESS,\r\n  CONFIRM_DEPOSITE_ERR,\r\n  GET_DEPOSITE_BY_ID_SUCCESS,\r\n  GET_DEPOSITE_BY_ID_ERR,\r\n  GET_ALL_DEPOSITES_LIST_SUCCESS,\r\n  GET_ALL_DEPOSITES_LIST_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n\r\n  pendingDepositeList: [],\r\n  allDepositesList: [],\r\n  depositeDetails: {},\r\n\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_DEPOSITES_LIST_SUCCESS:\r\n    case GET_ALL_DEPOSITES_LIST_SUCCESS:\r\n    case GET_DEPOSITE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case CONFIRM_DEPOSITE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        depositeDetails: { ...state.depositeDetails, status: payload },\r\n        loading: false,\r\n      };\r\n\r\n    case GET_DEPOSITES_LIST_ERR:\r\n    case CONFIRM_DEPOSITE_ERR:\r\n    case GET_DEPOSITE_BY_ID_ERR:\r\n    case GET_ALL_DEPOSITES_LIST_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\index.js",["868","869","870","871","872"],"import React, { useState, useEffect } from \"react\";\r\nimport { data } from \"../../Components/Wallet/dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../Constants/config\";\r\nimport ConfirmRequestItem from \"./confirmRequesetItem\";\r\nimport { connect } from \"react-redux\";\r\nimport Requests from \"./ApprovedRequests\";\r\nimport {\r\n  getDepositesList,\r\n  confrimDeposite,\r\n} from \"'../../../src/Services/adminRequest\";\r\n\r\nimport SingleApproved from \"./SingleApproved/index\";\r\n\r\nconst AdminRequest = ({ adminRequest, getDepositesList }) => {\r\n  const { pendingDepositeList } = adminRequest;\r\n\r\n  useEffect(() => {\r\n    getDepositesList();\r\n  }, []);\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n\r\n  const countData = pendingDepositeList && pendingDepositeList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <h4 className=\"tbl-small-heading\">PENDING DEPOSITES REQUESTS</h4>\r\n\r\n          <div className=\"card\">\r\n            <div className=\"table-responsive\">\r\n              <table\r\n                className=\"table hover dils-table fn-500\"\r\n                width=\"100%\"\r\n                cellSpacing=\"0\"\r\n                style={{ marginTop: \"0\" }}\r\n              >\r\n                <thead className=\"bg-cr-1 text-white\">\r\n                  <tr>\r\n                    <th>Account Name</th>\r\n                    <th>Transfer Ammount</th>\r\n                    <th>Transfer Fee</th>\r\n                    <th>Total Ammount</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  {pendingDepositeList &&\r\n                    pendingDepositeList\r\n                      .slice(\r\n                        screen * itemsPerScreen - itemsPerScreen,\r\n                        itemsPerScreen * screen\r\n                      )\r\n                      .map((item) => (\r\n                        <tr key={item.id}>\r\n                          <ConfirmRequestItem item={item} />\r\n                        </tr>\r\n                      ))}\r\n                </tbody>\r\n              </table>\r\n              {(!pendingDepositeList ||\r\n                (pendingDepositeList && pendingDepositeList.length === 0)) && (\r\n                <h4 className=\"text-center\">No Record Found ...</h4>\r\n              )}\r\n              <div style={{ marginBottom: \"5px\" }}>\r\n                <Pagination\r\n                  count={count}\r\n                  shape=\"rounded\"\r\n                  screen={screen}\r\n                  onChange={handleChange}\r\n                  showFirstButton\r\n                  showLastButton\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12  mt-5\">\r\n          <div>\r\n            <h4 className=\"tbl-small-heading\">\r\n              Single Approved Requests{\" \"}\r\n              <a className=\"view-mor-gr-link float-right mb-3\" href=\"#\">\r\n                Explore More\r\n              </a>\r\n            </h4>\r\n          </div>\r\n          <div className=\"card-body  p-0\">\r\n            <SingleApproved />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mb-5 mt-5\">\r\n          <div>\r\n            <h4 className=\"tbl-small-heading\">\r\n              Approved Requests{\" \"}\r\n              <a className=\"view-mor-gr-link float-right mb-3\" href=\"#\">\r\n                Explore More\r\n              </a>\r\n            </h4>\r\n          </div>\r\n          <div className=\"card-body  p-0\">\r\n            <Requests />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    adminRequest: state.adminRequest,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getDepositesList,\r\n})(AdminRequest);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\DepositeDetails\\index.js",["873","874"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getDepositesById,\r\n  confrimDeposite,\r\n} from \"../../../Redux/actions/actions\";\r\n\r\nconst DepositeDetails = ({\r\n  adminRequest: { depositeDetails },\r\n  getDepositesById,\r\n  confrimDeposite,\r\n  match,\r\n  auth: { userDetails },\r\n}) => {\r\n  useEffect(() => {\r\n    let { id } = match.params;\r\n\r\n    getDepositesById(id);\r\n  }, []);\r\n\r\n  const handleApproved = (id) => {\r\n    const obj = {\r\n      status: \"approved\",\r\n    };\r\n    confrimDeposite({ id, obj });\r\n  };\r\n\r\n  const handleDisapproved = (id) => {\r\n    const obj = {\r\n      status: \"rejected\",\r\n    };\r\n    confrimDeposite({ id, obj });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-md-10 offset-md-1\">\r\n        {/* <!-- inner row --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card pu-rel text-dark p-5 mb-3\">\r\n              <h2 className=\"page-title-heading mb-4 font-30 text-center\">\r\n                Deposite Details\r\n              </h2>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-12\">\r\n                  <ul className=\"row profile-detail\">\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Account Name</span>\r\n                      <span>{depositeDetails.account_name || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Account Number</span>\r\n                      <span>{depositeDetails.account_no || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Bank Name</span>\r\n                      <span>{depositeDetails.bank_name || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Country</span>\r\n                      <span>{depositeDetails.country || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Swift</span>\r\n                      <span>{depositeDetails.swift || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>From account</span>\r\n                      <span>{depositeDetails.from_account || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Currency</span>\r\n                      <span>{depositeDetails.currency || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Status</span>\r\n                      <span>{depositeDetails.status || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Transfer amount</span>\r\n                      <span>{depositeDetails.transfer_amount || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Total Amount</span>\r\n                      <span>{depositeDetails.total_amount || \"\"}</span>\r\n                    </li>\r\n                    <li className=\"col-12 col-md-6\">\r\n                      <span>Transfer Fee</span>\r\n                      <span>{depositeDetails.transfer_fee || \"\"}</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row mt-4\">\r\n                    <div className=\"col-sm-4\">\r\n                      <img\r\n                        src={`${depositeDetails.bank_draft}` || \"\"}\r\n                        alt=\"Transaction receipt\"\r\n                        width=\"300px\"\r\n                        height=\"200px\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-4 ml-2\">\r\n                    {depositeDetails.status === \"pending\" ? (\r\n                      <div>\r\n                        {userDetails.id ===\r\n                        (depositeDetails.user1_approve ||\r\n                          depositeDetails.user2_approve) ? null : (\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-success font-12 btn-green\"\r\n                              onClick={() => handleApproved(depositeDetails.id)}\r\n                            >\r\n                              Approve\r\n                            </button>\r\n\r\n                            <button\r\n                              className=\"btn btn-info font-12 btn-green ml-5\"\r\n                              onClick={() =>\r\n                                handleDisapproved(depositeDetails.id)\r\n                              }\r\n                            >\r\n                              Dispprove\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end inner row --> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    adminRequest: state.adminRequest,\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getDepositesById,\r\n  confrimDeposite,\r\n})(DepositeDetails);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\confirmRequesetItem.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\calculator.js",["875"],"import axios from \"axios\";\r\nimport {\r\n  GET_ALL_TOKENS_SUCCESS,\r\n  GET_ALL_TOKENS_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport { exchange } from \"../Routes/serverRoutes\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Get All Tokens List\r\nexport const getAllTokensList = () => (dispatch) => {\r\n  axios\r\n    .get(exchange.GET_TOKENS)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ALL_TOKENS_SUCCESS,\r\n        payload: { tokensdata: res.data.data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_ALL_TOKENS_ERR,\r\n      });\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\calculator.js",["876"],"import { GET_ALL_TOKENS_SUCCESS, GET_ALL_TOKENS_ERR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  tokensdata: [],\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_ALL_TOKENS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_ALL_TOKENS_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\index.js",["877","878","879","880","881"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"../../Constants/browserRoutes\";\r\n\r\nconst ContentManagement = () => {\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"card bg-lit-gr  mb-3\">\r\n                    <div className=\"card-body py-2 px-3\">\r\n                      <p className=\"font-14 mb-0 text-justify\">\r\n                        Home{\" \"}\r\n                        <Link\r\n                          className=\"view-mor-gr-link float-right\"\r\n                          to={Route.EDIT_HOME}\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"card bg-lit-gr  mb-3\">\r\n                    <div className=\"card-body py-2 px-3\">\r\n                      <p className=\"font-14 mb-0 text-justify\">\r\n                        About{\" \"}\r\n                        <Link\r\n                          className=\"view-mor-gr-link float-right\"\r\n                          to={Route.EDIT_ABOUT}\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"card bg-lit-gr  mb-3\">\r\n                    <div className=\"card-body py-2 px-3\">\r\n                      <p className=\"font-14 mb-0 text-justify\">\r\n                        Crypto{\" \"}\r\n                        <a className=\"view-mor-gr-link float-right\" href=\"#\">\r\n                          Edit\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"card bg-lit-gr  mb-3\">\r\n                    <div className=\"card-body py-2 px-3\">\r\n                      <p className=\"font-14 mb-0 text-justify\">\r\n                        Contact{\" \"}\r\n                        <a className=\"view-mor-gr-link float-right\" href=\"#\">\r\n                          Edit\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"card bg-lit-gr  mb-3\">\r\n                    <div className=\"card-body py-2 px-3\">\r\n                      <p className=\"font-14 mb-0 text-justify\">\r\n                        Services{\" \"}\r\n                        <a className=\"view-mor-gr-link float-right\" href=\"#\">\r\n                          Edit\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentManagement;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditHome\\index.js",["882","883"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditHome = () => {\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" action=\"\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-4\">\r\n                    <div className=\"form-group upload-input-sty\">\r\n                      <p className=\"upload-icon\">\r\n                        <i className=\"far fa-image\"></i>\r\n                      </p>\r\n                      <label for=\"exampleFormControlFile1\">\r\n                        Upload_Logo <i className=\"fas fa-plus-circle\"></i>\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"form-control-file\"\r\n                        id=\"exampleFormControlFile1\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-12 mb-3\">\r\n                    <textarea\r\n                      placeholder=\"Banner\"\r\n                      className=\"form-control\"\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"col-sm-12\">\r\n                    <textarea\r\n                      placeholder=\"Tagline\"\r\n                      className=\"form-control\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-dark btn-lg\">\r\n                  Update\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditHome;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditAbout\\index.js",["884","885"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditAbout = () => {\r\n  return (\r\n    <div className=\"col-12 col-md-8 offset-md-2\">\r\n      {/* <!-- inner row --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body p-5\">\r\n              <form className=\"form\" action=\"\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-12 mb-3\">\r\n                    <textarea\r\n                      rows=\"6\"\r\n                      placeholder=\"Description\"\r\n                      className=\"form-control\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-dark btn-lg\">\r\n                  Update\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- end inner row --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAbout;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ItoManagement\\ItoDetails\\BlockUnblockModal.js",["886","887"],"import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst BlockUnblockModal = ({ show, setShow, status }) => {\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"sm\"\r\n      show={show}\r\n      onHide={handleClose}\r\n      style={{ opacity: 1 }}\r\n      centered\r\n    >\r\n      <div className=\"modal-header border-0\">\r\n        <button type=\"button\" className=\"close\" onClick={handleClose}>\r\n          <span className=\"font-18\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <Modal.Body className=\"text-center\">\r\n        <p>\r\n          You have <strong>{status}</strong> this ITO\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary w-25 btn-md\"\r\n          onClick={handleClose}\r\n        >\r\n          Ok\r\n        </button>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"border-0\"></Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BlockUnblockModal;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\dashboardServices.js",["888","889"],"import axios from \"axios\";\r\nimport {\r\n  ALL_ELECTIONS_COUNT_SUCCESS,\r\n  ALL_ELECTIONS_COUNT_ERR,\r\n  ALL_USERS_COUNT_SUCCESS,\r\n  ALL_USERS_COUNT_ERR,\r\n  ALL_ORDERS_COUNT_SUCCESS,\r\n  ALL_ORDERS_COUNT_ERR,\r\n  INVESTMENT_PER_MONTH_SUCCESS,\r\n  INVESTMENT_PER_MONTH_ERR,\r\n  USERS_PER_MONTH_SUCCESS,\r\n  USERS_PER_MONTH_ERR,\r\n  ORDERS_PER_DAY_SUCCESS,\r\n  ORDERS_PER_DAY_ERR,\r\n  ALL_TOKENS_COUNT_SUCCESS,\r\n  ALL_TOKENS_COUNT_ERR,\r\n} from \"../Redux/actions/types\";\r\nimport { dashboard } from \"../Routes/serverRoutes\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"react-moment\";\r\n\r\n//alert tost\r\n\r\nconst alertToast = (error, message) => {\r\n  if (!error) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n//Count ALl Elections\r\nexport const countAllElections = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_ELECTIONS_COUNT)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ALL_ELECTIONS_COUNT_SUCCESS,\r\n        payload: { countElections: res.data.count },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ALL_ELECTIONS_COUNT_ERR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n//Count ALL Registered Users\r\nexport const countAllRegisteredUsers = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_USERS_COUNT)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ALL_USERS_COUNT_SUCCESS,\r\n        payload: { countUsers: res.data.count },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ALL_USERS_COUNT_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Count All Tokens\r\nexport const countAllTokens = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_TOKENS_COUNT)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ALL_TOKENS_COUNT_SUCCESS,\r\n        payload: { countTokens: res.data.data.count },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ALL_TOKENS_COUNT_ERR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n//Count ALL Exchnage Orders\r\nexport const countAllExchangeOrders = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_ORDERS_COUNT)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ALL_ORDERS_COUNT_SUCCESS,\r\n        payload: { countOrders: res.data.count },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ALL_ORDERS_COUNT_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//COunt All Investment Per Month\r\nexport const countInvestmentPerMonth = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_INVESTMENT_PER_MONTH)\r\n    .then((res) => {\r\n      let months = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      let data = res.data.data.reduce((acc, current) => {\r\n        let monthIndex = new Date(current.investment_to_month).getMonth();\r\n        let currentMonth = months[monthIndex];\r\n        let currentYear = new Date(current.investment_to_month).getFullYear();\r\n        let investment_to_month = `${currentMonth}-${currentYear}`;\r\n        acc.push({\r\n          investment_to_month: investment_to_month,\r\n          Investment: current.investment,\r\n        });\r\n        return acc;\r\n      }, []);\r\n      dispatch({\r\n        type: INVESTMENT_PER_MONTH_SUCCESS,\r\n        payload: { investmentGraphDetail: data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: INVESTMENT_PER_MONTH_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Count ALL Registered Users Per Month\r\nexport const countRegiteredUsersPerMonth = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_REGISTERED_USERS_PER_MONTH)\r\n    .then((res) => {\r\n      let months = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      let data = res.data.data.reduce((acc, current) => {\r\n        let monthIndex = new Date(current.register_to_month).getMonth();\r\n        let currentMonth = months[monthIndex];\r\n        let currentYear = new Date(current.register_to_month).getFullYear();\r\n        let register_to_month = `${currentMonth}-${currentYear}`;\r\n        acc.push({\r\n          register_to_month: register_to_month,\r\n          No_Of_Users: current.count,\r\n        });\r\n        return acc;\r\n      }, []);\r\n      dispatch({\r\n        type: USERS_PER_MONTH_SUCCESS,\r\n        payload: { usersGraphDetail: data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: USERS_PER_MONTH_ERR,\r\n      });\r\n    });\r\n};\r\n\r\n//Count ALL Exchnage Orders Per day\r\nexport const countExchangeOrdersPerDay = () => (dispatch) => {\r\n  axios\r\n    .get(dashboard.ALL_ORDERS_PER_DAY)\r\n    .then((res) => {\r\n      let data = res.data.data.reduce((acc, current) => {\r\n        let currentDate = new Date(current.exchange_to_day).getDate();\r\n        let currentMonth = new Date(current.exchange_to_day).getMonth() + 1; // months start from 0,1,2 to 11\r\n        let currentYear = new Date(current.exchange_to_day).getFullYear();\r\n        let exchange_to_date = `${currentMonth}-${currentDate}-${currentYear}`;\r\n        acc.push({\r\n          exchange_to_day: exchange_to_date,\r\n          buy_orders: current.count_buy,\r\n          sell_orders: current.count_sell,\r\n        });\r\n        return acc;\r\n      }, []);\r\n      dispatch({\r\n        type: ORDERS_PER_DAY_SUCCESS,\r\n        payload: { ordersGraphDetail: data },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ORDERS_PER_DAY_ERR,\r\n      });\r\n    });\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\dashboard.js",["890"],"import {\r\n  ALL_ELECTIONS_COUNT_SUCCESS,\r\n  ALL_ELECTIONS_COUNT_ERR,\r\n  ALL_USERS_COUNT_SUCCESS,\r\n  ALL_USERS_COUNT_ERR,\r\n  ALL_ORDERS_COUNT_SUCCESS,\r\n  ALL_ORDERS_COUNT_ERR,\r\n  INVESTMENT_PER_MONTH_SUCCESS,\r\n  INVESTMENT_PER_MONTH_ERR,\r\n  USERS_PER_MONTH_SUCCESS,\r\n  USERS_PER_MONTH_ERR,\r\n  ORDERS_PER_DAY_SUCCESS,\r\n  ORDERS_PER_DAY_ERR,\r\n  ALL_TOKENS_COUNT_SUCCESS,\r\n  ALL_TOKENS_COUNT_ERR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  countElections: \"\",\r\n  countUsers: \"\",\r\n  countOrders: \"\",\r\n  countTokens: \"\",\r\n  investmentGraphDetail: [],\r\n  usersGraphDetail: [],\r\n  ordersGraphDetail: [],\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ALL_ELECTIONS_COUNT_SUCCESS:\r\n    case ALL_USERS_COUNT_SUCCESS:\r\n    case ALL_ORDERS_COUNT_SUCCESS:\r\n    case INVESTMENT_PER_MONTH_SUCCESS:\r\n    case USERS_PER_MONTH_SUCCESS:\r\n    case ORDERS_PER_DAY_SUCCESS:\r\n    case ALL_TOKENS_COUNT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n\r\n    case ALL_ELECTIONS_COUNT_ERR:\r\n    case ALL_USERS_COUNT_ERR:\r\n    case ALL_ORDERS_COUNT_ERR:\r\n    case INVESTMENT_PER_MONTH_ERR:\r\n    case USERS_PER_MONTH_ERR:\r\n    case ORDERS_PER_DAY_ERR:\r\n    case ALL_TOKENS_COUNT_ERR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Dashboard\\data\\index.js",[],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\SingleApproved\\index.js",["891","892"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { data } from \"../../Wallet/dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\nimport SingleApprovedItem from \"./singleApprovedItem\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getSingleApprovedList } from \"'../../../src/Services/adminRequest\";\r\n\r\nconst SingleApproved = ({\r\n  getSingleApprovedList,\r\n  adminRequest: { singleApprovedList },\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleApprovedList();\r\n  }, []);\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n\r\n  const countData = singleApprovedList && singleApprovedList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  return (\r\n    <div className=\"card w-100\">\r\n      <div className=\"table-responsive\">\r\n        <table\r\n          className=\"table hover dils-table\"\r\n          // width=\"100%\"\r\n          // cellspacing=\"0\"\r\n        >\r\n          <thead className=\"bg-cr-1 text-white\">\r\n            <tr>\r\n              <th>Account Name</th>\r\n              <th>Transfer Ammount</th>\r\n              <th>Transfer Fee</th>\r\n              <th>Total Ammount</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {singleApprovedList &&\r\n              singleApprovedList\r\n                .slice(\r\n                  screen * itemsPerScreen - itemsPerScreen,\r\n                  itemsPerScreen * screen\r\n                )\r\n                .map((item) => (\r\n                  <tr key={item.id}>\r\n                    <SingleApprovedItem item={item} />\r\n                  </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n        {(!singleApprovedList ||\r\n          (singleApprovedList && singleApprovedList.length === 0)) && (\r\n          <h4 className=\"text-center\">No Record Found ...</h4>\r\n        )}\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    adminRequest: state.adminRequest,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getSingleApprovedList,\r\n})(SingleApproved);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\SingleApproved\\singleApprovedItem.js",["893","894"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\n\r\nconst SingleApprovedItem = ({\r\n  item: { account_name, total_amount, transfer_amount, transfer_fee, id },\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <td className=\"text-dr-blu\">{account_name}</td>\r\n      <td className=\"fn-600\">{transfer_amount}</td>\r\n      <td>{transfer_fee}</td>\r\n      <td>{total_amount} </td>\r\n      <td>\r\n        <Link\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          to={Route.ADMIN_REQUESTS_DETAILS_BTN + `${id}`}\r\n        >\r\n          VIEW DETAILS\r\n        </Link>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SingleApprovedItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\ApprovedRequests\\index.js",["895"],"import React, { useState, useEffect } from \"react\";\r\n\r\n// import { data } from \"../../Wallet/dummyData\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport config from \"../../../Constants/config\";\r\nimport RequestsItem from \"./requestsItem\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getAllDepositesList } from \"../../../Redux/actions/actions\";\r\n\r\nconst ApprovedRequests = ({ getAllDepositesList, adminRequest }) => {\r\n  const { allDepositesList } = adminRequest;\r\n\r\n  useEffect(() => {\r\n    getAllDepositesList();\r\n  }, []);\r\n\r\n  //screen No. e.g; 1 or 2 or 3 etc\r\n  const [screen, setScreen] = useState(1);\r\n  //Total No Of Screens\r\n  const [count, setCount] = useState(0);\r\n  //No. of Items Per Screen\r\n  const itemsPerScreen = config.itemsPerScreen;\r\n\r\n  const handleChange = (event, value) => {\r\n    setScreen(value);\r\n  };\r\n\r\n  const countData = allDepositesList && allDepositesList.length;\r\n\r\n  //noOfScreens\r\n  useEffect(() => {\r\n    if (countData % itemsPerScreen === 0) {\r\n      setCount(Math.floor(countData / itemsPerScreen));\r\n    } else {\r\n      setCount(Math.floor(countData / itemsPerScreen) + 1);\r\n    }\r\n  }, [countData, itemsPerScreen]);\r\n\r\n  return (\r\n    <div className=\"card w-100\">\r\n      <div className=\"table-responsive\">\r\n        <table\r\n          className=\"table hover dils-table\"\r\n          // width=\"100%\"\r\n          // cellspacing=\"0\"\r\n        >\r\n          <thead className=\"bg-cr-1 text-white\">\r\n            <tr>\r\n              <th>Account Name</th>\r\n              <th>Transfer Ammount</th>\r\n              <th>Transfer Fee</th>\r\n              <th>Total Ammount</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {allDepositesList &&\r\n              allDepositesList\r\n                .slice(\r\n                  screen * itemsPerScreen - itemsPerScreen,\r\n                  itemsPerScreen * screen\r\n                )\r\n                .map((item) => (\r\n                  <tr key={item.id}>\r\n                    <RequestsItem item={item} />\r\n                  </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n        {(!allDepositesList ||\r\n          (allDepositesList && allDepositesList.length === 0)) && (\r\n          <h4 className=\"text-center\">No Record Found ...</h4>\r\n        )}\r\n        <div style={{ marginBottom: \"5px\" }}>\r\n          <Pagination\r\n            count={count}\r\n            shape=\"rounded\"\r\n            screen={screen}\r\n            onChange={handleChange}\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mpaStateToProps = (state) => {\r\n  return {\r\n    adminRequest: state.adminRequest,\r\n  };\r\n};\r\n\r\nexport default connect(mpaStateToProps, {\r\n  getAllDepositesList,\r\n})(ApprovedRequests);\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AdminRequest\\ApprovedRequests\\requestsItem.js",["896","897"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Route from \"../../../Constants/browserRoutes\";\r\n\r\nconst RequestsItem = ({\r\n  item: {\r\n    account_name,\r\n    total_amount,\r\n    transfer_amount,\r\n    status,\r\n    transfer_fee,\r\n    id,\r\n  },\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <td className=\"text-dr-blu\">{account_name}</td>\r\n      <td className=\"fn-600\">{transfer_amount}</td>\r\n      <td>{transfer_fee}</td>\r\n      <td>{total_amount} </td>\r\n      <td>{status} </td>\r\n      <td>\r\n        <Link\r\n          className=\"dls-btn bg-semi-black text-white\"\r\n          to={Route.ADMIN_REQUESTS_DETAILS_BTN + `${id}`}\r\n        >\r\n          VIEW DETAILS\r\n        </Link>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RequestsItem;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\Profile\\GoogleAuthQRModal.js",["898","899","900"],"import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst GoogleAuthQRModal = ({\r\n  showGoogleAuthQRcode,\r\n  setShowGoogleAuthQRcode,\r\n  googleQRcodeUrl,\r\n}) => {\r\n  const handleClose = () => {\r\n    setShowGoogleAuthQRcode(false);\r\n  };\r\n  const handleShow = () => setShowGoogleAuthQRcode(true);\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"sm\"\r\n      show={showGoogleAuthQRcode}\r\n      onHide={handleClose}\r\n      style={{ opacity: 1 }}\r\n      centered\r\n    >\r\n      <div className=\"modal-header border-0\">\r\n        <button type=\"button\" className=\"close\" onClick={handleClose}>\r\n          <span className=\"font-18\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <Modal.Body className=\"text-center\">\r\n        <p>Scan QRcode from Google Authenticatior mobile app</p>\r\n        <img src={googleQRcodeUrl} alt=\"...\" />\r\n        {/* <button\r\n          // to={googleQRcodeUrl}\r\n          target=\"_blank\"\r\n          // type=\"button\"\r\n          className=\"btn btn-primary w-25 btn-md\"\r\n          onClick={handleClose}\r\n        >\r\n          Ok\r\n        </button> */}\r\n        <h6>\r\n          If you have not scanned QRcode, please{\" \"}\r\n          <span style={{ color: \"red\" }}>TURN OFF</span> Google Authentication\r\n          button in order to avoid any inconvenience\r\n        </h6>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"border-0\"></Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GoogleAuthQRModal;\r\n","D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\auditLogs.js",["901"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\contentManagement.js",["902"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Redux\\reducers\\contentManagement.js",["903"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Services\\auditLogs.js",["904"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AuditLogs\\index.js",["905"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\ContentManagement\\EditContact\\index.js",["906"],"D:\\OptimusFox\\Naurillion\\dinisium-superadmin-portal\\src\\Components\\AuditLogs\\auditItem.js",[],{"ruleId":"907","replacedBy":"908"},{"ruleId":"909","replacedBy":"910"},{"ruleId":"911","severity":1,"message":"912","line":5,"column":10,"nodeType":"913","messageId":"914","endLine":5,"endColumn":18},{"ruleId":"911","severity":1,"message":"915","line":5,"column":20,"nodeType":"913","messageId":"914","endLine":5,"endColumn":25},{"ruleId":"911","severity":1,"message":"916","line":6,"column":8,"nodeType":"913","messageId":"914","endLine":6,"endColumn":21},{"ruleId":"911","severity":1,"message":"917","line":9,"column":10,"nodeType":"913","messageId":"914","endLine":9,"endColumn":17},{"ruleId":"911","severity":1,"message":"918","line":15,"column":3,"nodeType":"913","messageId":"914","endLine":15,"endColumn":14},{"ruleId":"919","severity":1,"message":"920","line":31,"column":1,"nodeType":"921","endLine":98,"endColumn":3},{"ruleId":"922","severity":1,"message":"923","line":53,"column":5,"nodeType":"924","messageId":"925","endLine":58,"endColumn":9},{"ruleId":"919","severity":1,"message":"920","line":42,"column":1,"nodeType":"921","endLine":145,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":27,"column":1,"nodeType":"921","endLine":66,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":35,"column":1,"nodeType":"921","endLine":117,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":26,"column":1,"nodeType":"921","endLine":61,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":19,"column":1,"nodeType":"921","endLine":52,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":19,"column":1,"nodeType":"921","endLine":42,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":12,"column":1,"nodeType":"921","endLine":31,"endColumn":3},{"ruleId":"926","severity":1,"message":"927","line":130,"column":6,"nodeType":"928","endLine":130,"endColumn":45,"suggestions":"929"},{"ruleId":"926","severity":1,"message":"927","line":107,"column":6,"nodeType":"928","endLine":107,"endColumn":32,"suggestions":"930"},{"ruleId":"911","severity":1,"message":"931","line":3,"column":8,"nodeType":"913","messageId":"914","endLine":3,"endColumn":17},{"ruleId":"926","severity":1,"message":"932","line":8,"column":6,"nodeType":"928","endLine":8,"endColumn":8,"suggestions":"933"},{"ruleId":"911","severity":1,"message":"934","line":3,"column":8,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"935","line":45,"column":6,"nodeType":"928","endLine":45,"endColumn":8,"suggestions":"936"},{"ruleId":"926","severity":1,"message":"937","line":25,"column":6,"nodeType":"928","endLine":25,"endColumn":8,"suggestions":"938"},{"ruleId":"926","severity":1,"message":"939","line":47,"column":6,"nodeType":"928","endLine":47,"endColumn":15,"suggestions":"940"},{"ruleId":"926","severity":1,"message":"941","line":52,"column":6,"nodeType":"928","endLine":52,"endColumn":8,"suggestions":"942"},{"ruleId":"926","severity":1,"message":"943","line":52,"column":6,"nodeType":"928","endLine":52,"endColumn":8,"suggestions":"944"},{"ruleId":"911","severity":1,"message":"945","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":26},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"911","severity":1,"message":"947","line":24,"column":10,"nodeType":"913","messageId":"914","endLine":24,"endColumn":20},{"ruleId":"911","severity":1,"message":"948","line":41,"column":10,"nodeType":"913","messageId":"914","endLine":41,"endColumn":15},{"ruleId":"926","severity":1,"message":"949","line":73,"column":6,"nodeType":"928","endLine":73,"endColumn":8,"suggestions":"950"},{"ruleId":"951","severity":1,"message":"952","line":152,"column":13,"nodeType":"953","endLine":160,"endColumn":15},{"ruleId":"926","severity":1,"message":"954","line":43,"column":6,"nodeType":"928","endLine":43,"endColumn":8,"suggestions":"955"},{"ruleId":"926","severity":1,"message":"956","line":29,"column":6,"nodeType":"928","endLine":29,"endColumn":39,"suggestions":"957"},{"ruleId":"926","severity":1,"message":"958","line":33,"column":6,"nodeType":"928","endLine":33,"endColumn":8,"suggestions":"959"},{"ruleId":"911","severity":1,"message":"931","line":5,"column":8,"nodeType":"913","messageId":"914","endLine":5,"endColumn":17},{"ruleId":"926","severity":1,"message":"960","line":42,"column":6,"nodeType":"928","endLine":42,"endColumn":8,"suggestions":"961"},{"ruleId":"911","severity":1,"message":"945","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":26},{"ruleId":"911","severity":1,"message":"962","line":3,"column":8,"nodeType":"913","messageId":"914","endLine":3,"endColumn":31},{"ruleId":"926","severity":1,"message":"963","line":33,"column":6,"nodeType":"928","endLine":33,"endColumn":8,"suggestions":"964"},{"ruleId":"926","severity":1,"message":"965","line":29,"column":6,"nodeType":"928","endLine":29,"endColumn":8,"suggestions":"966"},{"ruleId":"911","severity":1,"message":"967","line":15,"column":17,"nodeType":"913","messageId":"914","endLine":15,"endColumn":23},{"ruleId":"911","severity":1,"message":"968","line":10,"column":10,"nodeType":"913","messageId":"914","endLine":10,"endColumn":14},{"ruleId":"911","severity":1,"message":"969","line":10,"column":16,"nodeType":"913","messageId":"914","endLine":10,"endColumn":23},{"ruleId":"911","severity":1,"message":"970","line":5,"column":10,"nodeType":"913","messageId":"914","endLine":5,"endColumn":14},{"ruleId":"926","severity":1,"message":"954","line":39,"column":6,"nodeType":"928","endLine":39,"endColumn":8,"suggestions":"971"},{"ruleId":"907","replacedBy":"972"},{"ruleId":"909","replacedBy":"973"},{"ruleId":"926","severity":1,"message":"974","line":14,"column":6,"nodeType":"928","endLine":14,"endColumn":8,"suggestions":"975"},{"ruleId":"926","severity":1,"message":"956","line":29,"column":6,"nodeType":"928","endLine":29,"endColumn":39,"suggestions":"976"},{"ruleId":"926","severity":1,"message":"977","line":33,"column":6,"nodeType":"928","endLine":33,"endColumn":21,"suggestions":"978"},{"ruleId":"911","severity":1,"message":"945","line":1,"column":39,"nodeType":"913","messageId":"914","endLine":1,"endColumn":48},{"ruleId":"911","severity":1,"message":"946","line":1,"column":50,"nodeType":"913","messageId":"914","endLine":1,"endColumn":58},{"ruleId":"926","severity":1,"message":"979","line":22,"column":6,"nodeType":"928","endLine":22,"endColumn":8,"suggestions":"980"},{"ruleId":"911","severity":1,"message":"981","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":16},{"ruleId":"911","severity":1,"message":"982","line":6,"column":9,"nodeType":"913","messageId":"914","endLine":6,"endColumn":19},{"ruleId":"911","severity":1,"message":"981","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":16},{"ruleId":"911","severity":1,"message":"982","line":6,"column":9,"nodeType":"913","messageId":"914","endLine":6,"endColumn":19},{"ruleId":"907","replacedBy":"983"},{"ruleId":"909","replacedBy":"984"},{"ruleId":"911","severity":1,"message":"985","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"911","severity":1,"message":"970","line":5,"column":10,"nodeType":"913","messageId":"914","endLine":5,"endColumn":14},{"ruleId":"926","severity":1,"message":"986","line":35,"column":6,"nodeType":"928","endLine":35,"endColumn":40,"suggestions":"987"},{"ruleId":"926","severity":1,"message":"988","line":39,"column":6,"nodeType":"928","endLine":39,"endColumn":8,"suggestions":"989"},{"ruleId":"911","severity":1,"message":"985","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"986","line":35,"column":6,"nodeType":"928","endLine":35,"endColumn":40,"suggestions":"990"},{"ruleId":"926","severity":1,"message":"991","line":39,"column":6,"nodeType":"928","endLine":39,"endColumn":8,"suggestions":"992"},{"ruleId":"911","severity":1,"message":"993","line":12,"column":10,"nodeType":"913","messageId":"914","endLine":12,"endColumn":18},{"ruleId":"926","severity":1,"message":"994","line":22,"column":6,"nodeType":"928","endLine":22,"endColumn":8,"suggestions":"995"},{"ruleId":"926","severity":1,"message":"996","line":22,"column":6,"nodeType":"928","endLine":22,"endColumn":8,"suggestions":"997"},{"ruleId":"911","severity":1,"message":"998","line":5,"column":3,"nodeType":"913","messageId":"914","endLine":5,"endColumn":7},{"ruleId":"911","severity":1,"message":"999","line":2,"column":39,"nodeType":"913","messageId":"914","endLine":2,"endColumn":45},{"ruleId":"907","replacedBy":"1000"},{"ruleId":"909","replacedBy":"1001"},{"ruleId":"926","severity":1,"message":"1002","line":37,"column":6,"nodeType":"928","endLine":37,"endColumn":8,"suggestions":"1003"},{"ruleId":"926","severity":1,"message":"1004","line":38,"column":6,"nodeType":"928","endLine":38,"endColumn":8,"suggestions":"1005"},{"ruleId":"911","severity":1,"message":"915","line":16,"column":8,"nodeType":"913","messageId":"914","endLine":16,"endColumn":13},{"ruleId":"911","severity":1,"message":"915","line":16,"column":8,"nodeType":"913","messageId":"914","endLine":16,"endColumn":13},{"ruleId":"911","severity":1,"message":"967","line":54,"column":17,"nodeType":"913","messageId":"914","endLine":54,"endColumn":23},{"ruleId":"911","severity":1,"message":"1006","line":10,"column":3,"nodeType":"913","messageId":"914","endLine":10,"endColumn":16},{"ruleId":"911","severity":1,"message":"1007","line":29,"column":3,"nodeType":"913","messageId":"914","endLine":29,"endColumn":24},{"ruleId":"911","severity":1,"message":"1008","line":408,"column":13,"nodeType":"913","messageId":"914","endLine":408,"endColumn":19},{"ruleId":"911","severity":1,"message":"1008","line":487,"column":13,"nodeType":"913","messageId":"914","endLine":487,"endColumn":19},{"ruleId":"911","severity":1,"message":"1009","line":20,"column":22,"nodeType":"913","messageId":"914","endLine":20,"endColumn":36},{"ruleId":"911","severity":1,"message":"1010","line":14,"column":7,"nodeType":"913","messageId":"914","endLine":14,"endColumn":17},{"ruleId":"911","severity":1,"message":"985","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"986","line":36,"column":6,"nodeType":"928","endLine":36,"endColumn":40,"suggestions":"1011"},{"ruleId":"926","severity":1,"message":"1012","line":40,"column":6,"nodeType":"928","endLine":40,"endColumn":8,"suggestions":"1013"},{"ruleId":"911","severity":1,"message":"985","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"986","line":36,"column":6,"nodeType":"928","endLine":36,"endColumn":40,"suggestions":"1014"},{"ruleId":"926","severity":1,"message":"1015","line":40,"column":6,"nodeType":"928","endLine":40,"endColumn":8,"suggestions":"1016"},{"ruleId":"911","severity":1,"message":"1017","line":11,"column":11,"nodeType":"913","messageId":"914","endLine":11,"endColumn":20},{"ruleId":"926","severity":1,"message":"1018","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"1019"},{"ruleId":"926","severity":1,"message":"1020","line":11,"column":6,"nodeType":"928","endLine":11,"endColumn":8,"suggestions":"1021"},{"ruleId":"911","severity":1,"message":"970","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"926","severity":1,"message":"1022","line":38,"column":6,"nodeType":"928","endLine":38,"endColumn":8,"suggestions":"1023"},{"ruleId":"911","severity":1,"message":"970","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"926","severity":1,"message":"1022","line":38,"column":6,"nodeType":"928","endLine":38,"endColumn":8,"suggestions":"1024"},{"ruleId":"911","severity":1,"message":"1025","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":15},{"ruleId":"911","severity":1,"message":"985","line":6,"column":10,"nodeType":"913","messageId":"914","endLine":6,"endColumn":14},{"ruleId":"926","severity":1,"message":"1026","line":37,"column":6,"nodeType":"928","endLine":37,"endColumn":8,"suggestions":"1027"},{"ruleId":"911","severity":1,"message":"1025","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":15},{"ruleId":"911","severity":1,"message":"985","line":6,"column":10,"nodeType":"913","messageId":"914","endLine":6,"endColumn":14},{"ruleId":"926","severity":1,"message":"1028","line":37,"column":6,"nodeType":"928","endLine":37,"endColumn":8,"suggestions":"1029"},{"ruleId":"911","severity":1,"message":"970","line":5,"column":10,"nodeType":"913","messageId":"914","endLine":5,"endColumn":14},{"ruleId":"926","severity":1,"message":"1030","line":37,"column":6,"nodeType":"928","endLine":37,"endColumn":8,"suggestions":"1031"},{"ruleId":"911","severity":1,"message":"970","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"1032","line":38,"column":6,"nodeType":"928","endLine":38,"endColumn":8,"suggestions":"1033"},{"ruleId":"926","severity":1,"message":"1034","line":38,"column":6,"nodeType":"928","endLine":38,"endColumn":8,"suggestions":"1035"},{"ruleId":"911","severity":1,"message":"985","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"911","severity":1,"message":"985","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"911","severity":1,"message":"1036","line":13,"column":9,"nodeType":"913","messageId":"914","endLine":13,"endColumn":22},{"ruleId":"1037","severity":1,"message":"1038","line":82,"column":3,"nodeType":"1039","messageId":"925","endLine":82,"endColumn":29},{"ruleId":"911","severity":1,"message":"985","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"911","severity":1,"message":"985","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"911","severity":1,"message":"985","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":49,"suggestions":"1040"},{"ruleId":"911","severity":1,"message":"1041","line":18,"column":18,"nodeType":"913","messageId":"914","endLine":18,"endColumn":21},{"ruleId":"919","severity":1,"message":"920","line":25,"column":1,"nodeType":"921","endLine":52,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":23,"column":1,"nodeType":"921","endLine":54,"endColumn":3},{"ruleId":"911","severity":1,"message":"970","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":14},{"ruleId":"911","severity":1,"message":"1042","line":10,"column":3,"nodeType":"913","messageId":"914","endLine":10,"endColumn":18},{"ruleId":"926","severity":1,"message":"1043","line":20,"column":6,"nodeType":"928","endLine":20,"endColumn":8,"suggestions":"1044"},{"ruleId":"1045","severity":1,"message":"1046","line":106,"column":15,"nodeType":"953","endLine":106,"endColumn":73},{"ruleId":"1045","severity":1,"message":"1046","line":120,"column":15,"nodeType":"953","endLine":120,"endColumn":73},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"926","severity":1,"message":"1047","line":20,"column":6,"nodeType":"928","endLine":20,"endColumn":8,"suggestions":"1048"},{"ruleId":"911","severity":1,"message":"1010","line":11,"column":7,"nodeType":"913","messageId":"914","endLine":11,"endColumn":17},{"ruleId":"919","severity":1,"message":"920","line":10,"column":1,"nodeType":"921","endLine":29,"endColumn":3},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"1045","severity":1,"message":"1046","line":49,"column":25,"nodeType":"953","endLine":49,"endColumn":78},{"ruleId":"1045","severity":1,"message":"1046","line":61,"column":25,"nodeType":"953","endLine":61,"endColumn":78},{"ruleId":"1045","severity":1,"message":"1046","line":73,"column":25,"nodeType":"953","endLine":73,"endColumn":78},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"911","severity":1,"message":"981","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":16},{"ruleId":"911","severity":1,"message":"982","line":6,"column":9,"nodeType":"913","messageId":"914","endLine":6,"endColumn":19},{"ruleId":"911","severity":1,"message":"1049","line":20,"column":8,"nodeType":"913","messageId":"914","endLine":20,"endColumn":14},{"ruleId":"911","severity":1,"message":"1010","line":24,"column":7,"nodeType":"913","messageId":"914","endLine":24,"endColumn":17},{"ruleId":"919","severity":1,"message":"920","line":31,"column":1,"nodeType":"921","endLine":62,"endColumn":3},{"ruleId":"911","severity":1,"message":"970","line":3,"column":10,"nodeType":"913","messageId":"914","endLine":3,"endColumn":14},{"ruleId":"926","severity":1,"message":"1050","line":17,"column":6,"nodeType":"928","endLine":17,"endColumn":8,"suggestions":"1051"},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"926","severity":1,"message":"1052","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"1053"},{"ruleId":"911","severity":1,"message":"946","line":1,"column":17,"nodeType":"913","messageId":"914","endLine":1,"endColumn":25},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},{"ruleId":"911","severity":1,"message":"981","line":2,"column":10,"nodeType":"913","messageId":"914","endLine":2,"endColumn":16},{"ruleId":"911","severity":1,"message":"982","line":14,"column":9,"nodeType":"913","messageId":"914","endLine":14,"endColumn":19},{"ruleId":"911","severity":1,"message":"1054","line":16,"column":9,"nodeType":"913","messageId":"914","endLine":16,"endColumn":13},{"ruleId":"919","severity":1,"message":"920","line":10,"column":1,"nodeType":"921","endLine":29,"endColumn":3},{"ruleId":"911","severity":1,"message":"1010","line":16,"column":7,"nodeType":"913","messageId":"914","endLine":16,"endColumn":17},{"ruleId":"919","severity":1,"message":"920","line":20,"column":1,"nodeType":"921","endLine":43,"endColumn":3},{"ruleId":"911","severity":1,"message":"1010","line":11,"column":7,"nodeType":"913","messageId":"914","endLine":11,"endColumn":17},{"ruleId":"926","severity":1,"message":"1055","line":33,"column":6,"nodeType":"928","endLine":33,"endColumn":8,"suggestions":"1056"},{"ruleId":"911","severity":1,"message":"945","line":1,"column":27,"nodeType":"913","messageId":"914","endLine":1,"endColumn":36},"no-native-reassign",["1057"],"no-negated-in-lhs",["1058"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'browserRoutes' is defined but never used.","'connect' is defined but never used.","'ALL_ITO_ERR' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1059"],["1060"],"'SelectITO' is defined but never used.","React Hook useEffect has a missing dependency: 'getOnlyClosedVoting'. Either include it or remove the dependency array. If 'getOnlyClosedVoting' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1061"],"'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'getVoteDetailById', 'location', and 'match.params.id'. Either include them or remove the dependency array. If 'getVoteDetailById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1062"],"React Hook useEffect has a missing dependency: 'getAllItos'. Either include it or remove the dependency array. If 'getAllItos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1063"],"React Hook useEffect has missing dependencies: 'getAdminsById' and 'otherProps.match.params.id'. Either include them or remove the dependency array. If 'getAdminsById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1064"],"React Hook useEffect has missing dependencies: 'getAvailableITO' and 'otherProps.match.params.id'. Either include them or remove the dependency array. If 'getAvailableITO' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1065"],"React Hook useEffect has a missing dependency: 'getAllTokensList'. Either include it or remove the dependency array. If 'getAllTokensList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1066"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'verifyType' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userDetails.is_email_verification_on', 'userDetails.is_google_authentication_on', and 'userDetails.is_number_verification_on'. Either include them or remove the dependency array.",["1067"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getInvestmentDetailByUserId' and 'match.params.id'. Either include them or remove the dependency array. If 'getInvestmentDetailByUserId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1068"],"React Hook useEffect has an unnecessary dependency: 'config.userPerScreen'. Either exclude it or remove the dependency array. Outer scope values like 'config.userPerScreen' aren't valid dependencies because mutating them doesn't re-render the component.",["1069"],"React Hook useEffect has a missing dependency: 'getUsersList'. Either include it or remove the dependency array. If 'getUsersList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1070"],"React Hook useEffect has missing dependencies: 'getKycById' and 'match.params.id'. Either include them or remove the dependency array. If 'getKycById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1071"],"'SubmitConfirmationModal' is defined but never used.","React Hook useEffect has a missing dependency: 'getCompletedOrdersList'. Either include it or remove the dependency array. If 'getCompletedOrdersList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1072"],"React Hook useEffect has missing dependencies: 'getItoById' and 'match.params.id'. Either include them or remove the dependency array. If 'getItoById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1073"],"'status' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'data' is defined but never used.",["1074"],["1057"],["1058"],"React Hook useEffect has missing dependencies: 'getUserProfile' and 'id'. Either include them or remove the dependency array. If 'getUserProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1075"],["1076"],"React Hook useEffect has a missing dependency: 'getAdminsList'. Either include it or remove the dependency array. If 'getAdminsList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1077"],"React Hook useEffect has missing dependencies: 'countAllElections', 'countAllExchangeOrders', 'countAllRegisteredUsers', and 'countAllTokens'. Either include them or remove the dependency array. If 'countAllElections' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1078"],"'Button' is defined but never used.","'handleShow' is assigned a value but never used.",["1057"],["1058"],"'Link' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'config.itemsPerScreen'. Either exclude it or remove the dependency array. Outer scope values like 'config.itemsPerScreen' aren't valid dependencies because mutating them doesn't re-render the component.",["1079"],"React Hook useEffect has a missing dependency: 'getRejectedKyc'. Either include it or remove the dependency array. If 'getRejectedKyc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1080"],["1081"],"React Hook useEffect has a missing dependency: 'getPendingKyc'. Either include it or remove the dependency array. If 'getPendingKyc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1082"],"'userData' is defined but never used.","React Hook useEffect has a missing dependency: 'countRegiteredUsersPerMonth'. Either include it or remove the dependency array. If 'countRegiteredUsersPerMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1083"],"React Hook useEffect has a missing dependency: 'countInvestmentPerMonth'. Either include it or remove the dependency array. If 'countInvestmentPerMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1084"],"'Cell' is defined but never used.","'Legend' is defined but never used.",["1057"],["1058"],"React Hook useEffect has a missing dependency: 'getPastIto'. Either include it or remove the dependency array. If 'getPastIto' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1085"],"React Hook useEffect has a missing dependency: 'getUpcomingIto'. Either include it or remove the dependency array. If 'getUpcomingIto' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1086"],"'LOGIN_MSG_ERR' is defined but never used.","'SET_AUTH_VERIFICATION' is defined but never used.","'errors' is assigned a value but never used.","'userManagement' is defined but never used.","'alertToast' is assigned a value but never used.",["1087"],"React Hook useEffect has a missing dependency: 'getSingleApprovedKyc'. Either include it or remove the dependency array. If 'getSingleApprovedKyc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1088"],["1089"],"React Hook useEffect has a missing dependency: 'getApprovedKyc'. Either include it or remove the dependency array. If 'getApprovedKyc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1090"],"'tokenList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTokentList'. Either include it or remove the dependency array. If 'getTokentList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1091"],"React Hook useEffect has a missing dependency: 'getWalletDetails'. Either include it or remove the dependency array. If 'getWalletDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1092"],"React Hook useEffect has a missing dependency: 'getUnholdTokensList'. Either include it or remove the dependency array. If 'getUnholdTokensList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1093"],["1094"],"'data1' is defined but never used.","React Hook useEffect has a missing dependency: 'getBuyRequestsList'. Either include it or remove the dependency array. If 'getBuyRequestsList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1095"],"React Hook useEffect has a missing dependency: 'getSellRequestsList'. Either include it or remove the dependency array. If 'getSellRequestsList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1096"],"React Hook useEffect has a missing dependency: 'getOngoingIto'. Either include it or remove the dependency array. If 'getOngoingIto' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1097"],"React Hook useEffect has a missing dependency: 'getOnholdTokensList'. Either include it or remove the dependency array. If 'getOnholdTokensList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1098"],"React Hook useEffect has a missing dependency: 'getTokensList'. Either include it or remove the dependency array. If 'getTokensList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1099"],"'toCreateToken' is assigned a value but never used.","no-dupe-keys","Duplicate key 'GET_PENDING_DEPOSITES_LIST'.","ObjectExpression",["1100"],"'ito' is defined but never used.","'confrimDeposite' is defined but never used.","React Hook useEffect has a missing dependency: 'getDepositesList'. Either include it or remove the dependency array. If 'getDepositesList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1101"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'getDepositesById' and 'match.params'. Either include them or remove the dependency array. If 'getDepositesById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1102"],"'Moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getSingleApprovedList'. Either include it or remove the dependency array. If 'getSingleApprovedList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1103"],"React Hook useEffect has a missing dependency: 'getAllDepositesList'. Either include it or remove the dependency array. If 'getAllDepositesList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1104"],"'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuditLogsList'. Either include it or remove the dependency array. If 'getAuditLogsList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1105"],"no-global-assign","no-unsafe-negation",{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1124","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1126","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1126","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1126","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1126","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1126","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1168","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1189","fix":"1190"},{"desc":"1191","fix":"1192"},"Update the dependencies array to be: [getCollapse]",{"range":"1193","text":"1194"},"Update the dependencies array to be: []",{"range":"1195","text":"1196"},"Update the dependencies array to be: [getOnlyClosedVoting]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [getVoteDetailById, location, match.params.id]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [getAllItos]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [getAdminsById, otherProps.match.params.id, success]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [getAvailableITO, otherProps.match.params.id]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [getAllTokensList]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [userDetails.is_email_verification_on, userDetails.is_google_authentication_on, userDetails.is_number_verification_on]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [getInvestmentDetailByUserId, match.params.id]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [countData]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [getUsersList]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [getKycById, match.params.id]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [getCompletedOrdersList]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [getItoById, match.params.id]",{"range":"1221","text":"1222"},{"range":"1223","text":"1212"},"Update the dependencies array to be: [getUserProfile, id]",{"range":"1224","text":"1225"},{"range":"1226","text":"1214"},"Update the dependencies array to be: [getAdminsList, selectedItoId]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [countAllElections, countAllExchangeOrders, countAllRegisteredUsers, countAllTokens]",{"range":"1229","text":"1230"},{"range":"1231","text":"1214"},"Update the dependencies array to be: [getRejectedKyc]",{"range":"1232","text":"1233"},{"range":"1234","text":"1214"},"Update the dependencies array to be: [getPendingKyc]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [countRegiteredUsersPerMonth]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [countInvestmentPerMonth]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [getPastIto]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [getUpcomingIto]",{"range":"1243","text":"1244"},{"range":"1245","text":"1214"},"Update the dependencies array to be: [getSingleApprovedKyc]",{"range":"1246","text":"1247"},{"range":"1248","text":"1214"},"Update the dependencies array to be: [getApprovedKyc]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [getTokentList]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [getWalletDetails]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [getUnholdTokensList]",{"range":"1255","text":"1256"},{"range":"1257","text":"1256"},"Update the dependencies array to be: [getBuyRequestsList]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [getSellRequestsList]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [getOngoingIto]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [getOnholdTokensList]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [getTokensList]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [color, item.url]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [getDepositesList]",{"range":"1270","text":"1271"},"Update the dependencies array to be: [getDepositesById, match.params]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [getSingleApprovedList]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [getAllDepositesList]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [getAuditLogsList]",{"range":"1278","text":"1279"},[5465,5504],"[getCollapse]",[4360,4386],"[]",[345,347],"[getOnlyClosedVoting]",[1400,1402],"[getVoteDetailById, location, match.params.id]",[636,638],"[getAllItos]",[1081,1090],"[getAdminsById, otherProps.match.params.id, success]",[1190,1192],"[getAvailableITO, otherProps.match.params.id]",[1431,1433],"[getAllTokensList]",[2235,2237],"[userDetails.is_email_verification_on, userDetails.is_google_authentication_on, userDetails.is_number_verification_on]",[1325,1327],"[getInvestmentDetailByUserId, match.params.id]",[982,1015],"[countData]",[1068,1070],"[getUsersList]",[1063,1065],"[getKycById, match.params.id]",[1114,1116],"[getCompletedOrdersList]",[863,865],"[getItoById, match.params.id]",[1158,1160],[429,431],"[getUserProfile, id]",[951,984],[1051,1066],"[getAdminsList, selectedItoId]",[569,571],"[countAllElections, countAllExchangeOrders, countAllRegisteredUsers, countAllTokens]",[1053,1087],[1142,1144],"[getRejectedKyc]",[1050,1084],[1138,1140],"[getPendingKyc]",[500,502],"[countRegiteredUsersPerMonth]",[508,510],"[countInvestmentPerMonth]",[1027,1029],"[getPastIto]",[1057,1059],"[getUpcomingIto]",[1079,1113],[1174,1176],"[getSingleApprovedKyc]",[1059,1093],[1148,1150],"[getApprovedKyc]",[493,495],"[getTokentList]",[312,314],"[getWalletDetails]",[1134,1136],"[getUnholdTokensList]",[1143,1145],[1182,1184],"[getBuyRequestsList]",[1191,1193],"[getSellRequestsList]",[1044,1046],"[getOngoingIto]",[1134,1136],"[getOnholdTokensList]",[1111,1113],"[getTokensList]",[499,542],"[color, item.url]",[676,678],"[getDepositesList]",[429,431],"[getDepositesById, match.params]",[544,546],"[getSingleApprovedList]",[542,544],"[getAllDepositesList]",[1007,1009],"[getAuditLogsList]"]